<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Flash\Project.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Flash\Project.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Wed Jul 08 17:35:37 2020
<BR><P>
<H3>Maximum Stack Usage =        648 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
_WinCommonUserManageCallback &rArr; _WinCommonUserManageKeyEnter &rArr; WIN_Enter &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[467]">CPU_IntDis</a>
 <LI><a href="#[9db]">CPU_IntEn</a>
 <LI><a href="#[9dc]">CPU_SR_Save</a>
 <LI><a href="#[9dd]">CPU_SR_Restore</a>
 <LI><a href="#[9de]">CPU_CntLeadZeros</a>
 <LI><a href="#[9df]">CPU_RevBits</a>
 <LI><a href="#[9e0]">CPU_WaitForInt</a>
 <LI><a href="#[9e1]">CPU_WaitForExcept</a>
 <LI><a href="#[24c]">OS_CPU_SR_Save</a>
 <LI><a href="#[24d]">OS_CPU_SR_Restore</a>
 <LI><a href="#[276]">OSStartHighRdy</a>
 <LI><a href="#[257]">OSCtxSw</a>
 <LI><a href="#[272]">OSIntCtxSw</a>
 <LI><a href="#[30]">OS_CPU_PendSVHandler</a>
 <LI><a href="#[8e4]">[Anonymous Symbol]</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[29]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[29]">NMI_Handler</a><BR>
 <LI><a href="#[2a]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2a]">HardFault_Handler</a><BR>
 <LI><a href="#[2b]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2b]">MemManage_Handler</a><BR>
 <LI><a href="#[2c]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2c]">BusFault_Handler</a><BR>
 <LI><a href="#[2d]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2d]">UsageFault_Handler</a><BR>
 <LI><a href="#[2e]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2e]">SVC_Handler</a><BR>
 <LI><a href="#[2f]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2f]">DebugMon_Handler</a><BR>
 <LI><a href="#[43]">ADC0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[43]">ADC0_IRQHandler</a><BR>
 <LI><a href="#[7f0]">_Findy1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7f0]">_Findy1</a><BR>
 <LI><a href="#[7f3]">_Findx1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7f3]">_Findx1</a><BR>
 <LI><a href="#[7f2]">_Findx0</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7f2]">_Findx0</a><BR>
 <LI><a href="#[807]">WM_SendToParent</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[70e]">WM__SendMessage</a><BR>
 <LI><a href="#[80b]">_GetDialogItem</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[80b]">_GetDialogItem</a><BR>
 <LI><a href="#[5b7]">_Alloc</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5b9]">_InitOnce</a><BR>
 <LI><a href="#[7e2]">WM__InvalidateRect</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7e2]">WM__InvalidateRect</a><BR>
 <LI><a href="#[7ee]">WM_InvalidateWindowAndDescsEx</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7ee]">WM_InvalidateWindowAndDescsEx</a><BR>
 <LI><a href="#[7ed]">WM__InvalidateDrawAndDescs</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7ed]">WM__InvalidateDrawAndDescs</a><BR>
 <LI><a href="#[944]">WM__ForEachDesc</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[944]">WM__ForEachDesc</a><BR>
 <LI><a href="#[8b6]">WM_ResizeWindow</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7cc]">WM__UpdateChildPositions</a><BR>
 <LI><a href="#[94a]">_MoveDescendents</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[94a]">_MoveDescendents</a><BR>
 <LI><a href="#[8e7]">_GetDialogItem</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8e7]">_GetDialogItem</a><BR>
 <LI><a href="#[34f]">WM_DeleteWindow</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[34f]">WM_DeleteWindow</a><BR>
 <LI><a href="#[7fd]">_PaintTransChildren</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7fd]">_PaintTransChildren</a><BR>
 <LI><a href="#[80c]">WM_InvalidateWindowAndDescs</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[80c]">WM_InvalidateWindowAndDescs</a><BR>
 <LI><a href="#[16e]">_Color2IndexBulk</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16e]">_Color2IndexBulk</a><BR>
 <LI><a href="#[16f]">_Index2ColorBulk</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16f]">_Index2ColorBulk</a><BR>
 <LI><a href="#[194]">_Color2IndexBulk</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[194]">_Color2IndexBulk</a><BR>
 <LI><a href="#[195]">_Index2ColorBulk</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[195]">_Index2ColorBulk</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[43]">ADC0_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[47]">ADC1_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[5f]">ATIMER_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[99]">App_TaskGUI</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[9d]">App_TaskStart</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[98]">App_TaskStates</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[9a]">App_TaskUART</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[9b]">App_TaskUART0</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[9c]">App_TaskUART2</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[ef]">BUTTON_Callback</a> from BUTTON.o(.text) referenced from BUTTON.o(.text)
 <LI><a href="#[15b]">BUTTON_CreateIndirect</a> from BUTTON_CreateIndirect.o(.text) referenced 5 times from framewindlg.o(.constdata)
 <LI><a href="#[18]">BUTTON_DrawSkinFlex</a> from BUTTON_SkinFlex.o(.text) referenced 2 times from BUTTON.o(.data)
 <LI><a href="#[2c]">BusFault_Handler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[63]">CAN0_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[5d]">CAN1_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[f2]">CHECKBOX_Callback</a> from CHECKBOX.o(.text) referenced from CHECKBOX.o(.text)
 <LI><a href="#[1d]">CHECKBOX_DrawSkinFlex</a> from CHECKBOX_SkinFlex.o(.text) referenced 2 times from CHECKBOX.o(.data)
 <LI><a href="#[1c]">CHECKBOX__GetButtonSize</a> from CHECKBOX.o(.text) referenced 2 times from CHECKBOX.o(.data)
 <LI><a href="#[32]">DAC_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[34]">DMA_IRQHandler</a> from temperature.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[2f]">DebugMon_Handler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[f3]">EDIT_Callback</a> from EDIT.o(.text) referenced 2 times from EDIT.o(.text)
 <LI><a href="#[37]">ETH_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[5c]">EVRT_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[35]">EZH_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[36]">FLASH_EEPROM_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[f6]">FRAMEWIN_Callback</a> from FRAMEWIN.o(.text) referenced from FRAMEWIN.o(.text)
 <LI><a href="#[a]">FRAMEWIN_DrawSkinFlex</a> from FRAMEWIN_SkinFlex.o(.text) referenced 4 times from FRAMEWIN_Skin.o(.data)
 <LI><a href="#[1e]">FRAMEWIN__GetBorderSize</a> from FRAMEWIN.o(.text) referenced 2 times from FRAMEWIN.o(.data)
 <LI><a href="#[f7]">FRAMEWIN__cbClient</a> from FRAMEWIN.o(.text) referenced from FRAMEWIN.o(.text)
 <LI><a href="#[5a]">GINT0_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[5b]">GINT1_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[52]">GPIO0_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[53]">GPIO1_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[54]">GPIO2_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[55]">GPIO3_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[56]">GPIO4_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[57]">GPIO5_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[58]">GPIO6_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[59]">GPIO7_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[185]">GUIMONO_DispChar</a> from GUI_CharM.o(.text) referenced 2 times from F6x8.o(.rodata)
 <LI><a href="#[186]">GUIMONO_GetCharDistX</a> from GUI_CharM.o(.text) referenced 2 times from F6x8.o(.rodata)
 <LI><a href="#[187]">GUIMONO_GetFontInfo</a> from GUI_CharM.o(.text) referenced 2 times from F6x8.o(.rodata)
 <LI><a href="#[188]">GUIMONO_IsInFont</a> from GUI_CharM.o(.text) referenced 2 times from F6x8.o(.rodata)
 <LI><a href="#[1b8]">GUIPROP_AA4_DispChar</a> from GUIAA_Char4.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1b9]">GUIPROP_AA4_GetCharDistX</a> from GUIAA_Char4.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1ba]">GUIPROP_AA4_GetFontInfo</a> from GUIAA_Char4.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1bb]">GUIPROP_AA4_IsInFont</a> from GUIAA_Char4.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[181]">GUIPROP_DispChar</a> from GUI_CharP.o(.text) referenced 2 times from winwindow.o(.constdata)
 <LI><a href="#[181]">GUIPROP_DispChar</a> from GUI_CharP.o(.text) referenced 4 times from F16_1.o(.rodata)
 <LI><a href="#[1f]">GUIPROP_EXT__ClearLine</a> from GUI_EncExt.o(.text) referenced 2 times from GUI_EncExt.o(.data)
 <LI><a href="#[182]">GUIPROP_GetCharDistX</a> from GUI_CharP.o(.text) referenced 2 times from winwindow.o(.constdata)
 <LI><a href="#[182]">GUIPROP_GetCharDistX</a> from GUI_CharP.o(.text) referenced 4 times from F16_1.o(.rodata)
 <LI><a href="#[183]">GUIPROP_GetFontInfo</a> from GUI_CharP.o(.text) referenced 2 times from winwindow.o(.constdata)
 <LI><a href="#[183]">GUIPROP_GetFontInfo</a> from GUI_CharP.o(.text) referenced 4 times from F16_1.o(.rodata)
 <LI><a href="#[184]">GUIPROP_IsInFont</a> from GUI_CharP.o(.text) referenced 2 times from winwindow.o(.constdata)
 <LI><a href="#[184]">GUIPROP_IsInFont</a> from GUI_CharP.o(.text) referenced 4 times from F16_1.o(.rodata)
 <LI><a href="#[152]">GUI_DrawGradientH</a> from GUI_DrawGradient.o(.text) referenced from SCROLLBAR_SkinFlex.o(.text)
 <LI><a href="#[155]">GUI_DrawGradientV</a> from GUI_DrawGradient.o(.text) referenced from SCROLLBAR_SkinFlex.o(.text)
 <LI><a href="#[104]">GUI_MEMDEV_Paint1Static</a> from GUIDEV_StaticDevices.o(.text) referenced from WM.o(.text)
 <LI><a href="#[12b]">GUI_MEMDEV__WriteToActiveAlpha</a> from GUIDEV_WriteToActiveAlpha.o(.text) referenced from GUIDEV_32.o(.text)
 <LI><a href="#[10c]">GUI_SetAlpha</a> from GUI_SetAlpha.o(.text) referenced from GUI_SetAlpha.o(.text)
 <LI><a href="#[11e]">GUI_TIMER_Exec</a> from GUI_Timer.o(.text) referenced from GUI_Timer.o(.text)
 <LI><a href="#[139]">GUI_USAGE_BM_AddHLine</a> from GUIDEV_UsageBM.o(.text) referenced from GUIDEV_UsageBM.o(.text)
 <LI><a href="#[138]">GUI_USAGE_BM_AddPixel</a> from GUIDEV_UsageBM.o(.text) referenced from GUIDEV_UsageBM.o(.text)
 <LI><a href="#[13a]">GUI_USAGE_BM_Clear</a> from GUIDEV_UsageBM.o(.text) referenced from GUIDEV_UsageBM.o(.text)
 <LI><a href="#[13c]">GUI_USAGE_BM_GetNextDirty</a> from GUIDEV_UsageBM.o(.text) referenced from GUIDEV_UsageBM.o(.text)
 <LI><a href="#[6]">GUI_X_ExecIdle</a> from gui_x.o(.text) referenced 2 times from GUI_WaitEvent.o(.data)
 <LI><a href="#[7]">GUI__MixColors</a> from GUI__Alpha.o(.text) referenced 2 times from GUI__Alpha.o(.data)
 <LI><a href="#[20]">GUI__MixColorsBulk</a> from GUI__Alpha.o(.text) referenced 2 times from GUI__Alpha.o(.data)
 <LI><a href="#[140]">HEADER_Callback</a> from HEADER.o(.text) referenced from HEADER.o(.text)
 <LI><a href="#[d]">HEADER_DrawSkinFlex</a> from HEADER_SkinFlex.o(.text) referenced 2 times from HEADER.o(.data)
 <LI><a href="#[2a]">HardFault_Handler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[44]">I2C0_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[45]">I2C1_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[4e]">I2S0_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[4f]">I2S1_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[f8]">IMAGE_Callback</a> from IMAGE.o(.text) referenced 2 times from IMAGE.o(.text)
 <LI><a href="#[23]">LCD_AA_MixColors16</a> from LCD_AA.o(.text) referenced 2 times from LCD_AA.o(.data)
 <LI><a href="#[23]">LCD_AA_MixColors16</a> from LCD_AA.o(.text) referenced from LCD_AA.o(.text)
 <LI><a href="#[a8]">LCD_DrawHLine</a> from LCD.o(.text) referenced 3 times from GUI_Core.o(.text)
 <LI><a href="#[a9]">LCD_DrawPixel</a> from LCD.o(.text) referenced from GUI_Core.o(.text)
 <LI><a href="#[af]">LCD_DrawVLine</a> from LCD.o(.text) referenced 2 times from GUI_DrawGradient.o(.text)
 <LI><a href="#[0]">LCD_GetpPalConvTableBM</a> from LCD_Color.o(.text) referenced 2 times from GUI_Core.o(.data)
 <LI><a href="#[39]">LCD_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[aa]">LCD_Index2Color_555</a> from GUICC_555_Index2Color.o(.text) referenced from GUI_DrawBitmap_555.o(.rodata)
 <LI><a href="#[aa]">LCD_Index2Color_555</a> from GUICC_555_Index2Color.o(.text) referenced from GUI_DrawBitmap_555.o(.text)
 <LI><a href="#[124]">LCD_Index2Color_888</a> from GUICC_888_Index2Color.o(.text) referenced from GUICC_888.o(.rodata)
 <LI><a href="#[124]">LCD_Index2Color_888</a> from GUICC_888_Index2Color.o(.text) referenced from GUI__Alpha.o(.text)
 <LI><a href="#[ac]">LCD_Index2Color_8888</a> from GUICC_8888_Index2Color.o(.text) referenced 2 times from GUI_DrawBitmap_8888.o(.rodata)
 <LI><a href="#[ac]">LCD_Index2Color_8888</a> from GUICC_8888_Index2Color.o(.text) referenced 3 times from GUI_DrawBitmap_8888.o(.text)
 <LI><a href="#[ab]">LCD_Index2Color_M555</a> from GUICC_M555_Index2Color.o(.text) referenced from GUI_DrawBitmap_555.o(.rodata)
 <LI><a href="#[ab]">LCD_Index2Color_M555</a> from GUICC_M555_Index2Color.o(.text) referenced from GUI_DrawBitmap_555.o(.text)
 <LI><a href="#[ad]">LCD_Index2Color_M8888I</a> from GUICC_M8888I_Index2Color.o(.text) referenced from GUI_DrawBitmap_8888.o(.rodata)
 <LI><a href="#[ad]">LCD_Index2Color_M8888I</a> from GUICC_M8888I_Index2Color.o(.text) referenced from GUI_DrawBitmap_8888.o(.text)
 <LI><a href="#[a6]">LCD_SetPixelAA4_NoTrans</a> from LCD_AA.o(.text) referenced 2 times from GUIAA_Lib.o(.text)
 <LI><a href="#[a3]">LCD_SetPixelAA4_Trans</a> from LCD_AA.o(.text) referenced 2 times from GUIAA_Lib.o(.text)
 <LI><a href="#[128]">LCD_SetPixelAA8_NoTrans</a> from LCD_AA.o(.text) referenced from LCD_AA.o(.text)
 <LI><a href="#[129]">LCD_SetPixelAA8_Trans</a> from LCD_AA.o(.text) referenced from LCD_AA.o(.text)
 <LI><a href="#[fd]">LISTBOX_Callback</a> from LISTBOX.o(.text) referenced from LISTBOX.o(.text)
 <LI><a href="#[fe]">LISTBOX_OwnerDraw</a> from LISTBOX.o(.text) referenced 2 times from LISTBOX.o(.text)
 <LI><a href="#[ff]">LISTVIEW_Callback</a> from LISTVIEW.o(.text) referenced from LISTVIEW.o(.text)
 <LI><a href="#[15a]">LISTVIEW_CreateIndirect</a> from LISTVIEW_CreateIndirect.o(.text) referenced from framewindlg.o(.constdata)
 <LI><a href="#[100]">LISTVIEW_OwnerDraw</a> from LISTVIEW.o(.text) referenced from LISTVIEW.o(.text)
 <LI><a href="#[15f]">ListBoxShowMainInfoInterface</a> from winwindow.o(.text) referenced from win.o(.constdata)
 <LI><a href="#[33]">M0CORE_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[62]">M0s_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[42]">MCPWM_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[2b]">MemManage_Handler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[29]">NMI_Handler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[67]">OSTaskSwHook</a> from os_cpu_c.o(.text) referenced from os_cpu_a.o(.text)
 <LI><a href="#[68]">OSTmr_Task</a> from os_tmr.o(.text) referenced from os_tmr.o(.text)
 <LI><a href="#[30]">OS_CPU_PendSVHandler</a> from os_cpu_a.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[31]">OS_CPU_SysTickHandler</a> from os_cpu_c.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[263]">OS_TaskIdle</a> from os_core.o(.text) referenced from os_core.o(.text)
 <LI><a href="#[25d]">OS_TaskStat</a> from os_core.o(.text) referenced from os_core.o(.text)
 <LI><a href="#[101]">PROGBAR_Callback</a> from PROGBAR.o(.text) referenced from PROGBAR.o(.text)
 <LI><a href="#[2]">PROGBAR_DrawSkinFlex</a> from PROGBAR_SkinFlex.o(.text) referenced 2 times from PROGBAR.o(.data)
 <LI><a href="#[64]">QEI_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[3d]">RIT_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[60]">RTC_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[28]">Reset_Handler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[143]">SCROLLBAR_Callback</a> from SCROLLBAR.o(.text) referenced from SCROLLBAR.o(.text)
 <LI><a href="#[16]">SCROLLBAR_DrawSkinFlex</a> from SCROLLBAR_SkinFlex.o(.text) referenced 2 times from SCROLLBAR.o(.data)
 <LI><a href="#[3c]">SCT_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[38]">SDIO_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[51]">SGPIO_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[70]">SKIN_Btn_Btn</a> from winwindow.o(.text) referenced 5 times from winwindow.o(.text)
 <LI><a href="#[71]">SKIN_DriverLeft_Button_Return</a> from winwindow.o(.text) referenced 3 times from winwindow.o(.text)
 <LI><a href="#[72]">SKIN_DriverRight_Button_Return</a> from winwindow.o(.text) referenced 3 times from winwindow.o(.text)
 <LI><a href="#[82]">SKIN_Five_NUMBER_Button</a> from winwindow.o(.text) referenced 2 times from winwindow.o(.text)
 <LI><a href="#[76]">SKIN_Left_Button_Return</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[74]">SKIN_Main_Menu_Button_Home</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[86]">SKIN_NUMBER_Button</a> from winwindow.o(.text) referenced 7 times from winwindow.o(.text)
 <LI><a href="#[77]">SKIN_Right_Button_Home</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[69]">SKIN_TEST1</a> from winwindow.o(.text) referenced 2 times from winwindow.o(.text)
 <LI><a href="#[7b]">SKIN_Three_NUMBER_Button</a> from winwindow.o(.text) referenced 4 times from winwindow.o(.text)
 <LI><a href="#[7f]">SKIN_Two_NUMBER_Button</a> from winwindow.o(.text) referenced 3 times from winwindow.o(.text)
 <LI><a href="#[50]">SPIFI_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[46]">SPI_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[48]">SSP0_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[49]">SSP1_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[2e]">SVC_Handler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[102]">TEXT_Callback</a> from TEXT.o(.text) referenced from TEXT.o(.text)
 <LI><a href="#[15c]">TEXT_CreateIndirect</a> from TEXT_CreateIndirect.o(.text) referenced from framewindlg.o(.constdata)
 <LI><a href="#[3e]">TIMER0_IRQHandler</a> from timer.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[3f]">TIMER1_IRQHandler</a> from timer.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[40]">TIMER2_IRQHandler</a> from timer.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[41]">TIMER3_IRQHandler</a> from timer.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[4a]">UART0_IRQHandler</a> from usart_conf.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[4b]">UART1_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[4c]">UART2_IRQHandler</a> from encoder.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[4d]">UART3_IRQHandler</a> from usart_conf.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[3a]">USB0_IRQHandler</a> from usbhw.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[3b]">USB1_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[9f]">USB_EndPoint0</a> from usbcore.o(.text) referenced from usb_main.o(.text)
 <LI><a href="#[a0]">USB_EndPoint1</a> from usbuser.o(.text) referenced from usb_main.o(.text)
 <LI><a href="#[a1]">USB_EndPoint2</a> from usbuser.o(.text) referenced from usb_main.o(.text)
 <LI><a href="#[9e]">USB_Reset_Event</a> from usbuser.o(.text) referenced from usb_main.o(.text)
 <LI><a href="#[2d]">UsageFault_Handler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[5e]">VADC_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[61]">WDT_IRQHandler</a> from startup_lpc43xx.o(.text) referenced from startup_lpc43xx.o(RESET)
 <LI><a href="#[103]">WINDOW_Callback</a> from WINDOW.o(.text) referenced from WINDOW.o(.text)
 <LI><a href="#[159]">WINDOW_CreateIndirect</a> from WINDOW.o(.text) referenced from framewindlg.o(.constdata)
 <LI><a href="#[105]">WM__Paint1</a> from WM.o(.text) referenced from WM.o(.text)
 <LI><a href="#[f4]">_AddKeyDec</a> from EDITDec.o(.text) referenced from EDITDec.o(.text)
 <LI><a href="#[150]">_CalcPositions</a> from SCROLLBAR_Skin.o(.text) referenced from SCROLLBAR_Skin.o(.text)
 <LI><a href="#[da]">_CalcSizeOfChar</a> from GUI_UC_EncodeUTF8.o(.text) referenced 2 times from GUI_UC_EncodeUTF8.o(.text)
 <LI><a href="#[b1]">_Color2Index</a> from GUI_EnableAlpha.o(.text) referenced 2 times from GUI_EnableAlpha.o(.text)
 <LI><a href="#[16e]">_Color2IndexBulk</a> from GUICC_888.o(.text) referenced 2 times from GUICC_888.o(.rodata)
 <LI><a href="#[b4]">_Color2IndexBulk</a> from GUI_EnableAlpha.o(.text) referenced 2 times from GUI_EnableAlpha.o(.text)
 <LI><a href="#[1b5]">_Color2Index_0</a> from GUICC_0.o(.text) referenced from GUICC_0.o(.rodata)
 <LI><a href="#[16c]">_Color2Index_888</a> from GUICC_888.o(.text) referenced from GUICC_888.o(.rodata)
 <LI><a href="#[192]">_Color2Index_8888</a> from GUICC_8888.o(.text) referenced from GUICC_8888.o(.rodata)
 <LI><a href="#[e9]">_CopyBuffer</a> from GUIDRV_Lin_32.o(.text) referenced from GUIDRV_Lin_32.o(.text)
 <LI><a href="#[4]">_Create</a> from PROGBAR_Skin.o(.text) referenced 12 times from PROGBAR_Skin.o(.data)
 <LI><a href="#[f1]">_Create</a> from BUTTON_SkinClassic.o(.text) referenced from BUTTON_SkinClassic.o(.text)
 <LI><a href="#[154]">_DrawBackgroundH</a> from SCROLLBAR_SkinFlex.o(.text) referenced from SCROLLBAR_SkinFlex.o(.text)
 <LI><a href="#[151]">_DrawBackgroundV</a> from SCROLLBAR_SkinFlex.o(.text) referenced from SCROLLBAR_SkinFlex.o(.text)
 <LI><a href="#[170]">_DrawBitmap</a> from GUI_DrawBitmap_555.o(.text) referenced 2 times from GUI_DrawBitmap_555.o(.rodata)
 <LI><a href="#[b6]">_DrawBitmap</a> from GUI_EnableAlpha.o(.text) referenced 6 times from GUI_EnableAlpha.o(.text)
 <LI><a href="#[173]">_DrawBitmapHW_8888</a> from GUI_DrawBitmap_8888.o(.text) referenced from GUI_DrawBitmap_8888.o(.rodata)
 <LI><a href="#[171]">_DrawBitmapSwapRB</a> from GUI_DrawBitmap_555.o(.text) referenced from GUI_DrawBitmap_555.o(.rodata)
 <LI><a href="#[172]">_DrawBitmap_8888</a> from GUI_DrawBitmap_8888.o(.text) referenced from GUI_DrawBitmap_8888.o(.rodata)
 <LI><a href="#[196]">_DrawBitmap_C0</a> from GUI_SetOrientationC0.o(.text) referenced from GUI_SetOrientationC0.o(.rodata)
 <LI><a href="#[19d]">_DrawBitmap_CX</a> from GUI_SetOrientationC16.o(.text) referenced 3 times from GUI_SetOrientationC16.o(.rodata)
 <LI><a href="#[174]">_DrawBitmap_M8888I</a> from GUI_DrawBitmap_8888.o(.text) referenced from GUI_DrawBitmap_8888.o(.rodata)
 <LI><a href="#[17]">_DrawCharAA4_Trans</a> from GUIAA_Char4.o(.text) referenced 2 times from GUIAA_Char4.o(.data)
 <LI><a href="#[17]">_DrawCharAA4_Trans</a> from GUIAA_Char4.o(.text) referenced from GUIAA_Char4.o(.text)
 <LI><a href="#[a2]">_DrawCharAA4_TransCust</a> from GUIAA_Char4.o(.text) referenced from GUIAA_Char4.o(.text)
 <LI><a href="#[18b]">_DrawDown</a> from WIDGET_Effect_None.o(.text) referenced 2 times from WIDGET_Effect_None.o(.rodata)
 <LI><a href="#[18c]">_DrawDownRect</a> from WIDGET_Effect_None.o(.text) referenced 2 times from WIDGET_Effect_None.o(.rodata)
 <LI><a href="#[18d]">_DrawFlat</a> from WIDGET_Effect_None.o(.text) referenced from WIDGET_Effect_None.o(.rodata)
 <LI><a href="#[156]">_DrawGraspH</a> from SCROLLBAR_SkinFlex.o(.text) referenced from SCROLLBAR_SkinFlex.o(.text)
 <LI><a href="#[153]">_DrawGraspV</a> from SCROLLBAR_SkinFlex.o(.text) referenced from SCROLLBAR_SkinFlex.o(.text)
 <LI><a href="#[176]">_DrawHLine</a> from GUIDRV_Lin_32.o(.text) referenced from GUIDRV_Lin_32.o(.rodata)
 <LI><a href="#[a5]">_DrawHLine</a> from GUIAA_Lib.o(.text) referenced 6 times from GUIAA_Lib.o(.text)
 <LI><a href="#[197]">_DrawHLine_C0</a> from GUI_SetOrientationC0.o(.text) referenced from GUI_SetOrientationC0.o(.rodata)
 <LI><a href="#[19e]">_DrawHLine_CX</a> from GUI_SetOrientationC16.o(.text) referenced 3 times from GUI_SetOrientationC16.o(.rodata)
 <LI><a href="#[fb]">_DrawImageAt</a> from IMAGE_Bitmap.o(.text) referenced from IMAGE_Bitmap.o(.text)
 <LI><a href="#[189]">_DrawUp</a> from WIDGET_Effect_None.o(.text) referenced 2 times from WIDGET_Effect_None.o(.rodata)
 <LI><a href="#[18a]">_DrawUpRect</a> from WIDGET_Effect_None.o(.text) referenced 2 times from WIDGET_Effect_None.o(.rodata)
 <LI><a href="#[177]">_DrawVLine</a> from GUIDRV_Lin_32.o(.text) referenced from GUIDRV_Lin_32.o(.rodata)
 <LI><a href="#[b8]">_DrawVLine</a> from GUI_EnableAlpha.o(.text) referenced 5 times from GUI_EnableAlpha.o(.text)
 <LI><a href="#[198]">_DrawVLine_C0</a> from GUI_SetOrientationC0.o(.text) referenced from GUI_SetOrientationC0.o(.rodata)
 <LI><a href="#[19f]">_DrawVLine_CX</a> from GUI_SetOrientationC16.o(.text) referenced 3 times from GUI_SetOrientationC16.o(.rodata)
 <LI><a href="#[db]">_Encode</a> from GUI_UC_EncodeUTF8.o(.text) referenced 2 times from GUI_UC_EncodeUTF8.o(.text)
 <LI><a href="#[178]">_FillRect</a> from GUIDRV_Lin_32.o(.text) referenced from GUIDRV_Lin_32.o(.rodata)
 <LI><a href="#[b9]">_FillRect</a> from GUI_EnableAlpha.o(.text) referenced 5 times from GUI_EnableAlpha.o(.text)
 <LI><a href="#[199]">_FillRect_C0</a> from GUI_SetOrientationC0.o(.text) referenced from GUI_SetOrientationC0.o(.rodata)
 <LI><a href="#[1a0]">_FillRect_CX</a> from GUI_SetOrientationC16.o(.text) referenced 3 times from GUI_SetOrientationC16.o(.rodata)
 <LI><a href="#[13b]">_GUI_USAGE_BM_Delete</a> from GUIDEV_UsageBM.o(.text) referenced from GUIDEV_UsageBM.o(.text)
 <LI><a href="#[9]">_GetBorderSize</a> from FRAMEWIN_Skin.o(.text) referenced 2 times from FRAMEWIN_Skin.o(.data)
 <LI><a href="#[d8]">_GetCharCode</a> from GUI_UC_EncodeUTF8.o(.text) referenced 2 times from GUI_UC_EncodeUTF8.o(.text)
 <LI><a href="#[d9]">_GetCharSize</a> from GUI_UC_EncodeUTF8.o(.text) referenced 2 times from GUI_UC_EncodeUTF8.o(.text)
 <LI><a href="#[f]">_GetCharWrap</a> from GUI__Wrap.o(.text) referenced 2 times from GUI__Wrap.o(.data)
 <LI><a href="#[22]">_GetCursorCharacter</a> from GUI__GetCursorPos.o(.text) referenced 2 times from GUI__GetCursorPos.o(.data)
 <LI><a href="#[8]">_GetCursorPosChar</a> from GUI__GetCursorPos.o(.text) referenced 2 times from GUI__GetCursorPos.o(.data)
 <LI><a href="#[21]">_GetCursorPosX</a> from GUI__GetCursorPos.o(.text) referenced 2 times from GUI__GetCursorPos.o(.data)
 <LI><a href="#[17f]">_GetDevData</a> from GUIDRV_Lin_32.o(.text) referenced from GUIDRV_Lin_32.o(.rodata)
 <LI><a href="#[c0]">_GetDevData</a> from GUI_EnableAlpha.o(.text) referenced 5 times from GUI_EnableAlpha.o(.text)
 <LI><a href="#[17d]">_GetDevFunc</a> from GUIDRV_Lin_32.o(.text) referenced from GUIDRV_Lin_32.o(.rodata)
 <LI><a href="#[be]">_GetDevFunc</a> from GUI_EnableAlpha.o(.text) referenced 5 times from GUI_EnableAlpha.o(.text)
 <LI><a href="#[17e]">_GetDevProp</a> from GUIDRV_Lin_32.o(.text) referenced from GUIDRV_Lin_32.o(.rodata)
 <LI><a href="#[bf]">_GetDevProp</a> from GUI_EnableAlpha.o(.text) referenced 5 times from GUI_EnableAlpha.o(.text)
 <LI><a href="#[fc]">_GetImageSize</a> from IMAGE_Bitmap.o(.text) referenced from IMAGE_Bitmap.o(.text)
 <LI><a href="#[b3]">_GetIndexMask</a> from GUI_EnableAlpha.o(.text) referenced 2 times from GUI_EnableAlpha.o(.text)
 <LI><a href="#[1b7]">_GetIndexMask_0</a> from GUICC_0.o(.text) referenced from GUICC_0.o(.rodata)
 <LI><a href="#[16d]">_GetIndexMask_888</a> from GUICC_888.o(.text) referenced from GUICC_888.o(.rodata)
 <LI><a href="#[193]">_GetIndexMask_8888</a> from GUICC_8888.o(.text) referenced from GUICC_8888.o(.rodata)
 <LI><a href="#[179]">_GetPixelIndex</a> from GUIDRV_Lin_32.o(.text) referenced from GUIDRV_Lin_32.o(.rodata)
 <LI><a href="#[ba]">_GetPixelIndex</a> from GUI_EnableAlpha.o(.text) referenced 5 times from GUI_EnableAlpha.o(.text)
 <LI><a href="#[19a]">_GetPixelIndex_C0</a> from GUI_SetOrientationC0.o(.text) referenced from GUI_SetOrientationC0.o(.rodata)
 <LI><a href="#[1a1]">_GetPixelIndex_CX</a> from GUI_SetOrientationC16.o(.text) referenced 3 times from GUI_SetOrientationC16.o(.rodata)
 <LI><a href="#[e0]">_GetPos</a> from GUIDRV_Lin_32.o(.text) referenced from GUIDRV_Lin_32.o(.text)
 <LI><a href="#[180]">_GetRect</a> from GUIDRV_Lin_32.o(.text) referenced from GUIDRV_Lin_32.o(.rodata)
 <LI><a href="#[c1]">_GetRect</a> from GUI_EnableAlpha.o(.text) referenced 5 times from GUI_EnableAlpha.o(.text)
 <LI><a href="#[e]">_GetWordWrap</a> from GUI__Wrap.o(.text) referenced 2 times from GUI__Wrap.o(.data)
 <LI><a href="#[13e]">_GetXSize</a> from GUI_DRAW_BITMAP.o(.text) referenced from GUI_DRAW_BITMAP.o(.text)
 <LI><a href="#[13f]">_GetYSize</a> from GUI_DRAW_BITMAP.o(.text) referenced from GUI_DRAW_BITMAP.o(.text)
 <LI><a href="#[b2]">_Index2Color</a> from GUI_EnableAlpha.o(.text) referenced 2 times from GUI_EnableAlpha.o(.text)
 <LI><a href="#[16f]">_Index2ColorBulk</a> from GUICC_888.o(.text) referenced 2 times from GUICC_888.o(.rodata)
 <LI><a href="#[b5]">_Index2ColorBulk</a> from GUI_EnableAlpha.o(.text) referenced 2 times from GUI_EnableAlpha.o(.text)
 <LI><a href="#[1b6]">_Index2Color_0</a> from GUICC_0.o(.text) referenced from GUICC_0.o(.rodata)
 <LI><a href="#[e3]">_Init</a> from GUIDRV_Lin_32.o(.text) referenced from GUIDRV_Lin_32.o(.text)
 <LI><a href="#[1be]">_ListBoxCreate</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1bf]">_ListBoxDestroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[6e]">_ListBoxShowMainInfoCallback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[1c2]">_ListBoxShowMainInfoCreate</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1c3]">_ListBoxShowMainInfoDestroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[6c]">_ListCallback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[6d]">_ListViewCallback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[1c0]">_ListViewCreate</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1c1]">_ListViewDestroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[c8]">_Log2Phys_S</a> from GUI_SetOrientation.o(.text) referenced from GUI_SetOrientation.o(.text)
 <LI><a href="#[c9]">_Log2Phys_SX</a> from GUI_SetOrientation.o(.text) referenced from GUI_SetOrientation.o(.text)
 <LI><a href="#[cb]">_Log2Phys_SXY</a> from GUI_SetOrientation.o(.text) referenced from GUI_SetOrientation.o(.text)
 <LI><a href="#[ca]">_Log2Phys_SY</a> from GUI_SetOrientation.o(.text) referenced from GUI_SetOrientation.o(.text)
 <LI><a href="#[c5]">_Log2Phys_X</a> from GUI_SetOrientation.o(.text) referenced from GUI_SetOrientation.o(.text)
 <LI><a href="#[c7]">_Log2Phys_XY</a> from GUI_SetOrientation.o(.text) referenced from GUI_SetOrientation.o(.text)
 <LI><a href="#[c6]">_Log2Phys_Y</a> from GUI_SetOrientation.o(.text) referenced from GUI_SetOrientation.o(.text)
 <LI><a href="#[5]">_Log2VisBuffered</a> from GUI_CharLine.o(.text) referenced 2 times from GUI_CharLine.o(.data)
 <LI><a href="#[6b]">_MainWinCallback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[1bc]">_MainWinCreate</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1bd]">_MainWinDestroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[15d]">_MainWinInterface</a> from winwindow.o(.text) referenced from win.o(.constdata)
 <LI><a href="#[127]">_MixColorsGamma16</a> from LCD_AA.o(.text) referenced from LCD_AA.o(.text)
 <LI><a href="#[13]">_NextPixel_End</a> from LCD_NextPixelAPI.o(.text) referenced 2 times from LCD_NextPixelAPI.o(.data)
 <LI><a href="#[12]">_NextPixel_NextLine</a> from LCD_NextPixelAPI.o(.text) referenced 2 times from LCD_NextPixelAPI.o(.data)
 <LI><a href="#[11]">_NextPixel_SetPixel</a> from LCD_NextPixelAPI.o(.text) referenced 2 times from LCD_NextPixelAPI.o(.data)
 <LI><a href="#[10]">_NextPixel_Start</a> from LCD_NextPixelAPI.o(.text) referenced 2 times from LCD_NextPixelAPI.o(.data)
 <LI><a href="#[e5]">_Off</a> from GUIDRV_Lin_32.o(.text) referenced from GUIDRV_Lin_32.o(.text)
 <LI><a href="#[e4]">_On</a> from GUIDRV_Lin_32.o(.text) referenced from GUIDRV_Lin_32.o(.text)
 <LI><a href="#[a4]">_OnExit</a> from GUIAA_Lib.o(.text) referenced 10 times from GUIAA_Lib.o(.text)
 <LI><a href="#[ee]">_OnPidStateChange</a> from BUTTON.o(.text) referenced from BUTTON.o(.text)
 <LI><a href="#[19]">_OnTouchDefault</a> from BUTTON.o(.text) referenced 2 times from BUTTON.o(.data)
 <LI><a href="#[19]">_OnTouchDefault</a> from BUTTON.o(.text) referenced from BUTTON.o(.text)
 <LI><a href="#[ed]">_OnTouchReactOnLevel</a> from BUTTON.o(.text) referenced from BUTTON.o(.text)
 <LI><a href="#[3]">_Paint</a> from PROGBAR_Skin.o(.text) referenced 12 times from PROGBAR_Skin.o(.data)
 <LI><a href="#[f0]">_Paint</a> from BUTTON_SkinClassic.o(.text) referenced 3 times from BUTTON_SkinClassic.o(.text)
 <LI><a href="#[f9]">_PaintTiled</a> from IMAGE.o(.text) referenced 2 times from IMAGE.o(.text)
 <LI><a href="#[6a]">_ProgOwnerSkin2</a> from winwindow.o(.text) referenced 7 times from winwindow.o(.text)
 <LI><a href="#[7c]">_ProgOwnerSkin3</a> from winwindow.o(.text) referenced 5 times from winwindow.o(.text)
 <LI><a href="#[ec]">_ReadRect</a> from GUIDRV_Lin_32.o(.text) referenced from GUIDRV_Lin_32.o(.text)
 <LI><a href="#[10a]">_ReadRectFromMemdev</a> from GUI_SetAlpha.o(.text) referenced from GUI_SetAlpha.o(.text)
 <LI><a href="#[e1]">_SetAlpha</a> from GUIDRV_Lin_32.o(.text) referenced from GUIDRV_Lin_32.o(.text)
 <LI><a href="#[e6]">_SetAlphaMode</a> from GUIDRV_Lin_32.o(.text) referenced from GUIDRV_Lin_32.o(.text)
 <LI><a href="#[1b3]">_SetBkColor</a> from LCD.o(.text) referenced from LCD.o(.rodata)
 <LI><a href="#[c3]">_SetBkColor</a> from GUI_EnableAlpha.o(.text) referenced from GUI_EnableAlpha.o(.text)
 <LI><a href="#[e8]">_SetChroma</a> from GUIDRV_Lin_32.o(.text) referenced from GUIDRV_Lin_32.o(.text)
 <LI><a href="#[e7]">_SetChromaMode</a> from GUIDRV_Lin_32.o(.text) referenced from GUIDRV_Lin_32.o(.text)
 <LI><a href="#[1b2]">_SetColor</a> from LCD.o(.text) referenced from LCD.o(.rodata)
 <LI><a href="#[c2]">_SetColor</a> from GUI_EnableAlpha.o(.text) referenced from GUI_EnableAlpha.o(.text)
 <LI><a href="#[eb]">_SetDevFunc</a> from GUIDRV_Lin_32.o(.text) referenced from GUIDRV_Lin_32.o(.text)
 <LI><a href="#[1b4]">_SetDrawMode</a> from LCD.o(.text) referenced from LCD.o(.rodata)
 <LI><a href="#[c4]">_SetDrawMode</a> from GUI_EnableAlpha.o(.text) referenced from GUI_EnableAlpha.o(.text)
 <LI><a href="#[17c]">_SetOrg</a> from GUIDRV_Lin_32.o(.text) referenced from GUIDRV_Lin_32.o(.rodata)
 <LI><a href="#[bd]">_SetOrg</a> from GUI_EnableAlpha.o(.text) referenced 5 times from GUI_EnableAlpha.o(.text)
 <LI><a href="#[1]">_SetPixelAlpha</a> from GUI_DrawBitmap_8888.o(.text) referenced 2 times from GUI_DrawBitmap_8888.o(.data)
 <LI><a href="#[1]">_SetPixelAlpha</a> from GUI_DrawBitmap_8888.o(.text) referenced from GUI_DrawBitmap_8888.o(.text)
 <LI><a href="#[ae]">_SetPixelAlphaMask</a> from GUI_DrawBitmap_8888.o(.text) referenced from GUI_DrawBitmap_8888.o(.text)
 <LI><a href="#[17a]">_SetPixelIndex</a> from GUIDRV_Lin_32.o(.text) referenced from GUIDRV_Lin_32.o(.rodata)
 <LI><a href="#[bb]">_SetPixelIndex</a> from GUI_EnableAlpha.o(.text) referenced 5 times from GUI_EnableAlpha.o(.text)
 <LI><a href="#[19b]">_SetPixelIndex_C0</a> from GUI_SetOrientationC0.o(.text) referenced from GUI_SetOrientationC0.o(.rodata)
 <LI><a href="#[1a2]">_SetPixelIndex_CX</a> from GUI_SetOrientationC16.o(.text) referenced 3 times from GUI_SetOrientationC16.o(.rodata)
 <LI><a href="#[df]">_SetPos</a> from GUIDRV_Lin_32.o(.text) referenced from GUIDRV_Lin_32.o(.text)
 <LI><a href="#[de]">_SetSize</a> from GUIDRV_Lin_32.o(.text) referenced from GUIDRV_Lin_32.o(.text)
 <LI><a href="#[dc]">_SetVRAMAddr</a> from GUIDRV_Lin_32.o(.text) referenced from GUIDRV_Lin_32.o(.text)
 <LI><a href="#[dd]">_SetVSize</a> from GUIDRV_Lin_32.o(.text) referenced from GUIDRV_Lin_32.o(.text)
 <LI><a href="#[e2]">_SetVis</a> from GUIDRV_Lin_32.o(.text) referenced from GUIDRV_Lin_32.o(.text)
 <LI><a href="#[ea]">_ShowBuffer</a> from GUIDRV_Lin_32.o(.text) referenced from GUIDRV_Lin_32.o(.text)
 <LI><a href="#[f5]">_UpdateBuffer</a> from EDITDec.o(.text) referenced from EDITDec.o(.text)
 <LI><a href="#[8d]">_WinComFiveNumCallback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[1e8]">_WinComFiveNumCreate</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1e9]">_WinComFiveNumDestroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[168]">_WinComFiveNumInterface</a> from winwindow.o(.text) referenced 2 times from win.o(.constdata)
 <LI><a href="#[8e]">_WinComFourNumCallback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[1ea]">_WinComFourNumCreate</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1eb]">_WinComFourNumDestroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[169]">_WinComFourNumInterface</a> from winwindow.o(.text) referenced 5 times from win.o(.constdata)
 <LI><a href="#[8c]">_WinComThreeNumCallback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[1e6]">_WinComThreeNumCreate</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1e7]">_WinComThreeNumDestroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[167]">_WinComThreeNumInterface</a> from winwindow.o(.text) referenced 7 times from win.o(.constdata)
 <LI><a href="#[78]">_WinCommonMenuCallback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[1ca]">_WinCommonMenuCreate</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1cb]">_WinCommonMenuDestroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[162]">_WinCommonMenuInterface</a> from winwindow.o(.text) referenced 32 times from win.o(.constdata)
 <LI><a href="#[330]">_WinCommonMenuListOwnerDraw00</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[8a]">_WinCommonMenuListOwnerDraw3</a> from winwindow.o(.text) referenced 9 times from winwindow.o(.text)
 <LI><a href="#[38a]">_WinCommonMenuListOwnerDraw4</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[40f]">_WinCommonMenuListOwnerDraw5</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[394]">_WinCommonMenuListOwnerDraw50</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[41c]">_WinCommonMenuListOwnerDraw51</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[395]">_WinCommonMenuListOwnerDraw6</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[7a]">_WinCommonSelectCallback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[1ce]">_WinCommonSelectCreate</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1cf]">_WinCommonSelectDestroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[165]">_WinCommonSelectInterface</a> from winwindow.o(.text) referenced 46 times from win.o(.constdata)
 <LI><a href="#[94]">_WinCommonUserManageCallback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[1f6]">_WinCommonUserManageCreate</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1f7]">_WinCommonUserManageDestroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[163]">_WinCommonUserManageInterface</a> from winwindow.o(.text) referenced from win.o(.constdata)
 <LI><a href="#[79]">_WinCurUserCallback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[1cc]">_WinCurUserCreate</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1cd]">_WinCurUserDestroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[87]">_WinEmergencyPosCallback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[1de]">_WinEmergencyPosCreate</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1df]">_WinEmergencyPosDestroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[88]">_WinEmgSpeedCloseCallback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[1e0]">_WinEmgSpeedCloseCreate</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1e1]">_WinEmgSpeedCloseDestroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[89]">_WinEmgSpeedOpenCallback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[1e2]">_WinEmgSpeedOpenCreate</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1e3]">_WinEmgSpeedOpenDestroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[80]">_WinEndPosCloseCallback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[1d4]">_WinEndPosCloseCreate</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1d5]">_WinEndPosCloseDestroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[91]">_WinEndPosOpCallback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[1f0]">_WinEndPosOpCreate</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1f1]">_WinEndPosOpDestroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[92]">_WinEndPosOpT2Callback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[1f2]">_WinEndPosOpT2Create</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1f3]">_WinEndPosOpT2Destroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[81]">_WinEndPosOpenCallback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[1d6]">_WinEndPosOpenCreate</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1d7]">_WinEndPosOpenDestroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[97]">_WinEndPosParaMenuCallback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[1fc]">_WinEndPosParaMenuCreate</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1fd]">_WinEndPosParaMenuDestroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[16b]">_WinEndPosParaMenuInterface</a> from winwindow.o(.text) referenced 2 times from win.o(.constdata)
 <LI><a href="#[96]">_WinEndPosSetOkCallback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[1fa]">_WinEndPosSetOkCreate</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1fb]">_WinEndPosSetOkDestroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[8f]">_WinFirstSetEndMenuCallback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[1ec]">_WinFirstSetEndMenuCreate</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1ed]">_WinFirstSetEndMenuDestroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[73]">_WinLocalOpCallback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[1c6]">_WinLocalOpCreate</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1c7]">_WinLocalOpDestroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[160]">_WinLocalOpInterface</a> from winwindow.o(.text) referenced from win.o(.constdata)
 <LI><a href="#[75]">_WinMainMenuCallback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[1c8]">_WinMainMenuCreate</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1c9]">_WinMainMenuDestroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[161]">_WinMainMenuInterface</a> from winwindow.o(.text) referenced from win.o(.constdata)
 <LI><a href="#[83]">_WinMomentCloseCallback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[1d8]">_WinMomentCloseCreate</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1d9]">_WinMomentCloseDestroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[84]">_WinMomentOpenCallback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[1da]">_WinMomentOpenCreate</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1db]">_WinMomentOpenDestroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[85]">_WinOverMomentTimesCallback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[1dc]">_WinOverMomentTimesCreate</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1dd]">_WinOverMomentTimesDestroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[95]">_WinPasswordChangeCallback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[1f8]">_WinPasswordChangeCreate</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1f9]">_WinPasswordChangeDestroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[16a]">_WinPasswordChangeInterface</a> from winwindow.o(.text) referenced 5 times from win.o(.constdata)
 <LI><a href="#[93]">_WinPasswordInputCallback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[1f4]">_WinPasswordInputCreate</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1f5]">_WinPasswordInputDestroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[164]">_WinPasswordInputInterface</a> from winwindow.o(.text) referenced 5 times from win.o(.constdata)
 <LI><a href="#[8b]">_WinPercentageCallback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[1e4]">_WinPercentageCreate</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1e5]">_WinPercentageDestroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[166]">_WinPercentageInterface</a> from winwindow.o(.text) referenced 4 times from win.o(.constdata)
 <LI><a href="#[90]">_WinSelEndMenuCallback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[1ee]">_WinSelEndMenuCreate</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1ef]">_WinSelEndMenuDestroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[6f]">_WinShowHelpInfoCallback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[1c4]">_WinShowHelpInfoCreate</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1c5]">_WinShowHelpInfoDestroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[7d]">_WinSpeedCloseCallback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[1d0]">_WinSpeedCloseCreate</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1d1]">_WinSpeedCloseDestroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[7e]">_WinSpeedOpenCallback</a> from winwindow.o(.text) referenced from winwindow.o(.text)
 <LI><a href="#[1d2]">_WinSpeedOpenCreate</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[1d3]">_WinSpeedOpenDestroy</a> from winwindow.o(.text) referenced from winwindow.o(.constdata)
 <LI><a href="#[17b]">_XorPixel</a> from GUIDRV_Lin_32.o(.text) referenced from GUIDRV_Lin_32.o(.rodata)
 <LI><a href="#[bc]">_XorPixel</a> from GUI_EnableAlpha.o(.text) referenced 5 times from GUI_EnableAlpha.o(.text)
 <LI><a href="#[19c]">_XorPixel_C0</a> from GUI_SetOrientationC0.o(.text) referenced from GUI_SetOrientationC0.o(.rodata)
 <LI><a href="#[1a3]">_XorPixel_CX</a> from GUI_SetOrientationC16.o(.text) referenced 3 times from GUI_SetOrientationC16.o(.rodata)
 <LI><a href="#[66]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_lpc43xx.o(.text)
 <LI><a href="#[107]">_cbBackWin</a> from WM.o(.text) referenced from WM.o(.text)
 <LI><a href="#[141]">_cbInvalidateOne</a> from WM_BringToTop.o(.text) referenced from WM_BringToTop.o(.text)
 <LI><a href="#[106]">_cbPaintMemDev</a> from WM.o(.text) referenced from WM.o(.text)
 <LI><a href="#[109]">_cbTimer</a> from WM_Timer.o(.text) referenced from WM_Timer.o(.text)
 <LI><a href="#[158]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[15e]">_voidFun</a> from winwindow.o(.text) referenced 137 times from win.o(.constdata)
 <LI><a href="#[157]">fputc</a> from retarget.o(.text) referenced from printfa.o(i.__0printf)
 <LI><a href="#[65]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[66]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(.text)
</UL>
<P><STRONG><a name="[995]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[1fe]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[980]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[996]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[997]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[998]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[999]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[99a]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[28]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[200]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[43]"></a>ADC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>ATIMER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>CAN0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>CAN1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>EVRT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>EZH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>FLASH_EEPROM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>GINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>GINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>GPIO0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>GPIO1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>GPIO2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>GPIO3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>GPIO4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>GPIO5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>GPIO6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>GPIO7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>I2S0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>I2S1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>LCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>M0CORE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>M0s_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>MCPWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>QEI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>RIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>SCT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>SGPIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>SPIFI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>USB1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>VADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[209]"></a>getPC</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc43xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[20a]"></a>SetClock</STRONG> (Thumb, 338 bytes, Stack size 12 bytes, system_lpc43xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetClock
</UL>
<BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[203]"></a>SystemInit_ExtMemCtl</STRONG> (Thumb, 1152 bytes, Stack size 48 bytes, system_lpc43xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = SystemInit_ExtMemCtl &rArr; WaitUs &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUs
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[99b]"></a>MeasureFreq</STRONG> (Thumb, 94 bytes, Stack size 12 bytes, system_lpc43xx.o(.text), UNUSED)

<P><STRONG><a name="[205]"></a>GetPLL1Param</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, system_lpc43xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GetPLL1Param
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetClockFreq
</UL>

<P><STRONG><a name="[206]"></a>GetClkSel</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, system_lpc43xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetClockFreq
</UL>

<P><STRONG><a name="[204]"></a>GetClockFreq</STRONG> (Thumb, 196 bytes, Stack size 28 bytes, system_lpc43xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GetClockFreq &rArr; GetPLL1Param
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetClkSel
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPLL1Param
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[207]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, system_lpc43xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SystemCoreClockUpdate &rArr; GetClockFreq &rArr; GetPLL1Param
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[208]"></a>SystemInit</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, system_lpc43xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = SystemInit &rArr; SystemInit_ExtMemCtl &rArr; WaitUs &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit_ExtMemCtl
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetClock
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getPC
</UL>
<BR>[Called By]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_lcd
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20d]"></a>UART_Init</STRONG> (Thumb, 368 bytes, Stack size 16 bytes, lpc43xx_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = UART_Init &rArr; uart_set_divisors &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_EntityConnect
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_set_divisors
</UL>
<BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Init
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
</UL>

<P><STRONG><a name="[210]"></a>UART_TxCmd</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lpc43xx_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DeInit
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Init
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
</UL>

<P><STRONG><a name="[20f]"></a>UART_DeInit</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, lpc43xx_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxCmd
</UL>

<P><STRONG><a name="[49b]"></a>UART_ConfigStructInit3</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lpc43xx_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
</UL>

<P><STRONG><a name="[99c]"></a>UART_ConfigStructInit2</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lpc43xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[4b1]"></a>UART_ConfigStructInit0</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lpc43xx_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Init
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
</UL>

<P><STRONG><a name="[212]"></a>UART_SendByte</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lpc43xx_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Send
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSend
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerSend
</UL>

<P><STRONG><a name="[214]"></a>UART_ReceiveByte</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lpc43xx_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
</UL>

<P><STRONG><a name="[211]"></a>UART_Send</STRONG> (Thumb, 148 bytes, Stack size 36 bytes, lpc43xx_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RS485Send
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IntTransmit
</UL>

<P><STRONG><a name="[213]"></a>UART_Receive</STRONG> (Thumb, 114 bytes, Stack size 28 bytes, lpc43xx_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveByte
</UL>
<BR>[Called By]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IntReceive
</UL>

<P><STRONG><a name="[99d]"></a>UART_ForceBreak</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lpc43xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[49e]"></a>UART_IntConfig</STRONG> (Thumb, 116 bytes, Stack size 12 bytes, lpc43xx_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UART_IntConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Init
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0Receive
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0Send
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IntTransmit
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
</UL>

<P><STRONG><a name="[99e]"></a>UART_GetLineStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lpc43xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[4ae]"></a>UART_CheckBusy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lpc43xx_uart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IntTransmit
</UL>

<P><STRONG><a name="[49d]"></a>UART_FIFOConfig</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, lpc43xx_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Init
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
</UL>

<P><STRONG><a name="[49c]"></a>UART_FIFOConfigStructInit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lpc43xx_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Init
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
</UL>

<P><STRONG><a name="[99f]"></a>UART_ABCmd</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, lpc43xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[9a0]"></a>UART_IrDAInvtInputCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lpc43xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[9a1]"></a>UART_IrDACmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lpc43xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[9a2]"></a>UART_IrDAPulseDivConfig</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lpc43xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[9a3]"></a>UART_FullModemForcePinState</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, lpc43xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[9a4]"></a>UART_FullModemConfigMode</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, lpc43xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[9a5]"></a>UART_FullModemGetStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lpc43xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[9a6]"></a>UART_RS485Config</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, lpc43xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[9a7]"></a>UART_RS485ReceiverCmd</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, lpc43xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[215]"></a>UART_RS485Send</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, lpc43xx_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RS485SendData
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RS485SendSlvAddr
</UL>

<P><STRONG><a name="[216]"></a>UART_RS485SendSlvAddr</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, lpc43xx_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RS485Send
</UL>

<P><STRONG><a name="[217]"></a>UART_RS485SendData</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lpc43xx_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RS485Send
</UL>

<P><STRONG><a name="[4d2]"></a>TIM_GetIntStatus</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lpc43xx_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_GetIntStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER3_IRQHandler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_IRQHandler
</UL>

<P><STRONG><a name="[9a8]"></a>TIM_GetIntCaptureStatus</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, lpc43xx_timer.o(.text), UNUSED)

<P><STRONG><a name="[4d3]"></a>TIM_ClearIntPending</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lpc43xx_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_IRQHandler
</UL>

<P><STRONG><a name="[9a9]"></a>TIM_ClearIntCapturePending</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lpc43xx_timer.o(.text), UNUSED)

<P><STRONG><a name="[9aa]"></a>TIM_ConfigStructInit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lpc43xx_timer.o(.text), UNUSED)

<P><STRONG><a name="[21a]"></a>TIM_Init</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, lpc43xx_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = TIM_Init &rArr; converUSecToVal &rArr; getPClock &rArr; CGU_GetPCLKFrequency &rArr; CGU_UpdateClock
</UL>
<BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;converPtrToTimeNum
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;converUSecToVal
</UL>
<BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Timer3
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Init
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Timer2
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Timer1
</UL>

<P><STRONG><a name="[9ab]"></a>TIM_DeInit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lpc43xx_timer.o(.text), UNUSED)

<P><STRONG><a name="[21e]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lpc43xx_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Waitus
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Timer3
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Init
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Timer2
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Timer1
</UL>

<P><STRONG><a name="[21f]"></a>TIM_ResetCounter</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lpc43xx_timer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Waitus
</UL>

<P><STRONG><a name="[21d]"></a>TIM_ConfigMatch</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, lpc43xx_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_ConfigMatch
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Waitus
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Timer3
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Init
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Timer2
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Timer1
</UL>

<P><STRONG><a name="[9ac]"></a>TIM_UpdateMatchValue</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, lpc43xx_timer.o(.text), UNUSED)

<P><STRONG><a name="[9ad]"></a>TIM_ConfigCapture</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, lpc43xx_timer.o(.text), UNUSED)

<P><STRONG><a name="[9ae]"></a>TIM_GetCaptureValue</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, lpc43xx_timer.o(.text), UNUSED)

<P><STRONG><a name="[21c]"></a>TIM_Waitus</STRONG> (Thumb, 78 bytes, Stack size 20 bytes, lpc43xx_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ConfigMatch
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ResetCounter
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Waitms
</UL>

<P><STRONG><a name="[220]"></a>TIM_Waitms</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lpc43xx_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Waitus
</UL>

<P><STRONG><a name="[226]"></a>CGU_UpdateClock</STRONG> (Thumb, 262 bytes, Stack size 20 bytes, lpc43xx_cgu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CGU_UpdateClock
</UL>
<BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_Init
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_GetPCLKFrequency
</UL>

<P><STRONG><a name="[20e]"></a>CGU_EntityConnect</STRONG> (Thumb, 116 bytes, Stack size 12 bytes, lpc43xx_cgu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CGU_EntityConnect
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCPWM_Init
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Init
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_Init
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_drive_Init
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Init
</UL>

<P><STRONG><a name="[221]"></a>CGU_EnableEntity</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, lpc43xx_cgu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = CGU_EnableEntity &rArr; scu_pinmux
</UL>
<BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_pinmux
</UL>
<BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_ConfigPWR
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_Init
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Init
</UL>

<P><STRONG><a name="[225]"></a>CGU_SetPLL1</STRONG> (Thumb, 160 bytes, Stack size 20 bytes, lpc43xx_cgu.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_Init
</UL>

<P><STRONG><a name="[224]"></a>CGU_SetXTALOSC</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, lpc43xx_cgu.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_Init
</UL>

<P><STRONG><a name="[223]"></a>CGU_Init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, lpc43xx_cgu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_SetXTALOSC
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_SetPLL1
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_EnableEntity
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_UpdateClock
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_EntityConnect
</UL>

<P><STRONG><a name="[228]"></a>CGU_GetBaseStatus</STRONG> (Thumb, 232 bytes, Stack size 0 bytes, lpc43xx_cgu.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_ConfigPWR
</UL>

<P><STRONG><a name="[227]"></a>CGU_ConfigPWR</STRONG> (Thumb, 754 bytes, Stack size 16 bytes, lpc43xx_cgu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_ConfigPWR
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_GetBaseStatus
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_EnableEntity
</UL>
<BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_ConfigPWR
</UL>

<P><STRONG><a name="[20c]"></a>CGU_GetPCLKFrequency</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, lpc43xx_cgu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = CGU_GetPCLKFrequency &rArr; CGU_UpdateClock
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_UpdateClock
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SysTickClkFreq
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Init
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getPClock
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_set_divisors
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;poweron_Init
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LED
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hand_Init
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restart_Encoder_Init
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_States
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Encoder
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternOUT_Init
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternIN_Init
</UL>

<P><STRONG><a name="[491]"></a>CGU_SetDIV</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lpc43xx_cgu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CGU_SetDIV
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_drive_Init
</UL>

<P><STRONG><a name="[562]"></a>CGU_SetPLL0</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lpc43xx_cgu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Init
</UL>

<P><STRONG><a name="[9af]"></a>CGU_SetPLL0audio</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, lpc43xx_cgu.o(.text), UNUSED)

<P><STRONG><a name="[22a]"></a>CGU_FrequencyMonitor</STRONG> (Thumb, 170 bytes, Stack size 20 bytes, lpc43xx_cgu.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_RealFrequencyCompare
</UL>

<P><STRONG><a name="[229]"></a>CGU_RealFrequencyCompare</STRONG> (Thumb, 64 bytes, Stack size 36 bytes, lpc43xx_cgu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_FrequencyMonitor
</UL>

<P><STRONG><a name="[22c]"></a>GPIO_SetDir</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lpc43xx_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_SetDir
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIO_SetDir
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Analog
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;poweron_Init
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_flash
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LED
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_InitLED
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hand_Init
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_flash_test
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restart_Encoder_Init
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_States
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI0
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_MLX90363
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Encoder
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternOUT_Init
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternIN_Init
</UL>

<P><STRONG><a name="[22e]"></a>GPIO_SetValue</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lpc43xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIO_SetValue
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Analog
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_IRQHandler
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out0
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out0_ex
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out1
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out1_ex
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out2
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out2_ex
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out3
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out3_ex
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out4
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out4_ex
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out5
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out5_ex
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out6
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out6_ex
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out7
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out7_ex
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Backlight_change
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Backlight
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_block_erase
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_whole_erase
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sector
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data_old
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_id
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_status
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_enable
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_states
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_allclose
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_LOCAL2
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_led
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LED
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;states_spi0
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_enty_allclose_pc_local
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_enty_allclose_close_open
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx_I
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_flash_test
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_PC
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_OPEN
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_LOCAL
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_CLOSE
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restart_Encoder
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RUN_OPEN
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RUN_CLOSE
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_States
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI0
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_MLX90363
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Encoder
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_CS_HIGH
</UL>

<P><STRONG><a name="[230]"></a>GPIO_ClearValue</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lpc43xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIO_ClearValue
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_IRQHandler
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out0
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out0_ex
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out1
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out1_ex
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out2
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out2_ex
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out3
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out3_ex
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out4
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out4_ex
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out5
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out5_ex
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out6
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out6_ex
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out7
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out7_ex
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Backlight_change
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Backlight
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_flash
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_block_erase
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_whole_erase
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sector
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data_old
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_id
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_status
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_enable
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_states
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_LOCAL1
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_led
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;states_spi0
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx_I
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_PC
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_OPEN
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_LOCAL
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_CLOSE
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restart_Encoder_Init
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restart_Encoder
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RUN_OPEN
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RUN_CLOSE
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out
</UL>

<P><STRONG><a name="[232]"></a>GPIO_ReadValue</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lpc43xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIO_ReadValue
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handdetection
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_IRQHandler
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_in
</UL>

<P><STRONG><a name="[22b]"></a>FIO_SetDir</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lpc43xx_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
</UL>

<P><STRONG><a name="[22d]"></a>FIO_SetValue</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lpc43xx_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>

<P><STRONG><a name="[22f]"></a>FIO_ClearValue</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lpc43xx_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
</UL>

<P><STRONG><a name="[231]"></a>FIO_ReadValue</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, lpc43xx_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadValue
</UL>

<P><STRONG><a name="[9b0]"></a>FIO_SetMask</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lpc43xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[222]"></a>scu_pinmux</STRONG> (Thumb, 30 bytes, Stack size 20 bytes, lpc43xx_scu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = scu_pinmux
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_EnableEntity
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_drive_Init
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Init
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Analog
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;poweron_Init
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Init
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_flash
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LED
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_InitLED
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hand_Init
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_flash_test
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restart_Encoder_Init
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_States
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI0
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_MLX90363
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Encoder
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EESPI0_ADDA
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EESPI0
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_CS_HIGH
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternOUT_Init
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternIN_Init
</UL>

<P><STRONG><a name="[233]"></a>SSP_Init</STRONG> (Thumb, 200 bytes, Stack size 40 bytes, lpc43xx_ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SSP_Init &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_GetPCLKFrequency
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_EntityConnect
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Analog
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_flash
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EESPI0_ADDA_EN
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_flash_test
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_MLX90363
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EESPI0_EN
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EESPI0_ADDA
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EESPI0
</UL>

<P><STRONG><a name="[9b1]"></a>SSP_DeInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lpc43xx_ssp.o(.text), UNUSED)

<P><STRONG><a name="[236]"></a>SSP_GetDataSize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lpc43xx_ssp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_ReadWrite
</UL>

<P><STRONG><a name="[489]"></a>SSP_ConfigStructInit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lpc43xx_ssp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Analog
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_flash
</UL>

<P><STRONG><a name="[4b5]"></a>SSP_ConfigStructInit_mlx90363</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lpc43xx_ssp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_MLX90363
</UL>

<P><STRONG><a name="[478]"></a>SSP_ConfigStructInit_SPI0</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lpc43xx_ssp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EESPI0_ADDA_EN
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EESPI0_ADDA
</UL>

<P><STRONG><a name="[476]"></a>SSP_ConfigStructInit_SPI0_init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lpc43xx_ssp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_flash_test
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EESPI0_EN
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EESPI0
</UL>

<P><STRONG><a name="[477]"></a>SSP_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lpc43xx_ssp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Analog
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_flash
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EESPI0_ADDA_EN
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_flash_test
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_MLX90363
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EESPI0_EN
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EESPI0_ADDA
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EESPI0
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_CS_HIGH
</UL>

<P><STRONG><a name="[9b2]"></a>SSP_LoopBackCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lpc43xx_ssp.o(.text), UNUSED)

<P><STRONG><a name="[9b3]"></a>SSP_SlaveOutputCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lpc43xx_ssp.o(.text), UNUSED)

<P><STRONG><a name="[237]"></a>SSP_SendData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lpc43xx_ssp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_ReadWrite
</UL>

<P><STRONG><a name="[235]"></a>SSP_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lpc43xx_ssp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_ReadWrite
</UL>

<P><STRONG><a name="[234]"></a>SSP_ReadWrite</STRONG> (Thumb, 540 bytes, Stack size 48 bytes, lpc43xx_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_ReceiveData
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_SendData
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_GetDataSize
</UL>

<P><STRONG><a name="[9b4]"></a>SSP_GetStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lpc43xx_ssp.o(.text), UNUSED)

<P><STRONG><a name="[9b5]"></a>SSP_IntConfig</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lpc43xx_ssp.o(.text), UNUSED)

<P><STRONG><a name="[9b6]"></a>SSP_GetRawIntStatus</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, lpc43xx_ssp.o(.text), UNUSED)

<P><STRONG><a name="[9b7]"></a>SSP_GetIntStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lpc43xx_ssp.o(.text), UNUSED)

<P><STRONG><a name="[9b8]"></a>SSP_ClearIntPending</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lpc43xx_ssp.o(.text), UNUSED)

<P><STRONG><a name="[9b9]"></a>SSP_DMACmd</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lpc43xx_ssp.o(.text), UNUSED)

<P><STRONG><a name="[493]"></a>LPC43xx_LCD_Init</STRONG> (Thumb, 344 bytes, Stack size 20 bytes, lpc43xx_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LPC43xx_LCD_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_drive_Init
</UL>

<P><STRONG><a name="[495]"></a>LCD_Power</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, lpc43xx_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_Power
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_drive_Init
</UL>

<P><STRONG><a name="[9ba]"></a>LCD_Enable</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lpc43xx_lcd.o(.text), UNUSED)

<P><STRONG><a name="[494]"></a>LCD_SetFrameBuffer</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lpc43xx_lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_drive_Init
</UL>

<P><STRONG><a name="[9bb]"></a>LCD_SetLPFrameBuffer</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lpc43xx_lcd.o(.text), UNUSED)

<P><STRONG><a name="[9bc]"></a>LCD_Cursor_Config</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lpc43xx_lcd.o(.text), UNUSED)

<P><STRONG><a name="[9bd]"></a>LCD_Cursor_WriteImage</STRONG> (Thumb, 48 bytes, Stack size 20 bytes, lpc43xx_lcd.o(.text), UNUSED)

<P><STRONG><a name="[9be]"></a>LCD_Cursor_GetImageBufferAddress</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lpc43xx_lcd.o(.text), UNUSED)

<P><STRONG><a name="[9bf]"></a>LCD_Cursor_Enable</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lpc43xx_lcd.o(.text), UNUSED)

<P><STRONG><a name="[9c0]"></a>LCD_LoadPalette</STRONG> (Thumb, 122 bytes, Stack size 20 bytes, lpc43xx_lcd.o(.text), UNUSED)

<P><STRONG><a name="[9c1]"></a>LCD_Cursor_LoadPalette0</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lpc43xx_lcd.o(.text), UNUSED)

<P><STRONG><a name="[9c2]"></a>LCD_Cursor_LoadPalette1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lpc43xx_lcd.o(.text), UNUSED)

<P><STRONG><a name="[9c3]"></a>LCD_SetInterrupt</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lpc43xx_lcd.o(.text), UNUSED)

<P><STRONG><a name="[9c4]"></a>LCD_ClrInterrupt</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lpc43xx_lcd.o(.text), UNUSED)

<P><STRONG><a name="[9c5]"></a>LCD_GetInterrupt</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lpc43xx_lcd.o(.text), UNUSED)

<P><STRONG><a name="[9c6]"></a>LCD_Cursor_SetInterrupt</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lpc43xx_lcd.o(.text), UNUSED)

<P><STRONG><a name="[9c7]"></a>LCD_Cursor_ClrInterrupt</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lpc43xx_lcd.o(.text), UNUSED)

<P><STRONG><a name="[9c8]"></a>LCD_Cursor_SetPos</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lpc43xx_lcd.o(.text), UNUSED)

<P><STRONG><a name="[9c9]"></a>LCD_Cursor_SetClip</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lpc43xx_lcd.o(.text), UNUSED)

<P><STRONG><a name="[238]"></a>ADC_Init</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, lpc43xx_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ADC_Init &rArr; CGU_GetPCLKFrequency &rArr; CGU_UpdateClock
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_GetPCLKFrequency
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_DMA
</UL>

<P><STRONG><a name="[9ca]"></a>ADC_DeInit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lpc43xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[4e5]"></a>ADC_StartCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lpc43xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_temperature
</UL>

<P><STRONG><a name="[9cb]"></a>ADC_BurstCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lpc43xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[9cc]"></a>ADC_PowerdownCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lpc43xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[9cd]"></a>ADC_EdgeStartConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lpc43xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[4e1]"></a>ADC_IntConfig</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lpc43xx_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_IntConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_DMA
</UL>

<P><STRONG><a name="[4e2]"></a>ADC_ChannelCmd</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, lpc43xx_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_ChannelCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_DMA
</UL>

<P><STRONG><a name="[4e6]"></a>ADC_ChannelGetData</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lpc43xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_temperature
</UL>

<P><STRONG><a name="[9ce]"></a>ADC_ChannelGetStatus</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lpc43xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[9cf]"></a>ADC_GlobalGetData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lpc43xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[9d0]"></a>ADC_GlobalGetStatus</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lpc43xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[23a]"></a>DMAMUX_Config</STRONG> (Thumb, 244 bytes, Stack size 16 bytes, lpc43xx_gpdma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMAMUX_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPDMA_Setup
</UL>

<P><STRONG><a name="[4e3]"></a>GPDMA_Init</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, lpc43xx_gpdma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_DMA
</UL>

<P><STRONG><a name="[239]"></a>GPDMA_Setup</STRONG> (Thumb, 476 bytes, Stack size 20 bytes, lpc43xx_gpdma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GPDMA_Setup &rArr; DMAMUX_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMAMUX_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_DMA
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_temperature
</UL>

<P><STRONG><a name="[4e4]"></a>GPDMA_ChannelCmd</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lpc43xx_gpdma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_temperature
</UL>

<P><STRONG><a name="[4df]"></a>GPDMA_IntGetStatus</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, lpc43xx_gpdma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_IRQHandler
</UL>

<P><STRONG><a name="[4e0]"></a>GPDMA_ClearIntPending</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lpc43xx_gpdma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_IRQHandler
</UL>

<P><STRONG><a name="[23b]"></a>MCPWM_Init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lpc43xx_mcpwm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MCPWM_Init &rArr; CGU_EntityConnect
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_EntityConnect
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_drive_Init
</UL>

<P><STRONG><a name="[48d]"></a>MCPWM_ConfigChannel</STRONG> (Thumb, 306 bytes, Stack size 12 bytes, lpc43xx_mcpwm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = MCPWM_ConfigChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCOWM_SetPWM
</UL>

<P><STRONG><a name="[48e]"></a>MCPWM_WriteToShadow</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lpc43xx_mcpwm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MCPWM_WriteToShadow
</UL>
<BR>[Called By]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCOWM_SetPWM
</UL>

<P><STRONG><a name="[9d1]"></a>MCPWM_ConfigCapture</STRONG> (Thumb, 266 bytes, Stack size 8 bytes, lpc43xx_mcpwm.o(.text), UNUSED)

<P><STRONG><a name="[9d2]"></a>MCPWM_ClearCapture</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lpc43xx_mcpwm.o(.text), UNUSED)

<P><STRONG><a name="[9d3]"></a>MCPWM_GetCapture</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lpc43xx_mcpwm.o(.text), UNUSED)

<P><STRONG><a name="[9d4]"></a>MCPWM_CountConfig</STRONG> (Thumb, 218 bytes, Stack size 12 bytes, lpc43xx_mcpwm.o(.text), UNUSED)

<P><STRONG><a name="[490]"></a>MCPWM_Start</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lpc43xx_mcpwm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MCPWM_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCOWM_SetPWM
</UL>

<P><STRONG><a name="[9d5]"></a>MCPWM_Stop</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lpc43xx_mcpwm.o(.text), UNUSED)

<P><STRONG><a name="[9d6]"></a>MCPWM_ACMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lpc43xx_mcpwm.o(.text), UNUSED)

<P><STRONG><a name="[48f]"></a>MCPWM_DCMode</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, lpc43xx_mcpwm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MCPWM_DCMode
</UL>
<BR>[Called By]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCOWM_SetPWM
</UL>

<P><STRONG><a name="[9d7]"></a>MCPWM_IntConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lpc43xx_mcpwm.o(.text), UNUSED)

<P><STRONG><a name="[9d8]"></a>MCPWM_IntSet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lpc43xx_mcpwm.o(.text), UNUSED)

<P><STRONG><a name="[9d9]"></a>MCPWM_IntClear</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lpc43xx_mcpwm.o(.text), UNUSED)

<P><STRONG><a name="[9da]"></a>MCPWM_GetIntStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lpc43xx_mcpwm.o(.text), UNUSED)

<P><STRONG><a name="[467]"></a>CPU_IntDis</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IntDisAll
</UL>

<P><STRONG><a name="[9db]"></a>CPU_IntEn</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu_a.o(.text), UNUSED)

<P><STRONG><a name="[9dc]"></a>CPU_SR_Save</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu_a.o(.text), UNUSED)

<P><STRONG><a name="[9dd]"></a>CPU_SR_Restore</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu_a.o(.text), UNUSED)

<P><STRONG><a name="[9de]"></a>CPU_CntLeadZeros</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu_a.o(.text), UNUSED)

<P><STRONG><a name="[9df]"></a>CPU_RevBits</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu_a.o(.text), UNUSED)

<P><STRONG><a name="[9e0]"></a>CPU_WaitForInt</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu_a.o(.text), UNUSED)

<P><STRONG><a name="[9e1]"></a>CPU_WaitForExcept</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu_a.o(.text), UNUSED)

<P><STRONG><a name="[24c]"></a>OS_CPU_SR_Save</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagQuery
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPost
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPendGetFlagsRdy
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPend
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagNameSet
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagNameGet
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagDel
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagCreate
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagAccept
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkChk
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskNameSet
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatInit
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskIdle
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSEventPendMulti
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSEventNameSet
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSEventNameGet
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SysTickHandler
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeSet
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyResume
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskRegSet
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskRegGet
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskQuery
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskNameGet
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelReq
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskChangePrio
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemSet
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemQuery
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPendAbort
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemDel
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemAccept
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQQuery
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostOpt
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostFront
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPendAbort
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQFlush
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQDel
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQAccept
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemQuery
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemPut
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemNameSet
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemNameGet
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemGet
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemCreate
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxQuery
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPostOpt
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPendAbort
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxDel
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxCreate
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxAccept
</UL>

<P><STRONG><a name="[24d]"></a>OS_CPU_SR_Restore</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagQuery
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPost
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPendGetFlagsRdy
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPend
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagNameSet
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagNameGet
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagDel
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagCreate
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagAccept
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkChk
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskNameSet
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatInit
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskIdle
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSEventPendMulti
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSEventNameSet
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSEventNameGet
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SysTickHandler
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeSet
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyResume
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskRegSet
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskRegGet
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskQuery
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskNameGet
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelReq
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskChangePrio
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemSet
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemQuery
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPendAbort
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemDel
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemAccept
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQQuery
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostOpt
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostFront
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPendAbort
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQFlush
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQDel
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQAccept
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemQuery
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemPut
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemNameSet
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemNameGet
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemGet
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemCreate
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxQuery
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPostOpt
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPendAbort
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxDel
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxCreate
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxAccept
</UL>

<P><STRONG><a name="[276]"></a>OSStartHighRdy</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStart
</UL>

<P><STRONG><a name="[257]"></a>OSCtxSw</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[272]"></a>OSIntCtxSw</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
</UL>

<P><STRONG><a name="[30]"></a>OS_CPU_PendSVHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[269]"></a>OSInitHookBegin</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, os_cpu_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[270]"></a>OSInitHookEnd</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, os_cpu_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[23c]"></a>OSTaskCreateHook</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, os_cpu_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSTaskCreateHook
</UL>
<BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskCreateHook
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
</UL>

<P><STRONG><a name="[23e]"></a>OSTaskDelHook</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, os_cpu_c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskDelHook
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>

<P><STRONG><a name="[240]"></a>OSTaskIdleHook</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, os_cpu_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSTaskIdleHook
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskIdleHook
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskIdle
</UL>

<P><STRONG><a name="[242]"></a>OSTaskStatHook</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, os_cpu_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSTaskStatHook
</UL>
<BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskStatHook
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
</UL>

<P><STRONG><a name="[244]"></a>OSTaskReturnHook</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, os_cpu_c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskReturnHook
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskReturn
</UL>

<P><STRONG><a name="[2ab]"></a>OSTaskStkInit</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, os_cpu_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OSTaskStkInit
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
</UL>

<P><STRONG><a name="[67]"></a>OSTaskSwHook</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, os_cpu_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSTaskSwHook
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskSwHook
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_cpu_a.o(.text)
</UL>
<P><STRONG><a name="[247]"></a>OSTCBInitHook</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, os_cpu_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSTCBInitHook
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TCBInitHook
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
</UL>

<P><STRONG><a name="[249]"></a>OSTimeTickHook</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, os_cpu_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = OSTimeTickHook &rArr; OSTmrSignal &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrSignal
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TimeTickHook
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
</UL>

<P><STRONG><a name="[31]"></a>OS_CPU_SysTickHandler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, os_cpu_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = OS_CPU_SysTickHandler &rArr; OSTimeTick &rArr; OSTimeTickHook &rArr; OSTmrSignal &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[250]"></a>OS_CPU_SysTickInit</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, os_cpu_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = OS_CPU_SysTickInit &rArr; OS_CPU_SysTickClkFreq &rArr; CGU_GetPCLKFrequency &rArr; CGU_UpdateClock
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SysTickClkFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskStart
</UL>

<P><STRONG><a name="[271]"></a>OSDebugInit</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, os_dbg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[253]"></a>OS_StrLen</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, os_core.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagNameGet
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSEventNameGet
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrNameGet
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskNameGet
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemNameGet
</UL>

<P><STRONG><a name="[252]"></a>OSEventNameGet</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, os_core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StrLen
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[254]"></a>OSEventNameSet</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = OSEventNameSet
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Init
</UL>

<P><STRONG><a name="[25a]"></a>OS_EventTaskRemoveMulti</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OS_EventTaskRemoveMulti
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSEventPendMulti
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>

<P><STRONG><a name="[255]"></a>OS_Sched</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SchedNew
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSCtxSw
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPost
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPend
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagDel
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSEventPendMulti
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyResume
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskChangePrio
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPendAbort
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemDel
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostOpt
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostFront
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPendAbort
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQDel
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPostOpt
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPendAbort
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxDel
</UL>

<P><STRONG><a name="[259]"></a>OS_EventTaskWaitMulti</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, os_core.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSEventPendMulti
</UL>

<P><STRONG><a name="[258]"></a>OSEventPendMulti</STRONG> (Thumb, 712 bytes, Stack size 64 bytes, os_core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskWaitMulti
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRemoveMulti
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[25b]"></a>OS_TaskStatStkChk</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = OS_TaskStatStkChk &rArr; OSTaskStkChk
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkChk
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
</UL>

<P><STRONG><a name="[25d]"></a>OS_TaskStat</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = OS_TaskStat &rArr; OS_TaskStatStkChk &rArr; OSTaskStkChk
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStatStkChk
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStatHook
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_core.o(.text)
</UL>
<P><STRONG><a name="[263]"></a>OS_TaskIdle</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = OS_TaskIdle &rArr; OSTaskIdleHook
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskIdleHook
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_core.o(.text)
</UL>
<P><STRONG><a name="[266]"></a>OS_MemClr</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_QInit
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemInit
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagInit
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Init
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTCBList
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitEventList
</UL>

<P><STRONG><a name="[268]"></a>OSInit</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = OSInit &rArr; OSTmr_Init &rArr; OSTmr_InitTask &rArr; OSTaskCreateExt &rArr; OS_TCBInit &rArr; OSTCBInitHook
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_QInit
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemInit
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagInit
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Init
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitMisc
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitRdyList
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTCBList
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitEventList
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskIdle
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskStat
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSDebugInit
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInitHookEnd
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInitHookBegin
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[475]"></a>OSIntEnter</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, os_core.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[24f]"></a>OSIntExit</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = OSIntExit
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SchedNew
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntCtxSw
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SysTickHandler
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[273]"></a>OSSchedLock</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = OSSchedLock
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrStop
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrStart
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrStateGet
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrRemainGet
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrNameGet
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrDel
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrCreate
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Task
</UL>

<P><STRONG><a name="[274]"></a>OSSchedUnlock</STRONG> (Thumb, 234 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrStop
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrStart
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrStateGet
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrRemainGet
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrNameGet
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrDel
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrCreate
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Task
</UL>

<P><STRONG><a name="[275]"></a>OSStart</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = OSStart
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SchedNew
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStartHighRdy
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[277]"></a>OSStatInit</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = OSStatInit &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskStart
</UL>

<P><STRONG><a name="[24e]"></a>OSTimeTick</STRONG> (Thumb, 210 bytes, Stack size 16 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = OSTimeTick &rArr; OSTimeTickHook &rArr; OSTmrSignal &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTickHook
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SysTickHandler
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[9e2]"></a>OSVersion</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, os_core.o(.text), UNUSED)

<P><STRONG><a name="[2ae]"></a>OS_Dummy</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, os_core.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>

<P><STRONG><a name="[279]"></a>OS_EventTaskRemove</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_EventTaskRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
</UL>

<P><STRONG><a name="[278]"></a>OS_EventTaskRdy</STRONG> (Thumb, 128 bytes, Stack size 36 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRemove
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRemoveMulti
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPendAbort
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemDel
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostOpt
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostFront
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPendAbort
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQDel
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPostOpt
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPendAbort
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxDel
</UL>

<P><STRONG><a name="[28c]"></a>OS_EventTaskWait</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_EventTaskWait
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
</UL>

<P><STRONG><a name="[289]"></a>OS_EventWaitListInit</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxCreate
</UL>

<P><STRONG><a name="[2b3]"></a>OS_MemCopy</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, os_core.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskQuery
</UL>

<P><STRONG><a name="[27a]"></a>OS_TCBInit</STRONG> (Thumb, 282 bytes, Stack size 40 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = OS_TCBInit &rArr; OSTCBInitHook
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTCBInitHook
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateHook
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
</UL>

<P><STRONG><a name="[27b]"></a>OSFlagAccept</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[27c]"></a>OSFlagCreate</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[27e]"></a>OS_FlagUnlink</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPend
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagTaskRdy
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>

<P><STRONG><a name="[27f]"></a>OSFlagDel</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagTaskRdy
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[280]"></a>OSFlagNameGet</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StrLen
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[281]"></a>OSFlagNameSet</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[282]"></a>OSFlagPend</STRONG> (Thumb, 614 bytes, Stack size 72 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagUnlink
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagBlock
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[284]"></a>OSFlagPendGetFlagsRdy</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[285]"></a>OSFlagPost</STRONG> (Thumb, 312 bytes, Stack size 48 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagTaskRdy
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[286]"></a>OSFlagQuery</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[26c]"></a>OS_FlagInit</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, os_flag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OS_FlagInit
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemClr
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[287]"></a>OSMboxAccept</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, os_mbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[288]"></a>OSMboxCreate</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, os_mbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventWaitListInit
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_InitOS
</UL>

<P><STRONG><a name="[28a]"></a>OSMboxDel</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, os_mbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[28b]"></a>OSMboxPend</STRONG> (Thumb, 252 bytes, Stack size 24 bytes, os_mbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskWait
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRemove
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_WaitEvent
</UL>

<P><STRONG><a name="[28d]"></a>OSMboxPendAbort</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, os_mbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[28e]"></a>OSMboxPost</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, os_mbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_SignalEvent
</UL>

<P><STRONG><a name="[28f]"></a>OSMboxPostOpt</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, os_mbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[290]"></a>OSMboxQuery</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, os_mbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[291]"></a>OSMemCreate</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, os_mem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[292]"></a>OSMemGet</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, os_mem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[293]"></a>OSMemNameGet</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, os_mem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StrLen
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[294]"></a>OSMemNameSet</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, os_mem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[295]"></a>OSMemPut</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, os_mem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[296]"></a>OSMemQuery</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, os_mem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[26d]"></a>OS_MemInit</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, os_mem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OS_MemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemClr
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[297]"></a>OSQAccept</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[298]"></a>OSQCreate</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventWaitListInit
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[299]"></a>OSQDel</STRONG> (Thumb, 244 bytes, Stack size 32 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[29a]"></a>OSQFlush</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[29b]"></a>OSQPend</STRONG> (Thumb, 278 bytes, Stack size 32 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskWait
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRemove
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[29c]"></a>OSQPendAbort</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[29d]"></a>OSQPost</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[29e]"></a>OSQPostFront</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[29f]"></a>OSQPostOpt</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[2a0]"></a>OSQQuery</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[26e]"></a>OS_QInit</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, os_q.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OS_QInit
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemClr
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[2a1]"></a>OSSemAccept</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, os_sem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[2a2]"></a>OSSemCreate</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, os_sem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventWaitListInit
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Init
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Init
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_InitOS
</UL>

<P><STRONG><a name="[2a3]"></a>OSSemDel</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, os_sem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[2a4]"></a>OSSemPend</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, os_sem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = OSSemPend &rArr; OS_EventTaskWait
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskWait
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRemove
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_WaitKey
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Lock
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Task
</UL>

<P><STRONG><a name="[2a5]"></a>OSSemPendAbort</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, os_sem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[2a6]"></a>OSSemPost</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, os_sem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrSignal
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_StoreKey
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Unlock
</UL>

<P><STRONG><a name="[2a7]"></a>OSSemQuery</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, os_sem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[2a8]"></a>OSSemSet</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, os_sem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[2a9]"></a>OSTaskChangePrio</STRONG> (Thumb, 396 bytes, Stack size 64 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[2aa]"></a>OSTaskCreate</STRONG> (Thumb, 148 bytes, Stack size 48 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkInit
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[2ac]"></a>OS_TaskStkClr</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, os_task.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>

<P><STRONG><a name="[261]"></a>OSTaskCreateExt</STRONG> (Thumb, 170 bytes, Stack size 56 bytes, os_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = OSTaskCreateExt &rArr; OS_TCBInit &rArr; OSTCBInitHook
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkInit
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStkClr
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskIdle
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskStat
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_InitTask
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskStart
</UL>

<P><STRONG><a name="[2ad]"></a>OSTaskDel</STRONG> (Thumb, 352 bytes, Stack size 24 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagUnlink
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRemove
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Dummy
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRemoveMulti
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelHook
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskReturn
</UL>

<P><STRONG><a name="[2af]"></a>OSTaskDelReq</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[2b0]"></a>OSTaskNameGet</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StrLen
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[262]"></a>OSTaskNameSet</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, os_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = OSTaskNameSet
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskIdle
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskStat
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_InitTask
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskStart
</UL>

<P><STRONG><a name="[2b1]"></a>OSTaskResume</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[25c]"></a>OSTaskStkChk</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, os_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = OSTaskStkChk
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStatStkChk
</UL>

<P><STRONG><a name="[25f]"></a>OSTaskSuspend</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, os_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = OSTaskSuspend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
</UL>

<P><STRONG><a name="[2b2]"></a>OSTaskQuery</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemCopy
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[2b4]"></a>OSTaskRegGet</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[2b5]"></a>OSTaskRegSet</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[2b6]"></a>OS_TaskReturn</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskReturnHook
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>

<P><STRONG><a name="[25e]"></a>OSTimeDly</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, os_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatInit
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_01
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_states
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_led
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RUN_OPEN
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RUN_CLOSE
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART0
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART2
</UL>

<P><STRONG><a name="[2b7]"></a>OSTimeDlyHMSM</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, os_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = OSTimeDlyHMSM &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskTouch
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskStart
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskStates
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskGUI
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART
</UL>

<P><STRONG><a name="[2b8]"></a>OSTimeDlyResume</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, os_time.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[2b9]"></a>OSTimeGet</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, os_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTime
</UL>

<P><STRONG><a name="[2ba]"></a>OSTimeSet</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, os_time.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>

<P><STRONG><a name="[2bb]"></a>OSTmrCreate</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, os_tmr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Alloc
</UL>

<P><STRONG><a name="[2bd]"></a>OSTmrDel</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, os_tmr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Unlink
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Free
</UL>

<P><STRONG><a name="[2c0]"></a>OSTmrNameGet</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, os_tmr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StrLen
</UL>

<P><STRONG><a name="[2c1]"></a>OSTmrRemainGet</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, os_tmr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>

<P><STRONG><a name="[2c2]"></a>OSTmrStateGet</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, os_tmr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>

<P><STRONG><a name="[2c3]"></a>OSTmrStart</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, os_tmr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Link
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Unlink
</UL>

<P><STRONG><a name="[2c5]"></a>OSTmrStop</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, os_tmr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Unlink
</UL>

<P><STRONG><a name="[24b]"></a>OSTmrSignal</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, os_tmr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = OSTmrSignal &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>
<BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTickHook
</UL>

<P><STRONG><a name="[26f]"></a>OSTmr_Init</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, os_tmr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = OSTmr_Init &rArr; OSTmr_InitTask &rArr; OSTaskCreateExt &rArr; OS_TCBInit &rArr; OSTCBInitHook
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemClr
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSEventNameSet
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_InitTask
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[2c7]"></a>GUI_X_GetTime</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, gui_x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = GUI_X_GetTime &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
</UL>

<P><STRONG><a name="[2c8]"></a>GUI_X_Delay</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = GUI_X_Delay &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_ExecIdle
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
</UL>

<P><STRONG><a name="[6]"></a>GUI_X_ExecIdle</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, gui_x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = GUI_X_ExecIdle &rArr; GUI_X_Delay &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_WaitEvent.o(.data)
</UL>
<P><STRONG><a name="[2c9]"></a>GUI_X_InitOS</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_x.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxCreate
</UL>

<P><STRONG><a name="[2ca]"></a>GUI_X_Lock</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gui_x.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>

<P><STRONG><a name="[2cb]"></a>GUI_X_Unlock</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gui_x.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>

<P><STRONG><a name="[9e3]"></a>GUI_X_GetTaskId</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_x.o(.text), UNUSED)

<P><STRONG><a name="[2cc]"></a>GUI_X_WaitEvent</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gui_x.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
</UL>

<P><STRONG><a name="[2cd]"></a>GUI_X_SignalEvent</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gui_x.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
</UL>

<P><STRONG><a name="[2ce]"></a>GUI_X_Init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gui_x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = GUI_X_Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInit
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[2d0]"></a>GUI_X_GetKey</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_x.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInit
</UL>

<P><STRONG><a name="[2d1]"></a>GUI_X_WaitKey</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gui_x.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInit
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>

<P><STRONG><a name="[2d2]"></a>GUI_X_StoreKey</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui_x.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>

<P><STRONG><a name="[2d3]"></a>GUI_X_Config</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, guiconf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_X_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDefaultFont
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_SetAvBlockSize
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AssignMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
</UL>

<P><STRONG><a name="[2d7]"></a>LCD_X_Config</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, lcdconf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LCD_X_Config &rArr; GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVRAMAddrEx
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXY
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
</UL>
<BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
</UL>

<P><STRONG><a name="[2dd]"></a>LCD_X_DisplayDriver</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, lcdconf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = LCD_X_DisplayDriver &rArr; Lcd_drive_Init &rArr; MCOWM_SetPWM &rArr; MCPWM_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_drive_Init
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVRAMAddrEx
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetDisplayOrigin
</UL>
<BR>[Called By]<UL><LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowBuffer
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVis
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVRAMAddr
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetChroma
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAlpha
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_On
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Off
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Init
</UL>

<P><STRONG><a name="[2e0]"></a>enc_unicode_to_utf8_str</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, codeconvert.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = enc_unicode_to_utf8_str &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCreate
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Create
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCreate
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCreate
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCreate
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCreate
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCreate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinShowHelpInfoCreate
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxCreate
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinShowRefresh
</UL>

<P><STRONG><a name="[9e4]"></a>enc_unicode_to_utf8_one</STRONG> (Thumb, 298 bytes, Stack size 0 bytes, codeconvert.o(.text), UNUSED)

<P><STRONG><a name="[2e2]"></a>_InterDataInit</STRONG> (Thumb, 754 bytes, Stack size 8 bytes, datainterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _InterDataInit &rArr; __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskGUI
</UL>

<P><STRONG><a name="[2e5]"></a>_InterDataRefresh</STRONG> (Thumb, 2454 bytes, Stack size 64 bytes, datainterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _InterDataRefresh &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageKeyEnter
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputKeyEnter
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskGUI
</UL>

<P><STRONG><a name="[373]"></a>GetExpInfoPtr</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, datainterface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinShowHelpInfoCreate
</UL>

<P><STRONG><a name="[375]"></a>GetHandleInfoPtr</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, datainterface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinShowHelpInfoCreate
</UL>

<P><STRONG><a name="[9e5]"></a>WIN_KeyBoard</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, win.o(.text), UNUSED)

<P><STRONG><a name="[2e9]"></a>_DataRefresh</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, win.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SendKeyMsg
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
</UL>

<P><STRONG><a name="[2ed]"></a>WIN_WindowsTreeInit</STRONG> (Thumb, 5272 bytes, Stack size 24 bytes, win.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = WIN_WindowsTreeInit &rArr; BT_GetDataItem &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_InitBiTree
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GetRightChild
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GetLeftChild
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GetDataItem
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_AddChild
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskGUI
</UL>

<P><STRONG><a name="[390]"></a>WIN_Home</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, win_context.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WIN_Home
</UL>
<BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuKeyEnter
</UL>

<P><STRONG><a name="[2f3]"></a>WIN_Enter</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, win_context.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = WIN_Enter &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec1
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GetLChildElem
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GetRightChild
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCallback
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCallback
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListCallback
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCallback
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuKeyEnter
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageKeyEnter
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2KeyEnter
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpKeyEnter
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuKeyEnter
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuKeyEnter
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuKeyEnter
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuKeyEnter
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpKeyEnter
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoKeyEnter
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinKeyEnter
</UL>

<P><STRONG><a name="[351]"></a>WIN_Exit</STRONG> (Thumb, 268 bytes, Stack size 32 bytes, win_context.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WIN_Exit
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinShowHelpInfoCallback
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCallback
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCallback
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListCallback
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuKeyEnter
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeKeyEnter
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageKeyEnter
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputKeyEnter
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2KeyEnter
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpKeyEnter
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuKeyEnter
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuKeyEnter
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumKeyEnter
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumKeyEnter
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumKeyEnter
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageKeyEnter
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenKeyEnter
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseKeyEnter
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosKeyEnter
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesKeyEnter
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenKeyEnter
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseKeyEnter
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenKeyEnter
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseKeyEnter
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenKeyEnter
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseKeyEnter
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectKeyEnter
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserKeyEnter
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuKeyEnter
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuKeyEnter
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpKeyEnter
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoKeyEnter
</UL>

<P><STRONG><a name="[408]"></a>WIN_Exit_Lv</STRONG> (Thumb, 268 bytes, Stack size 32 bytes, win_context.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WIN_Exit_Lv
</UL>
<BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuKeyEnter
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkKeyEnter
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputKeyEnter
</UL>

<P><STRONG><a name="[9e6]"></a>WIN_Refresh</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, win_context.o(.text), UNUSED)

<P><STRONG><a name="[9e7]"></a>WIN_AdvanceEnter</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, win_context.o(.text), UNUSED)

<P><STRONG><a name="[9e8]"></a>WIN_AdvanceExit</STRONG> (Thumb, 270 bytes, Stack size 24 bytes, win_context.o(.text), UNUSED)

<P><STRONG><a name="[2f6]"></a>WIN_ContextInit</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, win_context.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WIN_ContextInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GetRoot
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskGUI
</UL>

<P><STRONG><a name="[2ef]"></a>BT_InitBiTree</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, win_tree.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_WindowsTreeInit
</UL>

<P><STRONG><a name="[2ee]"></a>BT_GetDataItem</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, win_tree.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = BT_GetDataItem &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_WindowsTreeInit
</UL>

<P><STRONG><a name="[9e9]"></a>BT_GetStackSize</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, win_tree.o(.text), UNUSED)

<P><STRONG><a name="[2f7]"></a>BT_GetRoot</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, win_tree.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_ContextInit
</UL>

<P><STRONG><a name="[2f2]"></a>BT_GetLeftChild</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, win_tree.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_WindowsTreeInit
</UL>

<P><STRONG><a name="[2f1]"></a>BT_GetRightChild</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, win_tree.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinShowHelpInfoCreate
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCreate
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxCreate
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Enter
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_WindowsTreeInit
</UL>

<P><STRONG><a name="[356]"></a>BT_GetLeftDepth</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, win_tree.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinShowHelpInfoCreate
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCreate
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxCreate
</UL>

<P><STRONG><a name="[9ea]"></a>BT_GetRightDepth</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, win_tree.o(.text), UNUSED)

<P><STRONG><a name="[2f4]"></a>BT_GetLChildElem</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, win_tree.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BT_GetLChildElem
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCreate
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxCreate
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Enter
</UL>

<P><STRONG><a name="[9eb]"></a>BT_GetRChildElem</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, win_tree.o(.text), UNUSED)

<P><STRONG><a name="[9ec]"></a>BT_InsertLChildElem</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, win_tree.o(.text), UNUSED)

<P><STRONG><a name="[9ed]"></a>BT_InsertRChildElem</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, win_tree.o(.text), UNUSED)

<P><STRONG><a name="[9ee]"></a>BT_DeleteLChildElem</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, win_tree.o(.text), UNUSED)

<P><STRONG><a name="[9ef]"></a>BT_DeleteRChildElem</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, win_tree.o(.text), UNUSED)

<P><STRONG><a name="[2f0]"></a>BT_AddChild</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, win_tree.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_WindowsTreeInit
</UL>

<P><STRONG><a name="[9f0]"></a>BT_DeleteChild</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, win_tree.o(.text), UNUSED)

<P><STRONG><a name="[2fe]"></a>SKIN_DriverRight_Button_Return2</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, winwindow.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>

<P><STRONG><a name="[9f1]"></a>backgroundmbit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, winwindow.o(.text), UNUSED)

<P><STRONG><a name="[312]"></a>_MainWinKeyDown</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _MainWinKeyDown &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCallback
</UL>

<P><STRONG><a name="[316]"></a>_MainWinKeyUp</STRONG> (Thumb, 224 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _MainWinKeyUp &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCallback
</UL>

<P><STRONG><a name="[318]"></a>_MainWinShowRefresh</STRONG> (Thumb, 330 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _MainWinShowRefresh &rArr; LISTBOX_SetString &rArr; LISTBOX_UpdateScrollers &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_unicode_to_utf8_str
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetString
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinKeyEnter
</UL>

<P><STRONG><a name="[31c]"></a>_MainWinKeyEnter</STRONG> (Thumb, 246 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = _MainWinKeyEnter &rArr; WIN_Enter &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Enter
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinShowRefresh
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCallback
</UL>

<P><STRONG><a name="[31e]"></a>_MainWinShowDataRefresh</STRONG> (Thumb, 1482 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _MainWinShowDataRefresh &rArr; GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCallback
</UL>

<P><STRONG><a name="[330]"></a>_WinCommonMenuListOwnerDraw00</STRONG> (Thumb, 582 bytes, Stack size 160 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = _WinCommonMenuListOwnerDraw00 &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeX_CommonList
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY_CommonList3
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY_CommonList
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemText
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemSel
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRectEx
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGradientH_PointWhite
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[15d]"></a>_MainWinInterface</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _MainWinInterface &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> win.o(.constdata)
</UL>
<P><STRONG><a name="[35b]"></a>ListBoxInterface</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, winwindow.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetNumItems
</UL>

<P><STRONG><a name="[36d]"></a>ListViewInterface</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, winwindow.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSel
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
</UL>

<P><STRONG><a name="[36f]"></a>_ListBoxShowMainInfoKeyEnter</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = _ListBoxShowMainInfoKeyEnter &rArr; WIN_Enter &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Enter
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCallback
</UL>

<P><STRONG><a name="[370]"></a>_ListBoxShowMainInfoKeyDown</STRONG> (Thumb, 198 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _ListBoxShowMainInfoKeyDown &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetNumItems
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCallback
</UL>

<P><STRONG><a name="[371]"></a>_ListBoxShowMainInfoKeyUp</STRONG> (Thumb, 284 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _ListBoxShowMainInfoKeyUp &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetNumItems
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCallback
</UL>

<P><STRONG><a name="[15f]"></a>ListBoxShowMainInfoInterface</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = ListBoxShowMainInfoInterface &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> win.o(.constdata)
</UL>
<P><STRONG><a name="[9f2]"></a>WinShowHelpInfoInterface</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, winwindow.o(.text), UNUSED)

<P><STRONG><a name="[376]"></a>_WinLocalOpKeyDown</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinLocalOpKeyDown &rArr; TEXT_SetBkColor &rArr; WM_SetHasTrans &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCallback
</UL>

<P><STRONG><a name="[377]"></a>_WinLocalOpKeyUp</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinLocalOpKeyUp &rArr; TEXT_SetBkColor &rArr; WM_SetHasTrans &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCallback
</UL>

<P><STRONG><a name="[378]"></a>_WinLocalOpKeyEnter</STRONG> (Thumb, 446 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = _WinLocalOpKeyEnter &rArr; WIN_Enter &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Enter
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCallback
</UL>

<P><STRONG><a name="[380]"></a>_WinLocalOpKeyTAB</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, winwindow.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCallback
</UL>

<P><STRONG><a name="[37a]"></a>_WinLocalOpKeyENTER_BEF</STRONG> (Thumb, 742 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616 + Unknown Stack Size
<LI>Call Chain = _WinLocalOpKeyENTER_BEF &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_EnableWindow
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableWindow
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCallback
</UL>

<P><STRONG><a name="[37e]"></a>header_txt</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = header_txt &rArr; GUI_AA_FillRoundedRectEx &rArr; GUI_AA_FillRoundedRect &rArr; GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCreate
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Create
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCreate
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCreate
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCreate
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCreate
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCreate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpRefresh
</UL>

<P><STRONG><a name="[37f]"></a>_WinLocalOpRefresh</STRONG> (Thumb, 1754 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _WinLocalOpRefresh &rArr; header_txt &rArr; GUI_AA_FillRoundedRectEx &rArr; GUI_AA_FillRoundedRect &rArr; GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetSkin
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGradientH_PointWhite
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_txt
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCallback
</UL>

<P><STRONG><a name="[382]"></a>StrShowClear</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, winwindow.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCreate
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Create
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCreate
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCreate
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCreate
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCreate
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
</UL>

<P><STRONG><a name="[160]"></a>_WinLocalOpInterface</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _WinLocalOpInterface &rArr; TEXT_SetBkColor &rArr; WM_SetHasTrans &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> win.o(.constdata)
</UL>
<P><STRONG><a name="[383]"></a>_WinMainMenuKeyDown</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _WinMainMenuKeyDown &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetNumItems
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCallback
</UL>

<P><STRONG><a name="[384]"></a>_WinMainMenuKeyEnter</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = _WinMainMenuKeyEnter &rArr; WIN_Enter &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Enter
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCallback
</UL>

<P><STRONG><a name="[385]"></a>_WinMainMenuKeyUp</STRONG> (Thumb, 210 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _WinMainMenuKeyUp &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetNumItems
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCallback
</UL>

<P><STRONG><a name="[38a]"></a>_WinCommonMenuListOwnerDraw4</STRONG> (Thumb, 454 bytes, Stack size 152 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = _WinCommonMenuListOwnerDraw4 &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY_CommonList4
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGradientV_PointWhite
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeX_CommonList
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY_CommonList
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemText
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemSel
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRectEx
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGradientH_PointWhite
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[161]"></a>_WinMainMenuInterface</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _WinMainMenuInterface &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetNumItems
</UL>
<BR>[Address Reference Count : 1]<UL><LI> win.o(.constdata)
</UL>
<P><STRONG><a name="[15e]"></a>_voidFun</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, winwindow.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> win.o(.constdata)
</UL>
<P><STRONG><a name="[38b]"></a>DrawGradientH_color</STRONG> (Thumb, 232 bytes, Stack size 40 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = DrawGradientH_color &rArr; GUI_DrawGradientH &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuCreate
</UL>

<P><STRONG><a name="[38c]"></a>_WinCommonMenuListOwnerDraw2</STRONG> (Thumb, 338 bytes, Stack size 152 bytes, winwindow.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeX_CommonList
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY_CommonList
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemText
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemSel
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRectEx
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGradientH_PointWhite
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[38d]"></a>_WinCommonMenuKeyDown</STRONG> (Thumb, 316 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _WinCommonMenuKeyDown &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetNumItems
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCallback
</UL>

<P><STRONG><a name="[38e]"></a>_WinCommonMenuKeyUp</STRONG> (Thumb, 278 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _WinCommonMenuKeyUp &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetNumItems
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCallback
</UL>

<P><STRONG><a name="[38f]"></a>_WinCommonMenuKeyEnter</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = _WinCommonMenuKeyEnter &rArr; WIN_Enter &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Enter
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Home
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetNumItems
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCallback
</UL>

<P><STRONG><a name="[391]"></a>_WinCommonMenuRefresh</STRONG> (Thumb, 3196 bytes, Stack size 72 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = _WinCommonMenuRefresh &rArr; LISTBOX_SetString &rArr; LISTBOX_UpdateScrollers &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetString
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCallback
</UL>

<P><STRONG><a name="[394]"></a>_WinCommonMenuListOwnerDraw50</STRONG> (Thumb, 976 bytes, Stack size 152 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = _WinCommonMenuListOwnerDraw50 &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY_CommonList4
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGradientV_PointWhite
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeX_CommonList
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY_CommonList
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemText
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemSel
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRectEx
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGradientH_PointWhite
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[395]"></a>_WinCommonMenuListOwnerDraw6</STRONG> (Thumb, 436 bytes, Stack size 152 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = _WinCommonMenuListOwnerDraw6 &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY_CommonList4
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGradientV_PointWhite
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeX_CommonList
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY_CommonList
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemText
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemSel
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRectEx
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGradientH_PointWhite
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[396]"></a>_WinEmergencyPosKeyRefresh</STRONG> (Thumb, 60 bytes, Stack size 56 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _WinEmergencyPosKeyRefresh &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
</UL>

<P><STRONG><a name="[397]"></a>__WinEmgSpeedOpenRefresh</STRONG> (Thumb, 50 bytes, Stack size 56 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = __WinEmgSpeedOpenRefresh &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCallback
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
</UL>

<P><STRONG><a name="[398]"></a>_WinEmgSpeedCloseRefresh</STRONG> (Thumb, 42 bytes, Stack size 56 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _WinEmgSpeedCloseRefresh &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCallback
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
</UL>

<P><STRONG><a name="[399]"></a>_WinSpeedOpenRefresh</STRONG> (Thumb, 54 bytes, Stack size 56 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _WinSpeedOpenRefresh &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCallback
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
</UL>

<P><STRONG><a name="[39a]"></a>_WinSpeedCloseRefresh</STRONG> (Thumb, 62 bytes, Stack size 56 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _WinSpeedCloseRefresh &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCallback
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
</UL>

<P><STRONG><a name="[39b]"></a>_WinOverMomentTimesRefresh</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _WinOverMomentTimesRefresh &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCallback
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
</UL>

<P><STRONG><a name="[39c]"></a>_WinEndPosOpenRefresh</STRONG> (Thumb, 48 bytes, Stack size 56 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _WinEndPosOpenRefresh &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCallback
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenKeyEnter
</UL>

<P><STRONG><a name="[39d]"></a>_WinEndPosCloseRefresh</STRONG> (Thumb, 300 bytes, Stack size 56 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _WinEndPosCloseRefresh &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCallback
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseKeyEnter
</UL>

<P><STRONG><a name="[39e]"></a>_WinMomentOpenRefresh</STRONG> (Thumb, 62 bytes, Stack size 64 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _WinMomentOpenRefresh &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCallback
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenKeyEnter
</UL>

<P><STRONG><a name="[39f]"></a>_WinMomentCloseRefesh</STRONG> (Thumb, 70 bytes, Stack size 64 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _WinMomentCloseRefesh &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCallback
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseKeyEnter
</UL>

<P><STRONG><a name="[162]"></a>_WinCommonMenuInterface</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _WinCommonMenuInterface &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetNumItems
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> win.o(.constdata)
</UL>
<P><STRONG><a name="[3a0]"></a>_WinCurUserKeyEnter</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _WinCurUserKeyEnter &rArr; LISTBOX_GetItemDisabled &rArr; GUI_ARRAY_GethItem &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCallback
</UL>

<P><STRONG><a name="[3a1]"></a>_WinCurUserKeyDown</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _WinCurUserKeyDown &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetNumItems
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCallback
</UL>

<P><STRONG><a name="[3a2]"></a>_WinCurUserKeyUp</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _WinCurUserKeyUp &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetNumItems
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCallback
</UL>

<P><STRONG><a name="[9f3]"></a>_WinCurUserInterface</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, winwindow.o(.text), UNUSED)

<P><STRONG><a name="[3a9]"></a>_WinCommonSelectRefresh_save</STRONG> (Thumb, 418 bytes, Stack size 0 bytes, winwindow.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectKeyEnter
</UL>

<P><STRONG><a name="[3a5]"></a>_WinCommonSelctRefresh</STRONG> (Thumb, 1642 bytes, Stack size 56 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _WinCommonSelctRefresh &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCallback
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectKeyEnter
</UL>

<P><STRONG><a name="[3a8]"></a>_WinCommonSelectKeyEnter</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = _WinCommonSelectKeyEnter &rArr; _WinCommonSelectRefresh &rArr; GUI_SetOrientation &rArr; GUI_SetOrientationEx &rArr; GUI_SetOrientationExCached &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectRefresh
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelctRefresh
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectRefresh_save
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCallback
</UL>

<P><STRONG><a name="[3aa]"></a>_WinCommonSelectKeyDown</STRONG> (Thumb, 482 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _WinCommonSelectKeyDown &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetNumItems
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCallback
</UL>

<P><STRONG><a name="[3ab]"></a>_WinCommonSelectKeyUp</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _WinCommonSelectKeyUp &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetNumItems
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCallback
</UL>

<P><STRONG><a name="[3ac]"></a>_WinCommonSelectFresh</STRONG> (Thumb, 264 bytes, Stack size 64 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = _WinCommonSelectFresh &rArr; CHECKBOX_CreateEx &rArr; CHECKBOX_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetValue
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetNumItems
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCreate
</UL>

<P><STRONG><a name="[165]"></a>_WinCommonSelectInterface</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, winwindow.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> win.o(.constdata)
</UL>
<P><STRONG><a name="[3b0]"></a>_WinSpeedCloseKeyEnter</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _WinSpeedCloseKeyEnter &rArr; WIN_Exit
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCallback
</UL>

<P><STRONG><a name="[3b1]"></a>_WinSpeedCloseKeyDown</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _WinSpeedCloseKeyDown &rArr; PROGBAR_SetValue &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCallback
</UL>

<P><STRONG><a name="[3b3]"></a>_WinSpeedCloseKeyUp</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _WinSpeedCloseKeyUp &rArr; PROGBAR_SetValue &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCallback
</UL>

<P><STRONG><a name="[9f4]"></a>_WinSpeedCloseInterface</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, winwindow.o(.text), UNUSED)

<P><STRONG><a name="[3ba]"></a>_WinSpeedOpenKeyEnter</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _WinSpeedOpenKeyEnter &rArr; WIN_Exit
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCallback
</UL>

<P><STRONG><a name="[3bb]"></a>_WinSpeedOpenKeyDown</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _WinSpeedOpenKeyDown &rArr; PROGBAR_SetValue &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCallback
</UL>

<P><STRONG><a name="[3bc]"></a>_WinSpeedOpenKeyUp</STRONG> (Thumb, 228 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _WinSpeedOpenKeyUp &rArr; PROGBAR_SetValue &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCallback
</UL>

<P><STRONG><a name="[9f5]"></a>_WinSpeedOpenInterface</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, winwindow.o(.text), UNUSED)

<P><STRONG><a name="[3be]"></a>_WinEndPosCloseKeyEnter</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _WinEndPosCloseKeyEnter &rArr; _WinEndPosCloseRefresh &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseRefresh
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCallback
</UL>

<P><STRONG><a name="[3bf]"></a>_WinEndPosCloseKeyDown</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _WinEndPosCloseKeyDown &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCallback
</UL>

<P><STRONG><a name="[3c0]"></a>_WinEndPosCloseKeyUp</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _WinEndPosCloseKeyUp &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCallback
</UL>

<P><STRONG><a name="[3c2]"></a>_WinEndPosOpenKeyEnter</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _WinEndPosOpenKeyEnter &rArr; _WinEndPosOpenRefresh &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenRefresh
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCallback
</UL>

<P><STRONG><a name="[3c3]"></a>_WinEndPosOpenKeyDown</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _WinEndPosOpenKeyDown &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCallback
</UL>

<P><STRONG><a name="[3c4]"></a>_WinEndPosOpenKeyUp</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _WinEndPosOpenKeyUp &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCallback
</UL>

<P><STRONG><a name="[3c5]"></a>_WinMomentCloseKeyEnter</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _WinMomentCloseKeyEnter &rArr; _WinMomentCloseRefesh &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseRefesh
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCallback
</UL>

<P><STRONG><a name="[3c6]"></a>_WinMomentCloseKeyDown</STRONG> (Thumb, 202 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _WinMomentCloseKeyDown &rArr; PROGBAR_SetValue &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFloatValue
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCallback
</UL>

<P><STRONG><a name="[3cb]"></a>_WinMomentCloseKeyUp</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _WinMomentCloseKeyUp &rArr; PROGBAR_SetValue &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFloatValue
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCallback
</UL>

<P><STRONG><a name="[3cf]"></a>_WinMomentOpenKeyEnter</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _WinMomentOpenKeyEnter &rArr; _WinMomentOpenRefresh &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenRefresh
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCallback
</UL>

<P><STRONG><a name="[3d0]"></a>_WinMomentOpenKeyDown</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _WinMomentOpenKeyDown &rArr; PROGBAR_SetValue &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFloatValue
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCallback
</UL>

<P><STRONG><a name="[3d1]"></a>_WinMomentOpenKeyUp</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _WinMomentOpenKeyUp &rArr; PROGBAR_SetValue &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFloatValue
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCallback
</UL>

<P><STRONG><a name="[3d2]"></a>_WinOverMomentTimesKeyEnter</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _WinOverMomentTimesKeyEnter &rArr; WIN_Exit
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCallback
</UL>

<P><STRONG><a name="[3d3]"></a>_WinOverMomentTimesKeyDown</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _WinOverMomentTimesKeyDown &rArr; PROGBAR_SetValue &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFloatValue
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCallback
</UL>

<P><STRONG><a name="[3d5]"></a>_WinOverMomentTimesKeyUp</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _WinOverMomentTimesKeyUp &rArr; PROGBAR_SetValue &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFloatValue
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCallback
</UL>

<P><STRONG><a name="[3d7]"></a>_WinEmergencyPosKeyEnter</STRONG> (Thumb, 540 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _WinEmergencyPosKeyEnter &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCallback
</UL>

<P><STRONG><a name="[3d8]"></a>_WinEmergencyPosKeyDown</STRONG> (Thumb, 402 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _WinEmergencyPosKeyDown &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCallback
</UL>

<P><STRONG><a name="[3d9]"></a>_WinEmergencyPosKeyUp</STRONG> (Thumb, 412 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _WinEmergencyPosKeyUp &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCallback
</UL>

<P><STRONG><a name="[8a]"></a>_WinCommonMenuListOwnerDraw3</STRONG> (Thumb, 338 bytes, Stack size 152 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = _WinCommonMenuListOwnerDraw3 &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY_CommonList4
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeX_CommonList
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY_CommonList
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemText
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemSel
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRectEx
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGradientH_PointWhite
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[3dc]"></a>_WinEmgSpeedCloseKeyEnter</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _WinEmgSpeedCloseKeyEnter &rArr; WIN_Exit
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCallback
</UL>

<P><STRONG><a name="[3dd]"></a>_WinEmgSpeedCloseKeyDown</STRONG> (Thumb, 232 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _WinEmgSpeedCloseKeyDown &rArr; PROGBAR_SetValue &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCallback
</UL>

<P><STRONG><a name="[3de]"></a>_WinEmgSpeedCloseKeyUp</STRONG> (Thumb, 166 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _WinEmgSpeedCloseKeyUp &rArr; PROGBAR_SetValue &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCallback
</UL>

<P><STRONG><a name="[9f6]"></a>_WinEmgSpeedCloseInterface</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, winwindow.o(.text), UNUSED)

<P><STRONG><a name="[3df]"></a>_WinEmgSpeedOpenKeyEnter</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _WinEmgSpeedOpenKeyEnter &rArr; WIN_Exit
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCallback
</UL>

<P><STRONG><a name="[3e0]"></a>_WinEmgSpeedOpenKeyDown</STRONG> (Thumb, 166 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _WinEmgSpeedOpenKeyDown &rArr; PROGBAR_SetValue &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCallback
</UL>

<P><STRONG><a name="[3e1]"></a>_WinEmgSpeedOpenKeyUp</STRONG> (Thumb, 166 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _WinEmgSpeedOpenKeyUp &rArr; PROGBAR_SetValue &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCallback
</UL>

<P><STRONG><a name="[9f7]"></a>_WinEmgSpeedOpenInterface</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, winwindow.o(.text), UNUSED)

<P><STRONG><a name="[3e2]"></a>_WinPercentageKeyEnter</STRONG> (Thumb, 364 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _WinPercentageKeyEnter &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCallback
</UL>

<P><STRONG><a name="[3e3]"></a>_WinPercentageKeyDown</STRONG> (Thumb, 294 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _WinPercentageKeyDown &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCallback
</UL>

<P><STRONG><a name="[3e4]"></a>_WinPercentageKeyUp</STRONG> (Thumb, 302 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _WinPercentageKeyUp &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCallback
</UL>

<P><STRONG><a name="[166]"></a>_WinPercentageInterface</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, winwindow.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> win.o(.constdata)
</UL>
<P><STRONG><a name="[3e6]"></a>_WinComThreeNumKeyEnter</STRONG> (Thumb, 468 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _WinComThreeNumKeyEnter &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCallback
</UL>

<P><STRONG><a name="[3e7]"></a>_WinComThreeNumKeyDown</STRONG> (Thumb, 400 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _WinComThreeNumKeyDown &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCallback
</UL>

<P><STRONG><a name="[3e8]"></a>_WinComThreeNumKeyUp</STRONG> (Thumb, 432 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _WinComThreeNumKeyUp &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCallback
</UL>

<P><STRONG><a name="[167]"></a>_WinComThreeNumInterface</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, winwindow.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> win.o(.constdata)
</UL>
<P><STRONG><a name="[3ea]"></a>_WinComFiveNumKeyEnter</STRONG> (Thumb, 704 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _WinComFiveNumKeyEnter &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCallback
</UL>

<P><STRONG><a name="[3eb]"></a>_WinComFiveNumKeyDown</STRONG> (Thumb, 618 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _WinComFiveNumKeyDown &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCallback
</UL>

<P><STRONG><a name="[3ec]"></a>_WinComFiveNumKeyUp</STRONG> (Thumb, 654 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _WinComFiveNumKeyUp &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCallback
</UL>

<P><STRONG><a name="[168]"></a>_WinComFiveNumInterface</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, winwindow.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> win.o(.constdata)
</UL>
<P><STRONG><a name="[3ee]"></a>_WinComFourNumKeyEnter</STRONG> (Thumb, 608 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _WinComFourNumKeyEnter &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCallback
</UL>

<P><STRONG><a name="[3ef]"></a>_WinComFourNumKeyDown</STRONG> (Thumb, 514 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _WinComFourNumKeyDown &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCallback
</UL>

<P><STRONG><a name="[3f0]"></a>_WinComFourNumKeyUp</STRONG> (Thumb, 536 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _WinComFourNumKeyUp &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCallback
</UL>

<P><STRONG><a name="[169]"></a>_WinComFourNumInterface</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, winwindow.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> win.o(.constdata)
</UL>
<P><STRONG><a name="[3f2]"></a>_WinFirstSetEndMenuKeyEnter</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = _WinFirstSetEndMenuKeyEnter &rArr; WIN_Enter &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Enter
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuCallback
</UL>

<P><STRONG><a name="[3f3]"></a>_WinFirstSetEndMenuKeyDown</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinFirstSetEndMenuKeyDown &rArr; TEXT_SetBkColor &rArr; WM_SetHasTrans &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuCallback
</UL>

<P><STRONG><a name="[3f4]"></a>_WinFirstSetEndMenuKeyUp</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinFirstSetEndMenuKeyUp &rArr; TEXT_SetBkColor &rArr; WM_SetHasTrans &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuCallback
</UL>

<P><STRONG><a name="[9f8]"></a>_WinFirstSetEndMenuInterface</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, winwindow.o(.text), UNUSED)

<P><STRONG><a name="[3f5]"></a>_WinSelEndMenuKeyEnter</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = _WinSelEndMenuKeyEnter &rArr; WIN_Enter &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Enter
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCallback
</UL>

<P><STRONG><a name="[3f6]"></a>_WinSelEndMenuKeyDown</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _WinSelEndMenuKeyDown &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCallback
</UL>

<P><STRONG><a name="[3f7]"></a>_WinSelEndMenuKeyUp</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _WinSelEndMenuKeyUp &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCallback
</UL>

<P><STRONG><a name="[9f9]"></a>_WinSelEndMenuInterface</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, winwindow.o(.text), UNUSED)

<P><STRONG><a name="[3f9]"></a>_WinEndPosOpKeyDown</STRONG> (Thumb, 282 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinEndPosOpKeyDown &rArr; TEXT_SetBkColor &rArr; WM_SetHasTrans &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCallback
</UL>

<P><STRONG><a name="[3fa]"></a>_WinEndPosOpKeyUp</STRONG> (Thumb, 342 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinEndPosOpKeyUp &rArr; TEXT_SetBkColor &rArr; WM_SetHasTrans &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCallback
</UL>

<P><STRONG><a name="[3fb]"></a>_WinEndPosOpKeyEnter</STRONG> (Thumb, 358 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = _WinEndPosOpKeyEnter &rArr; WIN_Enter &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Enter
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCallback
</UL>

<P><STRONG><a name="[3fe]"></a>_WinEndPosOpKeyTAB</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, winwindow.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCallback
</UL>

<P><STRONG><a name="[3fc]"></a>_WinEndPosOpKeyENTER_BEF</STRONG> (Thumb, 288 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616 + Unknown Stack Size
<LI>Call Chain = _WinEndPosOpKeyENTER_BEF &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_EnableWindow
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableWindow
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCallback
</UL>

<P><STRONG><a name="[9fa]"></a>_WinEndPosOpInterface</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, winwindow.o(.text), UNUSED)

<P><STRONG><a name="[3ff]"></a>_WinEndPosOpT2KeyDown</STRONG> (Thumb, 362 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinEndPosOpT2KeyDown &rArr; TEXT_SetBkColor &rArr; WM_SetHasTrans &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Callback
</UL>

<P><STRONG><a name="[400]"></a>_WinEndPosOpT2KeyUp</STRONG> (Thumb, 414 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinEndPosOpT2KeyUp &rArr; TEXT_SetBkColor &rArr; WM_SetHasTrans &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Callback
</UL>

<P><STRONG><a name="[401]"></a>_WinEndPosOpT2KeyEnter</STRONG> (Thumb, 370 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = _WinEndPosOpT2KeyEnter &rArr; WIN_Enter &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Enter
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Callback
</UL>

<P><STRONG><a name="[406]"></a>_WinEndPosOpT2KeyTAB</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, winwindow.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Callback
</UL>

<P><STRONG><a name="[402]"></a>_WinEndPosOpT2KeyENTER_BEF</STRONG> (Thumb, 488 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616 + Unknown Stack Size
<LI>Call Chain = _WinEndPosOpT2KeyENTER_BEF &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_EnableWindow
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableWindow
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Callback
</UL>

<P><STRONG><a name="[404]"></a>_WinEndPosOpT2Callback_Refesh2</STRONG> (Thumb, 256 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _WinEndPosOpT2Callback_Refesh2 &rArr; TEXT_SetText &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Callback
</UL>

<P><STRONG><a name="[9fb]"></a>_WinEndPosOpT2Interface</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, winwindow.o(.text), UNUSED)

<P><STRONG><a name="[407]"></a>_WinPasswordInputKeyEnter</STRONG> (Thumb, 966 bytes, Stack size 72 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = _WinPasswordInputKeyEnter &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InterDataRefresh
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit_Lv
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCallback
</UL>

<P><STRONG><a name="[409]"></a>_WinPasswordInputKeyDown</STRONG> (Thumb, 646 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _WinPasswordInputKeyDown &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCallback
</UL>

<P><STRONG><a name="[40a]"></a>_WinPasswordInputKeyUp</STRONG> (Thumb, 466 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _WinPasswordInputKeyUp &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCallback
</UL>

<P><STRONG><a name="[164]"></a>_WinPasswordInputInterface</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, winwindow.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> win.o(.constdata)
</UL>
<P><STRONG><a name="[40c]"></a>_WinCommonUserManageKeyEnter</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = _WinCommonUserManageKeyEnter &rArr; WIN_Enter &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InterDataRefresh
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Enter
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCallback
</UL>

<P><STRONG><a name="[40d]"></a>_WinCommonUserManageKeyDown</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _WinCommonUserManageKeyDown &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetNumItems
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCallback
</UL>

<P><STRONG><a name="[40e]"></a>_WinCommonUserManageKeyUp</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _WinCommonUserManageKeyUp &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetNumItems
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCallback
</UL>

<P><STRONG><a name="[40f]"></a>_WinCommonMenuListOwnerDraw5</STRONG> (Thumb, 832 bytes, Stack size 152 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = _WinCommonMenuListOwnerDraw5 &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY_CommonList4
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGradientV_PointWhite
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeX_CommonList
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY_CommonList
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemText
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemSel
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRectEx
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGradientH_PointWhite
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[410]"></a>_WinCommonUserManageFresh</STRONG> (Thumb, 342 bytes, Stack size 64 bytes, winwindow.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetValue
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetNumItems
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateEx
</UL>

<P><STRONG><a name="[163]"></a>_WinCommonUserManageInterface</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, winwindow.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> win.o(.constdata)
</UL>
<P><STRONG><a name="[411]"></a>_WinPasswordChangeKeyEnter</STRONG> (Thumb, 690 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _WinPasswordChangeKeyEnter &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCallback
</UL>

<P><STRONG><a name="[412]"></a>_WinPasswordChangeKeyDown</STRONG> (Thumb, 492 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _WinPasswordChangeKeyDown &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCallback
</UL>

<P><STRONG><a name="[413]"></a>_WinPasswordChangeKeyUp</STRONG> (Thumb, 466 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _WinPasswordChangeKeyUp &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCallback
</UL>

<P><STRONG><a name="[16a]"></a>_WinPasswordChangeInterface</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, winwindow.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> win.o(.constdata)
</UL>
<P><STRONG><a name="[415]"></a>_WinEndPosSetOkKeyEnter</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _WinEndPosSetOkKeyEnter &rArr; WIN_Exit_Lv
</UL>
<BR>[Calls]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit_Lv
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCallback
</UL>

<P><STRONG><a name="[417]"></a>_WinEndPosSetOkKeyDown</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, winwindow.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCallback
</UL>

<P><STRONG><a name="[416]"></a>_WinEndPosSetOkKeyUp</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, winwindow.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCallback
</UL>

<P><STRONG><a name="[419]"></a>_WinEndPosParaMenuKeyDown</STRONG> (Thumb, 320 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _WinEndPosParaMenuKeyDown &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetNumItems
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCallback
</UL>

<P><STRONG><a name="[41a]"></a>_WinEndPosParaMenuKeyUp</STRONG> (Thumb, 372 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _WinEndPosParaMenuKeyUp &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetNumItems
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCallback
</UL>

<P><STRONG><a name="[41b]"></a>_WinEndPosParaMenuKeyEnter</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = _WinEndPosParaMenuKeyEnter &rArr; WIN_Enter &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit_Lv
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Enter
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetNumItems
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCallback
</UL>

<P><STRONG><a name="[41c]"></a>_WinCommonMenuListOwnerDraw51</STRONG> (Thumb, 788 bytes, Stack size 152 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = _WinCommonMenuListOwnerDraw51 &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY_CommonList4
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGradientV_PointWhite
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeX_CommonList
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY_CommonList
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemText
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemSel
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRectEx
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGradientH_PointWhite
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[16b]"></a>_WinEndPosParaMenuInterface</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _WinEndPosParaMenuInterface &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetNumItems
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> win.o(.constdata)
</UL>
<P><STRONG><a name="[331]"></a>DrawGradientH_PointWhite</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, winskin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = DrawGradientH_PointWhite &rArr; GUI_DrawGradientH &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Create
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCreate
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuCreate
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw51
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw5
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw3
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw6
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw50
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw2
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw4
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpRefresh
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw00
</UL>

<P><STRONG><a name="[422]"></a>jiance_error</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, winskin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
</UL>

<P><STRONG><a name="[425]"></a>jiance_ok</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, winskin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientRoundedV
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawArc
</UL>

<P><STRONG><a name="[428]"></a>quan_drive</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, winskin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
</UL>

<P><STRONG><a name="[429]"></a>open_drive1</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, winskin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientRoundedV
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
</UL>

<P><STRONG><a name="[3bd]"></a>open_drive</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, winskin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = open_drive &rArr; GUI_DrawGradientRoundedV &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientRoundedV
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCreate
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
</UL>

<P><STRONG><a name="[3b9]"></a>close_drive</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, winskin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = close_drive &rArr; GUI_DrawGradientRoundedV &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientRoundedV
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCreate
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
</UL>

<P><STRONG><a name="[65]"></a>main</STRONG> (Thumb, 712 bytes, Stack size 32 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = main &rArr; OSInit &rArr; OSTmr_Init &rArr; OSTmr_InitTask &rArr; OSTaskCreateExt &rArr; OS_TCBInit &rArr; OSTCBInitHook
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskNameSet
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStart
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;states_spi0
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;states_EEPROM
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_eeprom
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_flash_test
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_flash_READ_TEST
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_ConfigUpBuffer
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI0
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EESPI0_EN
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EESPI0
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_CS_HIGH
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_IntDisAll
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[23d]"></a>App_TaskCreateHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateHook
</UL>

<P><STRONG><a name="[23f]"></a>App_TaskDelHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelHook
</UL>

<P><STRONG><a name="[241]"></a>App_TaskIdleHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskIdleHook
</UL>

<P><STRONG><a name="[243]"></a>App_TaskStatHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStatHook
</UL>

<P><STRONG><a name="[246]"></a>App_TaskSwHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSwHook
</UL>

<P><STRONG><a name="[248]"></a>App_TCBInitHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTCBInitHook
</UL>

<P><STRONG><a name="[24a]"></a>App_TimeTickHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTickHook
</UL>

<P><STRONG><a name="[245]"></a>App_TaskReturnHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskReturnHook
</UL>

<P><STRONG><a name="[251]"></a>OS_CPU_SysTickClkFreq</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = OS_CPU_SysTickClkFreq &rArr; CGU_GetPCLKFrequency &rArr; CGU_UpdateClock
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_GetPCLKFrequency
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SysTickInit
</UL>

<P><STRONG><a name="[45c]"></a>BSP_IntDisAll</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = BSP_IntDisAll
</UL>
<BR>[Calls]<UL><LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_IntDis
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[468]"></a>BSP_InitLED</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bsp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_pinmux
</UL>

<P><STRONG><a name="[9fc]"></a>LED_Toggle</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bsp.o(.text), UNUSED)

<P><STRONG><a name="[157]"></a>fputc</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, retarget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = fputc &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[46a]"></a>fgetc</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, retarget.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WaitKey
</UL>

<P><STRONG><a name="[9fd]"></a>ferror</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, retarget.o(.text), UNUSED)

<P><STRONG><a name="[46c]"></a>_ttywrch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, retarget.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>

<P><STRONG><a name="[9fe]"></a>_sys_exit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, retarget.o(.text), UNUSED)

<P><STRONG><a name="[46d]"></a>Init_LED</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, led.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_pinmux
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_GetPCLKFrequency
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>

<P><STRONG><a name="[46f]"></a>c_entry_led</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, led.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>

<P><STRONG><a name="[42a]"></a>Init_States</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Init_States &rArr; CGU_GetPCLKFrequency &rArr; CGU_UpdateClock
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_pinmux
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_GetPCLKFrequency
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskStates
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART0
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART2
</UL>

<P><STRONG><a name="[43d]"></a>c_entry_OPEN</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = c_entry_OPEN
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART0
</UL>

<P><STRONG><a name="[43a]"></a>c_entry_LOCAL</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = c_entry_LOCAL
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART0
</UL>

<P><STRONG><a name="[470]"></a>c_entry_LOCAL1</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, led.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
</UL>

<P><STRONG><a name="[471]"></a>c_entry_LOCAL2</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, led.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>

<P><STRONG><a name="[43b]"></a>c_entry_PC</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = c_entry_PC
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART0
</UL>

<P><STRONG><a name="[43e]"></a>c_entry_CLOSE</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = c_entry_CLOSE
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART0
</UL>

<P><STRONG><a name="[472]"></a>c_entry_allclose</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, led.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>

<P><STRONG><a name="[43f]"></a>c_enty_allclose_close_open</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = c_enty_allclose_close_open
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART0
</UL>

<P><STRONG><a name="[43c]"></a>c_enty_allclose_pc_local</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = c_enty_allclose_pc_local
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART0
</UL>

<P><STRONG><a name="[473]"></a>c_entry_states</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, led.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>

<P><STRONG><a name="[441]"></a>RUN_CLOSE</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = RUN_CLOSE &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART0
</UL>

<P><STRONG><a name="[440]"></a>RUN_OPEN</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = RUN_OPEN &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART0
</UL>

<P><STRONG><a name="[474]"></a>SysTick_Handler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, handler.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
</UL>

<P><STRONG><a name="[499]"></a>Delay</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_READ_EEPROM_PAGE
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_READ_EEPROM
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Backlight_change
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_eeprom
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;states_EEPROM
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_eeprom
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_AO1
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_AI1
</UL>

<P><STRONG><a name="[4b7]"></a>wait_ms</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, handler.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx_I
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx
</UL>

<P><STRONG><a name="[9ff]"></a>wait</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, handler.o(.text), UNUSED)

<P><STRONG><a name="[49a]"></a>Delay_us</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, handler.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Backlight_change
</UL>

<P><STRONG><a name="[4e7]"></a>SPI0_ReadWrite</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_READ_EEPROM_PAGE
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_READ_EEPROM
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;states_EEPROM
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_AO1
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_AI1
</UL>

<P><STRONG><a name="[4b8]"></a>SPI1_ReadWrite</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx_I
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx
</UL>

<P><STRONG><a name="[433]"></a>Init_EESPI0</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Init_EESPI0 &rArr; SSP_Init &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Cmd
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_ConfigStructInit_SPI0_init
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Init
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_pinmux
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART0
</UL>

<P><STRONG><a name="[463]"></a>Init_EESPI0_EN</STRONG> (Thumb, 30 bytes, Stack size 32 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Init_EESPI0_EN &rArr; SSP_Init &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Cmd
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_ConfigStructInit_SPI0_init
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_READ_EEPROM
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[453]"></a>Init_EESPI0_ADDA</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Init_EESPI0_ADDA &rArr; SSP_Init &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Cmd
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_ConfigStructInit_SPI0
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Init
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_pinmux
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskStates
</UL>

<P><STRONG><a name="[479]"></a>Init_EESPI0_ADDA_EN</STRONG> (Thumb, 30 bytes, Stack size 32 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Init_EESPI0_ADDA_EN &rArr; SSP_Init &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Cmd
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_ConfigStructInit_SPI0
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_AO1
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_AI1
</UL>

<P><STRONG><a name="[432]"></a>Init_SPI0</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Init_SPI0 &rArr; scu_pinmux
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_pinmux
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskStates
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART0
</UL>

<P><STRONG><a name="[462]"></a>states_spi0</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = states_spi0
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_READ_EEPROM_PAGE
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_READ_EEPROM
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;states_EEPROM
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_AO1
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_AI1
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47a]"></a>flash_read_status</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = flash_read_status
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssp_xfer_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_block_erase
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_whole_erase
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sector
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data_old
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_enable
</UL>

<P><STRONG><a name="[47d]"></a>flash_read_id</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssp_xfer_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_flash
</UL>

<P><STRONG><a name="[47e]"></a>flash_read_data_old</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_status
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssp_xfer_byte
</UL>

<P><STRONG><a name="[47f]"></a>flash_read_data</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = flash_read_data &rArr; flash_read_status
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_status
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssp_xfer_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_flash_READ_mainerror
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_flash_READ
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_flash_READ_TEST
</UL>

<P><STRONG><a name="[480]"></a>flash_write_sector</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_status
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_enable
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssp_xfer_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data
</UL>

<P><STRONG><a name="[481]"></a>flash_write_data</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sector
</UL>

<P><STRONG><a name="[482]"></a>flash_whole_erase</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_status
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_enable
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssp_xfer_byte
</UL>

<P><STRONG><a name="[483]"></a>flash_block_erase</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_status
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_enable
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssp_xfer_byte
</UL>

<P><STRONG><a name="[484]"></a>flash_sector_erase</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_status
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_enable
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssp_xfer_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sel_erases
</UL>

<P><STRONG><a name="[485]"></a>flash_sel_erases</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
</UL>

<P><STRONG><a name="[a00]"></a>Buffer_Init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, flash.o(.text), UNUSED)

<P><STRONG><a name="[487]"></a>Error_Loop</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, flash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buffer_Verify
</UL>

<P><STRONG><a name="[486]"></a>Buffer_Verify</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Loop
</UL>

<P><STRONG><a name="[488]"></a>c_entry_flash</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Cmd
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_ConfigStructInit
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Init
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_pinmux
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_id
</UL>

<P><STRONG><a name="[45f]"></a>c_entry_flash_test</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = c_entry_flash_test &rArr; SSP_Init &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Cmd
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_ConfigStructInit_SPI0_init
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Init
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_pinmux
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48a]"></a>c_entry_flash_READ</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data
</UL>

<P><STRONG><a name="[460]"></a>c_entry_flash_READ_TEST</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = c_entry_flash_READ_TEST &rArr; flash_read_data &rArr; flash_read_status
</UL>
<BR>[Calls]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48b]"></a>c_entry_flash_READ_mainerror</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data
</UL>

<P><STRONG><a name="[461]"></a>FLASH_CS_HIGH</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = FLASH_CS_HIGH &rArr; scu_pinmux
</UL>
<BR>[Calls]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Cmd
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_pinmux
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[492]"></a>Lcd_clear</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_drive_Init
</UL>

<P><STRONG><a name="[48c]"></a>MCOWM_set</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCOWM_SetPWM
</UL>

<P><STRONG><a name="[44f]"></a>MCOWM_SetPWM</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = MCOWM_SetPWM &rArr; MCPWM_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCPWM_DCMode
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCPWM_Start
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCPWM_WriteToShadow
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCPWM_ConfigChannel
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCOWM_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_drive_Init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskGUI
</UL>

<P><STRONG><a name="[2de]"></a>Lcd_drive_Init</STRONG> (Thumb, 438 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Lcd_drive_Init &rArr; MCOWM_SetPWM &rArr; MCPWM_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCPWM_Init
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetFrameBuffer
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Power
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPC43xx_LCD_Init
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_pinmux
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_SetDIV
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_EntityConnect
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_clear
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCOWM_SetPWM
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_lcd
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskGUI
</UL>

<P><STRONG><a name="[496]"></a>Lcd_Backlight</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_lcd
</UL>

<P><STRONG><a name="[497]"></a>c_entry_lcd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_drive_Init
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Backlight
</UL>

<P><STRONG><a name="[498]"></a>Lcd_Backlight_change</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>

<P><STRONG><a name="[a01]"></a>UART_IntErr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usart_conf.o(.text), UNUSED)

<P><STRONG><a name="[4d]"></a>UART3_IRQHandler</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, usart_conf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveByte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[444]"></a>UART3_Init</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, usart_conf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = UART3_Init &rArr; UART_Init &rArr; uart_set_divisors &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_pinmux
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_FIFOConfigStructInit
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_FIFOConfig
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IntConfig
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ConfigStructInit3
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxCmd
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART
</UL>

<P><STRONG><a name="[4a1]"></a>PowerSend</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, usart_conf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PowerSend
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_uart3
</UL>

<P><STRONG><a name="[44a]"></a>c_entry_uart3</STRONG> (Thumb, 2186 bytes, Stack size 32 bytes, usart_conf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = c_entry_uart3 &rArr; choice_speed_line &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;choice_speed_line
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changetorque
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeDIR
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_Compute
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerSend
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART
</UL>

<P><STRONG><a name="[4ac]"></a>UART0_IntReceive</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, usart_conf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive
</UL>

<P><STRONG><a name="[4ad]"></a>UART0_IntTransmit</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, usart_conf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckBusy
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IntConfig
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0Send
</UL>

<P><STRONG><a name="[4af]"></a>UART0Send</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, usart_conf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IntConfig
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IntTransmit
</UL>

<P><STRONG><a name="[4b0]"></a>UART0Receive</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, usart_conf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IntConfig
</UL>

<P><STRONG><a name="[4a]"></a>UART0_IRQHandler</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, usart_conf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveByte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[42d]"></a>UART0_Init</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, usart_conf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = UART0_Init &rArr; UART_Init &rArr; uart_set_divisors &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_pinmux
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_FIFOConfigStructInit
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_FIFOConfig
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IntConfig
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ConfigStructInit0
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxCmd
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART0
</UL>

<P><STRONG><a name="[4b2]"></a>TestSend</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, usart_conf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_uart0
</UL>

<P><STRONG><a name="[4b3]"></a>c_entry_uart0</STRONG> (Thumb, 398 bytes, Stack size 32 bytes, usart_conf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_test
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSend
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>

<P><STRONG><a name="[a02]"></a>motor_dir</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, usart_conf.o(.text), UNUSED)

<P><STRONG><a name="[44b]"></a>Init_MLX90363</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, mlx90363.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Init_MLX90363 &rArr; SSP_Init &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Cmd
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_ConfigStructInit_mlx90363
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Init
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_pinmux
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskGUI
</UL>

<P><STRONG><a name="[44d]"></a>c_entry_mlx_I</STRONG> (Thumb, 384 bytes, Stack size 64 bytes, mlx90363.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = c_entry_mlx_I &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComputeCRC
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWrite
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_ms
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskGUI
</UL>

<P><STRONG><a name="[44e]"></a>c_entry_mlx</STRONG> (Thumb, 702 bytes, Stack size 96 bytes, mlx90363.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = c_entry_mlx &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComputeCRC
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWrite
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_ms
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskGUI
</UL>

<P><STRONG><a name="[451]"></a>Init_Encoder</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, encoder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Init_Encoder &rArr; CGU_GetPCLKFrequency &rArr; CGU_UpdateClock
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_pinmux
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_GetPCLKFrequency
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskStates
</UL>

<P><STRONG><a name="[42f]"></a>Restart_Encoder_Init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, encoder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Restart_Encoder_Init &rArr; CGU_GetPCLKFrequency &rArr; CGU_UpdateClock
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_pinmux
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_GetPCLKFrequency
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART0
</UL>

<P><STRONG><a name="[442]"></a>Restart_Encoder</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, encoder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Restart_Encoder
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART0
</UL>

<P><STRONG><a name="[4c0]"></a>graytobinary</STRONG> (Thumb, 76 bytes, Stack size 268 bytes, encoder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = graytobinary
</UL>
<BR>[Called By]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_Encoder2
</UL>

<P><STRONG><a name="[4c]"></a>UART2_IRQHandler</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, encoder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveByte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[a03]"></a>c_entry_uart2_encoder</STRONG> (Thumb, 102 bytes, Stack size 12 bytes, encoder.o(.text), UNUSED)

<P><STRONG><a name="[4bf]"></a>UART2_Init</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, encoder.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_pinmux
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_FIFOConfigStructInit
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_FIFOConfig
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IntConfig
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ConfigStructInit0
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxCmd
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>

<P><STRONG><a name="[457]"></a>c_entry_Encoder2</STRONG> (Thumb, 1308 bytes, Stack size 32 bytes, encoder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = c_entry_Encoder2 &rArr; graytobinary
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;graytobinary
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskStates
</UL>

<P><STRONG><a name="[431]"></a>ExternIN_Init</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, extern.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ExternIN_Init &rArr; CGU_GetPCLKFrequency &rArr; CGU_UpdateClock
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_pinmux
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_GetPCLKFrequency
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART0
</UL>

<P><STRONG><a name="[430]"></a>ExternOUT_Init</STRONG> (Thumb, 222 bytes, Stack size 8 bytes, extern.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ExternOUT_Init &rArr; CGU_GetPCLKFrequency &rArr; CGU_UpdateClock
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_pinmux
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_GetPCLKFrequency
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART0
</UL>

<P><STRONG><a name="[434]"></a>Extern_out</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, extern.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Extern_out
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART0
</UL>

<P><STRONG><a name="[438]"></a>Extern_in</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, extern.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Extern_in
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadValue
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART0
</UL>

<P><STRONG><a name="[436]"></a>Extern_set</STRONG> (Thumb, 232 bytes, Stack size 8 bytes, extern.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Extern_set &rArr; Extern_out_test &rArr; Error_out
</UL>
<BR>[Calls]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out_test
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART0
</UL>

<P><STRONG><a name="[4c2]"></a>Extern_out7_ex</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, extern.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Extern_out7_ex
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_set_IO
</UL>

<P><STRONG><a name="[4c3]"></a>Extern_out7</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, extern.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Extern_out7
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_set_IO
</UL>

<P><STRONG><a name="[4c4]"></a>Extern_out6_ex</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, extern.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Extern_out6_ex
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_set_IO
</UL>

<P><STRONG><a name="[4c5]"></a>Extern_out6</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, extern.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Extern_out6
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_set_IO
</UL>

<P><STRONG><a name="[4c6]"></a>Extern_out5_ex</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, extern.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Extern_out5_ex
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_set_IO
</UL>

<P><STRONG><a name="[4c7]"></a>Extern_out5</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, extern.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Extern_out5
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_set_IO
</UL>

<P><STRONG><a name="[4c8]"></a>Extern_out4_ex</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, extern.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Extern_out4_ex
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_set_IO
</UL>

<P><STRONG><a name="[4c9]"></a>Extern_out4</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, extern.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Extern_out4
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_set_IO
</UL>

<P><STRONG><a name="[4ca]"></a>Extern_out3_ex</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, extern.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Extern_out3_ex
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_set_IO
</UL>

<P><STRONG><a name="[4cb]"></a>Extern_out3</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, extern.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Extern_out3
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_set_IO
</UL>

<P><STRONG><a name="[4cc]"></a>Extern_out2_ex</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, extern.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Extern_out2_ex
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_set_IO
</UL>

<P><STRONG><a name="[4cd]"></a>Extern_out2</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, extern.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Extern_out2
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_set_IO
</UL>

<P><STRONG><a name="[4ce]"></a>Extern_out1_ex</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, extern.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Extern_out1_ex
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_set_IO
</UL>

<P><STRONG><a name="[4cf]"></a>Extern_out1</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, extern.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Extern_out1
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_set_IO
</UL>

<P><STRONG><a name="[4d0]"></a>Extern_out0_ex</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, extern.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Extern_out0_ex
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_set_IO
</UL>

<P><STRONG><a name="[4d1]"></a>Extern_out0</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, extern.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Extern_out0
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_set_IO
</UL>

<P><STRONG><a name="[437]"></a>Extern_set_IO</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, extern.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Extern_set_IO &rArr; Extern_out0
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out0
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out0_ex
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out1
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out1_ex
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out2
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out2_ex
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out3
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out3_ex
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out4
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out4_ex
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out5
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out5_ex
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out6
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out6_ex
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out7
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out7_ex
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART0
</UL>

<P><STRONG><a name="[a04]"></a>SET_IO_Extern</STRONG> (Thumb, 162 bytes, Stack size 0 bytes, extern.o(.text), UNUSED)

<P><STRONG><a name="[4b6]"></a>ComputeCRC</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, datacrc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ComputeCRC
</UL>
<BR>[Called By]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx_I
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx
</UL>

<P><STRONG><a name="[4ab]"></a>CRC_Compute</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, datacrc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CRC_Compute
</UL>
<BR>[Called By]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_READ_EEPROM_PAGE
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_hand
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_uart3
</UL>

<P><STRONG><a name="[3e]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 232 bytes, Stack size 8 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIMER0_IRQHandler &rArr; TIM_GetIntStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadValue
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearIntPending
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetIntStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[452]"></a>Timer0_Init</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = Timer0_Init &rArr; TIM_Init &rArr; converUSecToVal &rArr; getPClock &rArr; CGU_GetPCLKFrequency &rArr; CGU_UpdateClock
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ConfigMatch
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Init
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskStates
</UL>

<P><STRONG><a name="[3f]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIMER1_IRQHandler &rArr; TIM_GetIntStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearIntPending
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetIntStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[445]"></a>Init_Timer1</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = Init_Timer1 &rArr; TIM_Init &rArr; converUSecToVal &rArr; getPClock &rArr; CGU_GetPCLKFrequency &rArr; CGU_UpdateClock
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ConfigMatch
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Init
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART
</UL>

<P><STRONG><a name="[40]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 448 bytes, Stack size 8 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIMER2_IRQHandler &rArr; TIM_GetIntStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearIntPending
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetIntStatus
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[446]"></a>Init_Timer2</STRONG> (Thumb, 202 bytes, Stack size 8 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = Init_Timer2 &rArr; TIM_Init &rArr; converUSecToVal &rArr; getPClock &rArr; CGU_GetPCLKFrequency &rArr; CGU_UpdateClock
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ConfigMatch
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Init
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART
</UL>

<P><STRONG><a name="[41]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIMER3_IRQHandler &rArr; TIM_GetIntStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetIntStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[4d6]"></a>Init_Timer3</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ConfigMatch
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Init
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>

<P><STRONG><a name="[449]"></a>check_hand</STRONG> (Thumb, 556 bytes, Stack size 56 bytes, torque.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = check_hand &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_Compute
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART
</UL>

<P><STRONG><a name="[4a3]"></a>changetorque</STRONG> (Thumb, 650 bytes, Stack size 16 bytes, torque.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = changetorque &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_uart3
</UL>

<P><STRONG><a name="[4d9]"></a>Set_DZ</STRONG> (Thumb, 1106 bytes, Stack size 0 bytes, torque.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;choice_speed_line
</UL>

<P><STRONG><a name="[4aa]"></a>choice_speed_line</STRONG> (Thumb, 2396 bytes, Stack size 80 bytes, torque.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = choice_speed_line &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DZ
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_uart3
</UL>

<P><STRONG><a name="[4a2]"></a>changeDIR</STRONG> (Thumb, 338 bytes, Stack size 0 bytes, torque.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_uart3
</UL>

<P><STRONG><a name="[4b4]"></a>check_test</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, test_uart0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_uart0
</UL>

<P><STRONG><a name="[a05]"></a>c_entry_uart0_encoder</STRONG> (Thumb, 104 bytes, Stack size 12 bytes, test_uart0.o(.text), UNUSED)

<P><STRONG><a name="[454]"></a>hand_Init</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, hand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = hand_Init &rArr; CGU_GetPCLKFrequency &rArr; CGU_UpdateClock
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_pinmux
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_GetPCLKFrequency
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskStates
</UL>

<P><STRONG><a name="[4dc]"></a>poweron_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, hand.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_pinmux
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_GetPCLKFrequency
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>

<P><STRONG><a name="[4dd]"></a>power_on</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, hand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = power_on
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadValue
</UL>
<BR>[Called By]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_14
</UL>

<P><STRONG><a name="[4de]"></a>handdetection</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, hand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = handdetection
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadValue
</UL>
<BR>[Called By]<UL><LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_01
</UL>

<P><STRONG><a name="[34]"></a>DMA_IRQHandler</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, temperature.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPDMA_ClearIntPending
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPDMA_IntGetStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[42b]"></a>Init_DMA</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, temperature.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Init_DMA &rArr; ADC_Init &rArr; CGU_GetPCLKFrequency &rArr; CGU_UpdateClock
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPDMA_Setup
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPDMA_Init
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ChannelCmd
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IntConfig
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART2
</UL>

<P><STRONG><a name="[42c]"></a>ADC_temperature</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, temperature.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ADC_temperature &rArr; GPDMA_Setup &rArr; DMAMUX_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPDMA_ChannelCmd
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPDMA_Setup
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ChannelGetData
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART2
</UL>

<P><STRONG><a name="[464]"></a>states_EEPROM</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = states_EEPROM &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_ReadWrite
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;states_spi0
</UL>
<BR>[Called By]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_READ_EEPROM_PAGE
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_READ_EEPROM
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4e8]"></a>WRITE_READ_EEPROM</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = WRITE_READ_EEPROM &rArr; Init_EESPI0_EN &rArr; SSP_Init &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_ReadWrite
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;states_spi0
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;states_EEPROM
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EESPI0_EN
</UL>
<BR>[Called By]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_eeprom
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_eeprom
</UL>

<P><STRONG><a name="[465]"></a>read_eeprom</STRONG> (Thumb, 1544 bytes, Stack size 8 bytes, eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = read_eeprom &rArr; WRITE_READ_EEPROM &rArr; Init_EESPI0_EN &rArr; SSP_Init &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_READ_EEPROM
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[439]"></a>write_eeprom</STRONG> (Thumb, 2356 bytes, Stack size 8 bytes, eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = write_eeprom &rArr; WRITE_READ_EEPROM &rArr; Init_EESPI0_EN &rArr; SSP_Init &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_READ_EEPROM
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART0
</UL>

<P><STRONG><a name="[4e9]"></a>WRITE_READ_EEPROM_PAGE</STRONG> (Thumb, 580 bytes, Stack size 64 bytes, eeprom.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_Compute
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_ReadWrite
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;states_spi0
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;states_EEPROM
</UL>

<P><STRONG><a name="[447]"></a>RUN_ele_time</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, time.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART
</UL>

<P><STRONG><a name="[448]"></a>RUN_Coils_time</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, time.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART
</UL>

<P><STRONG><a name="[4ea]"></a>Init_Analog</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, 0420.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Cmd
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_ConfigStructInit
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Init
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_pinmux
</UL>

<P><STRONG><a name="[45a]"></a>c_entry_AO1</STRONG> (Thumb, 614 bytes, Stack size 152 bytes, 0420.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = c_entry_AO1 &rArr; Init_EESPI0_ADDA_EN &rArr; SSP_Init &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EESPI0_ADDA_EN
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_ReadWrite
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;states_spi0
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskStates
</UL>

<P><STRONG><a name="[458]"></a>c_entry_AI1</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, 0420.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = c_entry_AI1 &rArr; Init_EESPI0_ADDA_EN &rArr; SSP_Init &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EESPI0_ADDA_EN
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_ReadWrite
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;states_spi0
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskStates
</UL>

<P><STRONG><a name="[4ed]"></a>remote_ctr</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, 0420.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_control
</UL>

<P><STRONG><a name="[4ec]"></a>remote_mode</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, 0420.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_control
</UL>

<P><STRONG><a name="[459]"></a>remote_control</STRONG> (Thumb, 2368 bytes, Stack size 80 bytes, 0420.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = remote_control &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_mode
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_ctr
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskStates
</UL>

<P><STRONG><a name="[4ee]"></a>remote_EME</STRONG> (Thumb, 404 bytes, Stack size 24 bytes, 0420.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>

<P><STRONG><a name="[4f0]"></a>READ_0420_remote</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, 0420.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m0420_Read
</UL>

<P><STRONG><a name="[4ef]"></a>m0420_Read</STRONG> (Thumb, 174 bytes, Stack size 8 bytes, 0420.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = m0420_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;READ_0420_remote
</UL>
<BR>[Called By]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCOM_Usb2Serial
</UL>

<P><STRONG><a name="[4f7]"></a>Error_00</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error0x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[4f1]"></a>Error_01</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, error0x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = Error_01 &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handdetection
</UL>
<BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[4f8]"></a>Error_02</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, error0x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[4f9]"></a>Error_03</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, error0x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[4fa]"></a>Error_04</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error0x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[4fb]"></a>Error_05</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error0x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[4fc]"></a>Error_06</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error0x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[4fd]"></a>Error_07</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error0x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[4fe]"></a>Error_08</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error0x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[4ff]"></a>Error_09</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error0x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[4f2]"></a>Error_11</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, error1x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Error_11
</UL>
<BR>[Calls]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[4f3]"></a>Error_12</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, error1x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Error_12
</UL>
<BR>[Calls]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[4f4]"></a>Error_13</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, error1x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Error_13
</UL>
<BR>[Calls]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[4f5]"></a>Error_14</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, error1x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Error_14 &rArr; power_on
</UL>
<BR>[Calls]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
</UL>
<BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[500]"></a>Error_10</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error1x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[501]"></a>Error_15</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error1x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[502]"></a>Error_16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error1x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[503]"></a>Error_17</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error1x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[504]"></a>Error_18</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error1x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[505]"></a>Error_19</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error1x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[507]"></a>Error_21</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error2x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[506]"></a>Error_20</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error2x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[508]"></a>Error_22</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error2x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[509]"></a>Error_23</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error2x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[50a]"></a>Error_24</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error2x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[50b]"></a>Error_25</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error2x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[50c]"></a>Error_26</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error2x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[50d]"></a>Error_27</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error2x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[50e]"></a>Error_28</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error2x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[50f]"></a>Error_29</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error2x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[511]"></a>Error_31</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, error3x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[512]"></a>Error_32</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, error3x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[513]"></a>Error_33</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error3x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[514]"></a>Error_34</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error3x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[515]"></a>Error_35</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error3x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[516]"></a>Error_36</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error3x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[517]"></a>Error_37</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error3x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[518]"></a>Error_38</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error3x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[519]"></a>Error_39</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error3x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[510]"></a>Error_30</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error3x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[4f6]"></a>Error_41</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, error4x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Error_41
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[51b]"></a>Error_42</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error4x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[51c]"></a>Error_43</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, error4x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[51d]"></a>Error_44</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, error4x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[51e]"></a>Error_45</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error4x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[51f]"></a>Error_46</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error4x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[521]"></a>Error_48</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error4x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[522]"></a>Error_49</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error4x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[51a]"></a>Error_40</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error4x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[520]"></a>Error_47</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error4x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[523]"></a>Error_50</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error5x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[524]"></a>Error_51</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error5x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[525]"></a>Error_52</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error5x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[526]"></a>Error_53</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error5x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[527]"></a>Error_54</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error5x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[528]"></a>Error_55</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error5x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[529]"></a>Error_56</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error5x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[52a]"></a>Error_57</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error5x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[52b]"></a>Error_58</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error5x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[52c]"></a>Error_59</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error5x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[52d]"></a>Error_60</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error6x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[52e]"></a>Error_61</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error6x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[52f]"></a>Error_62</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error6x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[530]"></a>Error_63</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, error6x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
</UL>

<P><STRONG><a name="[455]"></a>Init_error_data</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, states.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskStates
</UL>

<P><STRONG><a name="[456]"></a>data_init</STRONG> (Thumb, 734 bytes, Stack size 32 bytes, states.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = data_init &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_63
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_62
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_61
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_60
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_59
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_58
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_57
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_56
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_55
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_54
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_53
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_52
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_51
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_50
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_47
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_40
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_49
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_48
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_46
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_45
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_44
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_43
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_42
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_41
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_30
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_39
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_38
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_37
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_36
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_35
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_34
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_33
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_32
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_31
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_29
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_28
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_27
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_26
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_25
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_24
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_23
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_22
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_20
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_21
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_19
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_18
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_17
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_16
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_15
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_10
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_14
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_13
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_12
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_11
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_09
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_08
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_07
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_06
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_05
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_04
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_03
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_02
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_01
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_00
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskStates
</UL>

<P><STRONG><a name="[a06]"></a>Error1</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, states.o(.text), UNUSED)

<P><STRONG><a name="[a07]"></a>Error2</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, states.o(.text), UNUSED)

<P><STRONG><a name="[45b]"></a>Error_out</STRONG> (Thumb, 286 bytes, Stack size 16 bytes, states.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Error_out
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out_test
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskStates
</UL>

<P><STRONG><a name="[435]"></a>Extern_out_test</STRONG> (Thumb, 310 bytes, Stack size 4 bytes, states.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Extern_out_test &rArr; Error_out
</UL>
<BR>[Calls]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_out
</UL>
<BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_set
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART0
</UL>

<P><STRONG><a name="[543]"></a>CDC_RdOutBuf</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, cdcuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CDC_RdOutBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCOM_Usb2Serial
</UL>

<P><STRONG><a name="[53a]"></a>CDC_WrOutBuf</STRONG> (Thumb, 46 bytes, Stack size 20 bytes, cdcuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CDC_WrOutBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_BulkOut
</UL>

<P><STRONG><a name="[542]"></a>CDC_OutBufAvailChar</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, cdcuser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCOM_Usb2Serial
</UL>

<P><STRONG><a name="[531]"></a>CDC_GetSerialState</STRONG> (Thumb, 174 bytes, Stack size 8 bytes, cdcuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CDC_GetSerialState
</UL>
<BR>[Calls]<UL><LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_LineState
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint1
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCOM_CheckSerialState
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_Init
</UL>

<P><STRONG><a name="[533]"></a>CDC_Init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, cdcuser.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_GetSerialState
</UL>
<BR>[Called By]<UL><LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCOM_Init
</UL>

<P><STRONG><a name="[55c]"></a>CDC_SendEncapsulatedCommand</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cdcuser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[556]"></a>CDC_GetEncapsulatedResponse</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cdcuser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[55d]"></a>CDC_SetCommFeature</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cdcuser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[557]"></a>CDC_GetCommFeature</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cdcuser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[558]"></a>CDC_ClearCommFeature</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cdcuser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[55e]"></a>CDC_SetLineCoding</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cdcuser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[559]"></a>CDC_GetLineCoding</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, cdcuser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[55a]"></a>CDC_SetControlLineState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cdcuser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[55b]"></a>CDC_SendBreak</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cdcuser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[534]"></a>CDC_BulkIn</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, cdcuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CDC_BulkIn &rArr; USB_WriteEP &rArr; USB_ProgDTD
</UL>
<BR>[Calls]<UL><LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_Read
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_AvailChar
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WriteEP
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint2
</UL>

<P><STRONG><a name="[538]"></a>CDC_BulkOut</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, cdcuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = CDC_BulkOut &rArr; USB_ReadEP
</UL>
<BR>[Calls]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadEP
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_WrOutBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint2
</UL>

<P><STRONG><a name="[53b]"></a>CDC_NotificationIn</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, cdcuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CDC_NotificationIn &rArr; USB_WriteEP &rArr; USB_ProgDTD
</UL>
<BR>[Calls]<UL><LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WriteEP
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint1
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCOM_CheckSerialState
</UL>

<P><STRONG><a name="[53c]"></a>CDC_BulkOutNak</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cdcuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CDC_BulkOutNak &rArr; USB_ReadReqEP &rArr; USB_ProgDTD
</UL>
<BR>[Calls]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadReqEP
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint2
</UL>

<P><STRONG><a name="[536]"></a>ser_Read</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, serial.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ser_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_BulkIn
</UL>

<P><STRONG><a name="[535]"></a>ser_AvailChar</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, serial.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_BulkIn
</UL>

<P><STRONG><a name="[532]"></a>ser_LineState</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, serial.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_GetSerialState
</UL>

<P><STRONG><a name="[53e]"></a>VCOM_Init</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, usb_main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_Init
</UL>

<P><STRONG><a name="[53f]"></a>MODBUS_SEND_0420</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, usb_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = MODBUS_SEND_0420 &rArr; USB_WriteEP &rArr; USB_ProgDTD
</UL>
<BR>[Calls]<UL><LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WriteEP
</UL>
<BR>[Called By]<UL><LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCOM_Usb2Serial_send
</UL>

<P><STRONG><a name="[540]"></a>VCOM_Usb2Serial_send</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, usb_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = VCOM_Usb2Serial_send &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODBUS_SEND_0420
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCOM_Usb2Serial
</UL>

<P><STRONG><a name="[443]"></a>VCOM_Usb2Serial</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, usb_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = VCOM_Usb2Serial &rArr; VCOM_Usb2Serial_send &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_torque_Read
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCOM_Usb2Serial_send
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_OutBufAvailChar
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_RdOutBuf
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m0420_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART0
</UL>

<P><STRONG><a name="[545]"></a>VCOM_CheckSerialState</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usb_main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_NotificationIn
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_GetSerialState
</UL>

<P><STRONG><a name="[42e]"></a>USB_init</STRONG> (Thumb, 48 bytes, Stack size 64 bytes, usb_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = USB_init &rArr; USB_Init &rArr; CGU_EnableEntity &rArr; scu_pinmux
</UL>
<BR>[Calls]<UL><LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Init
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Connect
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskUART0
</UL>

<P><STRONG><a name="[a08]"></a>check_failed</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usb_main.o(.text), UNUSED)

<P><STRONG><a name="[566]"></a>USB_ResetCore</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, usbcore.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Reset_Event
</UL>

<P><STRONG><a name="[548]"></a>USB_SetupStage</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, usbcore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USB_SetupStage &rArr; USB_ReadSetupPkt
</UL>
<BR>[Calls]<UL><LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadSetupPkt
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[54a]"></a>USB_DataInStage</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, usbcore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USB_DataInStage &rArr; USB_WriteEP &rArr; USB_ProgDTD
</UL>
<BR>[Calls]<UL><LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WriteEP
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[54b]"></a>USB_DataOutStage</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, usbcore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USB_DataOutStage &rArr; USB_ReadEP
</UL>
<BR>[Calls]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadEP
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[54c]"></a>USB_StatusInStage</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usbcore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USB_StatusInStage &rArr; USB_WriteEP &rArr; USB_ProgDTD
</UL>
<BR>[Calls]<UL><LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WriteEP
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[54d]"></a>USB_StatusOutStage</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, usbcore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USB_StatusOutStage &rArr; USB_ReadEP
</UL>
<BR>[Calls]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadEP
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[9f]"></a>USB_EndPoint0</STRONG> (Thumb, 928 bytes, Stack size 8 bytes, usbcore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USB_EndPoint0 &rArr; USB_ReqSetInterface &rArr; USB_ConfigEP
</UL>
<BR>[Calls]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadReqEP
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_SendBreak
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_SetControlLineState
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_GetLineCoding
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_SetLineCoding
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_ClearCommFeature
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_GetCommFeature
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_SetCommFeature
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_GetEncapsulatedResponse
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_SendEncapsulatedCommand
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetStallEP
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetAddress
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DirCtrlEP
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Configure_Event
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ClrStallEP
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetInterface
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetConfiguration
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetClrFeature
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqGetStatus
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqGetDescriptor
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_StatusOutStage
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_StatusInStage
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DataOutStage
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DataInStage
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetupStage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_main.o(.text)
</UL>
<P><STRONG><a name="[564]"></a>EPAdr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WriteEP
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadReqEP
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadEP
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadSetupPkt
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ConfigEP
</UL>

<P><STRONG><a name="[55f]"></a>USB_SetAddress</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Init
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[561]"></a>USB_Reset</STRONG> (Thumb, 276 bytes, Stack size 8 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Init
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB0_IRQHandler
</UL>

<P><STRONG><a name="[546]"></a>USB_Init</STRONG> (Thumb, 162 bytes, Stack size 8 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USB_Init &rArr; CGU_EnableEntity &rArr; scu_pinmux
</UL>
<BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_pinmux
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_SetPLL0
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_EnableEntity
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_EntityConnect
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Reset
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetAddress
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_init
</UL>

<P><STRONG><a name="[547]"></a>USB_Connect</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_init
</UL>

<P><STRONG><a name="[a09]"></a>USB_Suspend</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbhw.o(.text), UNUSED)

<P><STRONG><a name="[a0a]"></a>USB_Resume</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbhw.o(.text), UNUSED)

<P><STRONG><a name="[a0b]"></a>USB_WakeUp</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usbhw.o(.text), UNUSED)

<P><STRONG><a name="[981]"></a>USB_WakeUpCfg</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetClrFeature
</UL>

<P><STRONG><a name="[982]"></a>USB_SetTestMode</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetClrFeature
</UL>

<P><STRONG><a name="[984]"></a>USB_Configure</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetConfiguration
</UL>

<P><STRONG><a name="[563]"></a>USB_ConfigEP</STRONG> (Thumb, 138 bytes, Stack size 20 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USB_ConfigEP
</UL>
<BR>[Calls]<UL><LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPAdr
</UL>
<BR>[Called By]<UL><LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetInterface
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetConfiguration
</UL>

<P><STRONG><a name="[54e]"></a>USB_DirCtrlEP</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[985]"></a>USB_EnableEP</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_EnableEP
</UL>
<BR>[Called By]<UL><LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetInterface
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetConfiguration
</UL>

<P><STRONG><a name="[983]"></a>USB_DisableEP</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_DisableEP
</UL>
<BR>[Called By]<UL><LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetInterface
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetConfiguration
</UL>

<P><STRONG><a name="[986]"></a>USB_ResetEP</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_ResetEP
</UL>
<BR>[Called By]<UL><LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetInterface
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetConfiguration
</UL>

<P><STRONG><a name="[552]"></a>USB_SetStallEP</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetClrFeature
</UL>

<P><STRONG><a name="[560]"></a>USB_ClrStallEP</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetClrFeature
</UL>

<P><STRONG><a name="[565]"></a>USB_ProgDTD</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_ProgDTD
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WriteEP
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadReqEP
</UL>

<P><STRONG><a name="[549]"></a>USB_ReadSetupPkt</STRONG> (Thumb, 124 bytes, Stack size 20 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USB_ReadSetupPkt
</UL>
<BR>[Calls]<UL><LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPAdr
</UL>
<BR>[Called By]<UL><LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetupStage
</UL>

<P><STRONG><a name="[53d]"></a>USB_ReadReqEP</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USB_ReadReqEP &rArr; USB_ProgDTD
</UL>
<BR>[Calls]<UL><LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ProgDTD
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPAdr
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_BulkOutNak
</UL>

<P><STRONG><a name="[539]"></a>USB_ReadEP</STRONG> (Thumb, 42 bytes, Stack size 20 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USB_ReadEP
</UL>
<BR>[Calls]<UL><LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPAdr
</UL>
<BR>[Called By]<UL><LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_BulkOut
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_StatusOutStage
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DataOutStage
</UL>

<P><STRONG><a name="[537]"></a>USB_WriteEP</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USB_WriteEP &rArr; USB_ProgDTD
</UL>
<BR>[Calls]<UL><LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ProgDTD
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPAdr
</UL>
<BR>[Called By]<UL><LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODBUS_SEND_0420
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_NotificationIn
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_BulkIn
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_StatusInStage
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DataInStage
</UL>

<P><STRONG><a name="[3a]"></a>USB0_IRQHandler</STRONG> (Thumb, 460 bytes, Stack size 16 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB0_IRQHandler &rArr; USB_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc43xx.o(RESET)
</UL>
<P><STRONG><a name="[9e]"></a>USB_Reset_Event</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, usbuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_Reset_Event
</UL>
<BR>[Calls]<UL><LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetCore
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_main.o(.text)
</UL>
<P><STRONG><a name="[a0c]"></a>USB_Suspend_Event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbuser.o(.text), UNUSED)

<P><STRONG><a name="[a0d]"></a>USB_Resume_Event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbuser.o(.text), UNUSED)

<P><STRONG><a name="[554]"></a>USB_Configure_Event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbuser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[a0]"></a>USB_EndPoint1</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, usbuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USB_EndPoint1 &rArr; CDC_NotificationIn &rArr; USB_WriteEP &rArr; USB_ProgDTD
</UL>
<BR>[Calls]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_NotificationIn
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_GetSerialState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_main.o(.text)
</UL>
<P><STRONG><a name="[a1]"></a>USB_EndPoint2</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, usbuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USB_EndPoint2 &rArr; CDC_BulkIn &rArr; USB_WriteEP &rArr; USB_ProgDTD
</UL>
<BR>[Calls]<UL><LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_BulkOutNak
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_BulkOut
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_BulkIn
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_main.o(.text)
</UL>
<P><STRONG><a name="[a0e]"></a>USB_EndPoint3</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbuser.o(.text), UNUSED)

<P><STRONG><a name="[a0f]"></a>USB_EndPoint4</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbuser.o(.text), UNUSED)

<P><STRONG><a name="[a10]"></a>USB_EndPoint5</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usbuser.o(.text), UNUSED)

<P><STRONG><a name="[567]"></a>READ_torque_remote</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, com_torque.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_torque_Read
</UL>

<P><STRONG><a name="[544]"></a>m_torque_Read</STRONG> (Thumb, 1638 bytes, Stack size 8 bytes, com_torque.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = m_torque_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;READ_torque_remote
</UL>
<BR>[Called By]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCOM_Usb2Serial
</UL>

<P><STRONG><a name="[56c]"></a>SEGGER_RTT_ReadUpBufferNoLock</STRONG> (Thumb, 148 bytes, Stack size 48 bytes, segger_rtt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_ReadUpBuffer
</UL>

<P><STRONG><a name="[56d]"></a>SEGGER_RTT_ReadNoLock</STRONG> (Thumb, 148 bytes, Stack size 48 bytes, segger_rtt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Read
</UL>

<P><STRONG><a name="[56e]"></a>SEGGER_RTT_ReadUpBuffer</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, segger_rtt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_ReadUpBufferNoLock
</UL>

<P><STRONG><a name="[56f]"></a>SEGGER_RTT_Read</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, segger_rtt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_ReadNoLock
</UL>
<BR>[Called By]<UL><LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_GetKey
</UL>

<P><STRONG><a name="[570]"></a>SEGGER_RTT_WriteWithOverwriteNoLock</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, segger_rtt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[571]"></a>SEGGER_RTT_WriteSkipNoLock</STRONG> (Thumb, 178 bytes, Stack size 40 bytes, segger_rtt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[572]"></a>SEGGER_RTT_WriteDownBufferNoLock</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, segger_rtt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetAvailWriteSpace
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteNoCheck
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteBlocking
</UL>
<BR>[Called By]<UL><LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteDownBuffer
</UL>

<P><STRONG><a name="[574]"></a>SEGGER_RTT_WriteNoLock</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, segger_rtt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetAvailWriteSpace
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteNoCheck
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteBlocking
</UL>
<BR>[Called By]<UL><LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>

<P><STRONG><a name="[575]"></a>SEGGER_RTT_WriteDownBuffer</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, segger_rtt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteDownBufferNoLock
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>

<P><STRONG><a name="[469]"></a>SEGGER_RTT_Write</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, segger_rtt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteString
</UL>

<P><STRONG><a name="[576]"></a>SEGGER_RTT_WriteString</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, segger_rtt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>

<P><STRONG><a name="[a11]"></a>SEGGER_RTT_PutCharSkipNoLock</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, segger_rtt.o(.text), UNUSED)

<P><STRONG><a name="[578]"></a>SEGGER_RTT_PutCharSkip</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, segger_rtt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>

<P><STRONG><a name="[579]"></a>SEGGER_RTT_PutChar</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, segger_rtt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>

<P><STRONG><a name="[57a]"></a>SEGGER_RTT_GetKey</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, segger_rtt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WaitKey
</UL>

<P><STRONG><a name="[46b]"></a>SEGGER_RTT_WaitKey</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, segger_rtt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_GetKey
</UL>
<BR>[Called By]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgetc
</UL>

<P><STRONG><a name="[57b]"></a>SEGGER_RTT_HasKey</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, segger_rtt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>

<P><STRONG><a name="[a12]"></a>SEGGER_RTT_HasData</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, segger_rtt.o(.text), UNUSED)

<P><STRONG><a name="[a13]"></a>SEGGER_RTT_HasDataUp</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, segger_rtt.o(.text), UNUSED)

<P><STRONG><a name="[57c]"></a>SEGGER_RTT_AllocDownBuffer</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, segger_rtt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>

<P><STRONG><a name="[57d]"></a>SEGGER_RTT_AllocUpBuffer</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, segger_rtt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>

<P><STRONG><a name="[45d]"></a>SEGGER_RTT_ConfigUpBuffer</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, segger_rtt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SEGGER_RTT_ConfigUpBuffer &rArr; _DoInit
</UL>
<BR>[Calls]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[57e]"></a>SEGGER_RTT_ConfigDownBuffer</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, segger_rtt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>

<P><STRONG><a name="[57f]"></a>SEGGER_RTT_SetNameUpBuffer</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, segger_rtt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>

<P><STRONG><a name="[580]"></a>SEGGER_RTT_SetNameDownBuffer</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, segger_rtt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>

<P><STRONG><a name="[581]"></a>SEGGER_RTT_SetFlagsUpBuffer</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, segger_rtt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>

<P><STRONG><a name="[582]"></a>SEGGER_RTT_SetFlagsDownBuffer</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, segger_rtt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>

<P><STRONG><a name="[583]"></a>SEGGER_RTT_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, segger_rtt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>

<P><STRONG><a name="[584]"></a>SEGGER_RTT_SetTerminal</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, segger_rtt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetAvailWriteSpace
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteNoCheck
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteBlocking
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>

<P><STRONG><a name="[585]"></a>SEGGER_RTT_TerminalOut</STRONG> (Thumb, 262 bytes, Stack size 32 bytes, segger_rtt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetAvailWriteSpace
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PostTerminalSwitch
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteBlocking
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>

<P><STRONG><a name="[586]"></a>SEGGER_RTT_GetAvailWriteSpace</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, segger_rtt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetAvailWriteSpace
</UL>

<P><STRONG><a name="[a14]"></a>SEGGER_RTT_GetBytesInBuffer</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, segger_rtt.o(.text), UNUSED)

<P><STRONG><a name="[a15]"></a>GUI_AA_SetpfDrawCharAA4</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, GUIAA_Char4.o(.text), UNUSED)

<P><STRONG><a name="[58b]"></a>GUI_AA__DrawCharAA4</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, GUIAA_Char4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = GUI_AA__DrawCharAA4 &rArr; _DrawCharAA4_NoTrans &rArr; GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCharAA4_NoTrans
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_DispChar
</UL>

<P><STRONG><a name="[1b8]"></a>GUIPROP_AA4_DispChar</STRONG> (Thumb, 142 bytes, Stack size 48 bytes, GUIAA_Char4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = GUIPROP_AA4_DispChar &rArr; GUI_AA__DrawCharAA4 &rArr; _DrawCharAA4_NoTrans &rArr; GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA4
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1b9]"></a>GUIPROP_AA4_GetCharDistX</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, GUIAA_Char4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUIPROP_AA4_GetCharDistX
</UL>
<BR>[Calls]<UL><LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1ba]"></a>GUIPROP_AA4_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUIAA_Char4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1bb]"></a>GUIPROP_AA4_IsInFont</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, GUIAA_Char4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUIPROP_AA4_IsInFont
</UL>
<BR>[Calls]<UL><LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[590]"></a>GL_FillCircleAA_HiRes</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, GUIAA_Circle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init_HiRes
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillCircle
</UL>

<P><STRONG><a name="[594]"></a>GL_FillEllipseAA_HiRes</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, GUIAA_Circle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init_HiRes
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillEllipse
</UL>

<P><STRONG><a name="[332]"></a>GUI_AA_FillCircle</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, GUIAA_Circle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = GUI_AA_FillCircle &rArr; GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgY_AA
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgX_AA
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init_HiRes
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_HiRes2Pixel
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw00
</UL>

<P><STRONG><a name="[59a]"></a>GUI_AA_FillEllipse</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, GUIAA_Circle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgY_AA
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgX_AA
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init_HiRes
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_HiRes2Pixel
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillEllipse
</UL>

<P><STRONG><a name="[59b]"></a>GUI_AA_DrawRoundedRect</STRONG> (Thumb, 272 bytes, Stack size 56 bytes, GUIAA_DrawRoundedRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GUI_AA_DrawRoundedRect &rArr; GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPenSize
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRoundedRect
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgY_AA
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgX_AA
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init_HiRes
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_HiRes2Pixel
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
</UL>
<BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawRoundedRectEx
</UL>

<P><STRONG><a name="[418]"></a>GUI_AA_DrawRoundedRectEx</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, GUIAA_DrawRoundedRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = GUI_AA_DrawRoundedRectEx &rArr; GUI_AA_DrawRoundedRect &rArr; GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawRoundedRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCreate
</UL>

<P><STRONG><a name="[59e]"></a>GUI_AA_FillRoundedRect</STRONG> (Thumb, 210 bytes, Stack size 48 bytes, GUIAA_FillRoundedRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = GUI_AA_FillRoundedRect &rArr; GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRoundedRect
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgY_AA
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgX_AA
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init_HiRes
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_HiRes2Pixel
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRectEx
</UL>

<P><STRONG><a name="[30f]"></a>GUI_AA_FillRoundedRectEx</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, GUIAA_FillRoundedRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GUI_AA_FillRoundedRectEx &rArr; GUI_AA_FillRoundedRect &rArr; GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectListOwnerDraw
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OwnerDraw
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw51
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw5
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw3
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw6
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw50
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw2
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw4
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_txt
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw00
</UL>

<P><STRONG><a name="[5a5]"></a>GUI_AA_Init</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, GUIAA_Lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcClipRectHL
</UL>
<BR>[Called By]<UL><LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init_HiRes
</UL>

<P><STRONG><a name="[591]"></a>GUI_AA_Init_HiRes</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, GUIAA_Lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawRoundedRect
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillEllipse
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillEllipseAA_HiRes
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircleAA_HiRes
</UL>

<P><STRONG><a name="[334]"></a>GUI_AA_SetFactor</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, GUIAA_Lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUI_AA_SetFactor
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Create
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCreate
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
</UL>

<P><STRONG><a name="[a16]"></a>GUI_AA_GetFactor</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUIAA_Lib.o(.text), UNUSED)

<P><STRONG><a name="[5a9]"></a>GUI_AA_DisableHiRes</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUIAA_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[a17]"></a>GUI_AA_EnableHiRes</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUIAA_Lib.o(.text), UNUSED)

<P><STRONG><a name="[597]"></a>GUI_AA_HiRes2Pixel</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, GUIAA_Lib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawRoundedRect
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillEllipse
</UL>

<P><STRONG><a name="[593]"></a>GUI_AA_Exit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, GUIAA_Lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = GUI_AA_Exit &rArr; _FlushLine &rArr; LCD_SetPixelAA4_Trans &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushLine
</UL>
<BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawRoundedRect
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillEllipse
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillEllipseAA_HiRes
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircleAA_HiRes
</UL>

<P><STRONG><a name="[a18]"></a>GUI_AA_SetDrawMode</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, GUIAA_Lib.o(.text), UNUSED)

<P><STRONG><a name="[5ab]"></a>GUI_AA_SetGammaAA4</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUIAA_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AA_SetGamma
</UL>

<P><STRONG><a name="[5ad]"></a>GUI_AA_GetGammaAA4</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUIAA_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AA_GetGamma
</UL>

<P><STRONG><a name="[5af]"></a>GUI_AA_EnableGammaAA4</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUIAA_Lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AA_EnableGamma
</UL>

<P><STRONG><a name="[5bc]"></a>GUI_ALLOC_Exit</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, GUI_Alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Called By]<UL><LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exit
</UL>

<P><STRONG><a name="[a19]"></a>GUI_ALLOC_p2h</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)

<P><STRONG><a name="[5a4]"></a>GUI_ALLOC_FreeFixedBlock</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, GUI_Alloc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrientationExCached
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[907]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
</UL>

<P><STRONG><a name="[5a7]"></a>GUI_ALLOC_GetFixedBlock</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, GUI_Alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetDevFunc
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPos
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrientationExCached
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GenCheck
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[5bd]"></a>GUI_ALLOC_AllocNoInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_Alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[8a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[965]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[962]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmap
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
</UL>

<P><STRONG><a name="[2f9]"></a>GUI_ALLOC_h2p</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_Alloc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GetDataItem
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestorOrSelf
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableMemdev
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteSecure
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTimer
<LI><a href="#[80c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[7e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateParent
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[7e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowInfo
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[891]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
<LI><a href="#[8f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetLastSibling
<LI><a href="#[8f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocussable
<LI><a href="#[8ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextChild
<LI><a href="#[8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_EnableMemdev
<LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[8e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFlags
<LI><a href="#[8e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[94e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[947]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[945]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>

<P><STRONG><a name="[5c3]"></a>GUI_ALLOC_LockH</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, GUI_Alloc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_CreateIndirect
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetHeaderHeight
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetFont
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DisableRow
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTiled
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColorEx
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetBarColor
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetBorderSize
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetMoveable
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetActive
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetFloatValue
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateBuffer
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EditDec
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__GetCurrentChar
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetBkColor
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetValue
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetTextColor
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetText
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetFont
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetBkColor
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_EnableInversion
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateUser
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkinClassic
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW_BITMAP_Create
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetTextOffset
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetFont
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_GetpWidget
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchReactOnLevel
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteOpaqueAt
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MarkDirty
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_EnableWindow
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetWrapMode
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetValue
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetNumItems
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetSkin
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetBarColor
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetBkColor
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSel
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetString
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwnerDraw
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSel
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetNumItems
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemSel
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetClientColor
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextMode
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFont
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFloatValue
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_EnableBlink
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_SetBkColor
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetWindowSizeX
<LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_GetState
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_GetNumLines
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ClrHasTrans
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextLocked
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_GetValue
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_GetMinMax
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowSorted
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSel
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetRowDisabled
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSelCol
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_EnableCellSelect
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetWrapMode
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetRBorder
<LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetLBorder
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetSel
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSelCol
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollH
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetMulti
<LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetMulti
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemSpacing
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetFont
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetpStringLocked
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetOwner
<LI><a href="#[765]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_EnableWrapMode
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetColor
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageSize
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawImageAt
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE__SetWindowSize
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE__FreeAttached
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateUser
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_Callback
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[80e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimerLin
<LI><a href="#[80d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetFirstTimer
<LI><a href="#[811]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[812]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[7e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
<LI><a href="#[892]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[88d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimer
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetTime
<LI><a href="#[863]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetDelay
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetPeriod
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetUserData
<LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
<LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[8e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[8de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
<LI><a href="#[8da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRBorder
<LI><a href="#[8d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetLBorder
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemTextLen
<LI><a href="#[8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemText
<LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextAlign
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemText
<LI><a href="#[8cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetFont
<LI><a href="#[8d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDirIndicator
<LI><a href="#[8cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DeleteItem
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetYSize
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetXSize
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[8be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetYSize
<LI><a href="#[8bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetXSize
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__SethItem
<LI><a href="#[8ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GetpItemLocked
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GethItem
<LI><a href="#[8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetActive
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkin
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBorderSize
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[8af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetSkinFlexButtonSize
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetSkin
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[8a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_Select
<LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetStaticDevice
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateWindowDevice
<LI><a href="#[970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetSkin
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__SetCallback
<LI><a href="#[96d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
<LI><a href="#[96e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_GetState
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[965]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[963]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
<LI><a href="#[962]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmap
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[966]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
<LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsChild
<LI><a href="#[94b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
<LI><a href="#[94a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
<LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
<LI><a href="#[936]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[93e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetState
<LI><a href="#[93d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetPageSize
<LI><a href="#[93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetNumItems
<LI><a href="#[939]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
<LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetSkin
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetTitleHeight
<LI><a href="#[92d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetTextAlign
<LI><a href="#[92e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetText
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetFont
<LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetBorderSizeEx
<LI><a href="#[92b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetBorderSize
<LI><a href="#[92f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetBarColor
<LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
<LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[905]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[90d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmap
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
<LI><a href="#[907]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
</UL>

<P><STRONG><a name="[5c4]"></a>GUI_ALLOC_UnlockH</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, GUI_Alloc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_CreateIndirect
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetHeaderHeight
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetFont
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DisableRow
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTiled
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColorEx
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetBarColor
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetBorderSize
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetMoveable
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetActive
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetFloatValue
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateBuffer
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EditDec
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__GetCurrentChar
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetBkColor
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetValue
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetTextColor
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetText
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetFont
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetBkColor
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_EnableInversion
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateUser
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkinClassic
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW_BITMAP_Create
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetTextOffset
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetFont
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_GetpWidget
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchReactOnLevel
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteOpaqueAt
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MarkDirty
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_EnableWindow
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetWrapMode
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetValue
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetNumItems
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetSkin
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetBarColor
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetBkColor
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSel
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetString
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwnerDraw
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSel
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetNumItems
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemText
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemSel
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetClientColor
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextMode
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFont
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFloatValue
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_EnableBlink
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_SetBkColor
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetWindowSizeX
<LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_GetState
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_GetNumLines
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ClrHasTrans
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_GetValue
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_GetMinMax
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowSorted
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSel
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetRowDisabled
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSelCol
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_EnableCellSelect
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_RowIsDisabled
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetWrapMode
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetRBorder
<LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetLBorder
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetSel
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSelCol
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollH
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetMulti
<LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetMulti
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemSpacing
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetFont
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemSize
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetpStringLocked
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__AddSize
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetOwner
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetColor
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageSize
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawImageAt
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE__SetWindowSize
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE__FreeAttached
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateUser
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_Callback
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[80e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimerLin
<LI><a href="#[80d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetFirstTimer
<LI><a href="#[811]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[812]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[7e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
<LI><a href="#[892]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[88d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimer
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetTime
<LI><a href="#[863]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetDelay
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetPeriod
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetUserData
<LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
<LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[8e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[8de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
<LI><a href="#[8da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRBorder
<LI><a href="#[8d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetLBorder
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemTextLen
<LI><a href="#[8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemText
<LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextAlign
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemText
<LI><a href="#[8cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetFont
<LI><a href="#[8d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDirIndicator
<LI><a href="#[8cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DeleteItem
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDividerIndex
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetYSize
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetXSize
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[8be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetYSize
<LI><a href="#[8bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetXSize
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__SethItem
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GethItem
<LI><a href="#[8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetActive
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkin
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBorderSize
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[8af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetSkinFlexButtonSize
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetSkin
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[8a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_Select
<LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetStaticDevice
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateWindowDevice
<LI><a href="#[970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetSkin
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__SetCallback
<LI><a href="#[96d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
<LI><a href="#[96e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_GetState
<LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[965]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[963]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
<LI><a href="#[962]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmap
<LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[966]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
<LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsChild
<LI><a href="#[94b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
<LI><a href="#[94a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
<LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
<LI><a href="#[936]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[93e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetState
<LI><a href="#[93d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetPageSize
<LI><a href="#[93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetNumItems
<LI><a href="#[939]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
<LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetSkin
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetTitleHeight
<LI><a href="#[92d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetTextAlign
<LI><a href="#[92e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetText
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetFont
<LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetBorderSizeEx
<LI><a href="#[92b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetBorderSize
<LI><a href="#[92f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetBarColor
<LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_End
<LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[905]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[90d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmap
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
<LI><a href="#[907]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
</UL>

<P><STRONG><a name="[336]"></a>GUI_ALLOC_GetNumFreeBytes</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, GUI_Alloc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
</UL>

<P><STRONG><a name="[a1a]"></a>GUI_ALLOC_GetNumFreeBlocks</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)

<P><STRONG><a name="[337]"></a>GUI_ALLOC_GetNumUsedBytes</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_Alloc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
</UL>

<P><STRONG><a name="[a1b]"></a>GUI_ALLOC_GetMaxUsedBytes</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)

<P><STRONG><a name="[a1c]"></a>GUI_ALLOC_GetMemInfo</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)

<P><STRONG><a name="[a1d]"></a>GUI_ALLOC_SuppressPeak</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)

<P><STRONG><a name="[a1e]"></a>GUI_ALLOC_GetNumUsedBlocks</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)

<P><STRONG><a name="[5bf]"></a>GUI_ALLOC_GetMaxSize</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, GUI_Alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Called By]<UL><LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[965]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[962]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmap
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
</UL>

<P><STRONG><a name="[5c0]"></a>GUI_ALLOC_RequestSize</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, GUI_Alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_ALLOC_RequestSize &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
</UL>
<BR>[Called By]<UL><LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[a1f]"></a>GUI_ALLOC_Lock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)

<P><STRONG><a name="[a20]"></a>GUI_ALLOC_Unlock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)

<P><STRONG><a name="[2d4]"></a>GUI_ALLOC_AssignMemory</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_Alloc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>

<P><STRONG><a name="[2d5]"></a>GUI_ALLOC_SetAvBlockSize</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, GUI_Alloc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>

<P><STRONG><a name="[7ab]"></a>GUI_ALLOC_GetSize</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, GUI_Alloc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetUserData
<LI><a href="#[8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
</UL>

<P><STRONG><a name="[5b8]"></a>GUI_ALLOC_Free</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, GUI_Alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PushFreeBlock
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[8a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_USAGE_BM_Delete
<LI><a href="#[965]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[963]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
<LI><a href="#[962]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmap
<LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[966]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_End
<LI><a href="#[907]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
</UL>

<P><STRONG><a name="[5c1]"></a>GUI_ALLOC_FreePtr</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, GUI_Alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__SethItem
<LI><a href="#[8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
</UL>

<P><STRONG><a name="[5c2]"></a>GUI_ALLOC_FreePtrArray</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, GUI_Alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = GUI_ALLOC_FreePtrArray &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PushFreeBlock
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
</UL>

<P><STRONG><a name="[a21]"></a>GUI_ALLOC_SetMaxPercentage</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, GUI_Alloc.o(.text), UNUSED)

<P><STRONG><a name="[2f8]"></a>GUI_ALLOC_AllocZero</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, GUI_ALLOC_AllocZero.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GetDataItem
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW_BITMAP_Create
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[966]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
<LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
</UL>

<P><STRONG><a name="[5ca]"></a>GL_DrawArc</STRONG> (Thumb, 278 bytes, Stack size 48 bytes, GUI_Arc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>
<BR>[Called By]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawArc
</UL>

<P><STRONG><a name="[427]"></a>GUI_DrawArc</STRONG> (Thumb, 64 bytes, Stack size 40 bytes, GUI_Arc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawArc
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jiance_ok
</UL>

<P><STRONG><a name="[a22]"></a>GUI_DispNextLine</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, GUI_Char.o(.text), UNUSED)

<P><STRONG><a name="[a23]"></a>GL_DispChar</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, GUI_Char.o(.text), UNUSED)

<P><STRONG><a name="[5e8]"></a>GUI_GetYAdjust</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, GUI_Char.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCEOL
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[309]"></a>GUI_GetFontDistY</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_Char.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectListOwnerDraw
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY_CommonList4
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY2
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY_CommonList3
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY_CommonList
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OwnerDraw
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CalcTextRect
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw51
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw5
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw3
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw6
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw50
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw2
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw4
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw00
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY_CommonList
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY_CommonList3
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[6d3]"></a>GUI_GetCharDistX</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_Char.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorPosX
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorPosChar
<LI><a href="#[921]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWordWrap
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCharWrap
</UL>

<P><STRONG><a name="[818]"></a>GUI_GetCharDistXEx</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_Char.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
</UL>

<P><STRONG><a name="[58c]"></a>GUIPROP__FindChar</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, GUI_CharP.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_IsInFont
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_GetCharDistX
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_DispChar
</UL>

<P><STRONG><a name="[181]"></a>GUIPROP_DispChar</STRONG> (Thumb, 206 bytes, Stack size 56 bytes, GUI_CharP.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = GUIPROP_DispChar &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
</UL>
<BR>[Address Reference Count : 5]<UL><LI> winwindow.o(.constdata)
<LI> F16_1.o(.rodata)
<LI> F16_ASCII.o(.rodata)
<LI> F13_1.o(.rodata)
<LI> F13_ASCII.o(.rodata)
</UL>
<P><STRONG><a name="[182]"></a>GUIPROP_GetCharDistX</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, GUI_CharP.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUIPROP_GetCharDistX
</UL>
<BR>[Address Reference Count : 5]<UL><LI> winwindow.o(.constdata)
<LI> F16_1.o(.rodata)
<LI> F16_ASCII.o(.rodata)
<LI> F13_1.o(.rodata)
<LI> F13_ASCII.o(.rodata)
</UL>
<P><STRONG><a name="[183]"></a>GUIPROP_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_CharP.o(.text))
<BR>[Address Reference Count : 5]<UL><LI> winwindow.o(.constdata)
<LI> F16_1.o(.rodata)
<LI> F16_ASCII.o(.rodata)
<LI> F13_1.o(.rodata)
<LI> F13_ASCII.o(.rodata)
</UL>
<P><STRONG><a name="[184]"></a>GUIPROP_IsInFont</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, GUI_CharP.o(.text))
<BR>[Address Reference Count : 5]<UL><LI> winwindow.o(.constdata)
<LI> F16_1.o(.rodata)
<LI> F16_ASCII.o(.rodata)
<LI> F13_1.o(.rodata)
<LI> F13_ASCII.o(.rodata)
</UL>
<P><STRONG><a name="[5cf]"></a>GL_DrawCircle</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, GUI_Circ.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw8Point
</UL>
<BR>[Called By]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
</UL>

<P><STRONG><a name="[424]"></a>GUI_DrawCircle</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, GUI_Circ.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawCircle
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_drive1
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quan_drive
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jiance_error
</UL>

<P><STRONG><a name="[5d1]"></a>GL_FillCircle</STRONG> (Thumb, 190 bytes, Stack size 48 bytes, GUI_Circ.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GL_FillCircle &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
<LI><a href="#[81f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPoint
</UL>

<P><STRONG><a name="[423]"></a>GUI_FillCircle</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, GUI_Circ.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircle
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_drive1
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jiance_error
</UL>

<P><STRONG><a name="[5d3]"></a>GL_FillEllipse</STRONG> (Thumb, 128 bytes, Stack size 48 bytes, GUI_Circ.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillEllipse
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawEllipse
</UL>

<P><STRONG><a name="[5d4]"></a>GUI_FillEllipse</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, GUI_Circ.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillEllipse
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPenSize
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>

<P><STRONG><a name="[5d5]"></a>GL_DrawEllipse</STRONG> (Thumb, 206 bytes, Stack size 72 bytes, GUI_Circ.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawEllipse
</UL>

<P><STRONG><a name="[5d6]"></a>GUI_DrawEllipse</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, GUI_Circ.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillEllipse
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawEllipse
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPenSize
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>

<P><STRONG><a name="[a24]"></a>GUI_SetFuncGetpPalConvTable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Core.o(.text), UNUSED)

<P><STRONG><a name="[a25]"></a>GUI_SetDefaultBkColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Core.o(.text), UNUSED)

<P><STRONG><a name="[a26]"></a>GUI_SetDefaultColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Core.o(.text), UNUSED)

<P><STRONG><a name="[2d6]"></a>GUI_SetDefaultFont</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>

<P><STRONG><a name="[a27]"></a>GUI_GetDefaultBkColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Core.o(.text), UNUSED)

<P><STRONG><a name="[a28]"></a>GUI_GetDefaultColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Core.o(.text), UNUSED)

<P><STRONG><a name="[a29]"></a>GUI_GetDefaultFont</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Core.o(.text), UNUSED)

<P><STRONG><a name="[303]"></a>GUI_ClearRect</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, GUI_Core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProgOwnerSkin3
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProgOwnerSkin2
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCEOL
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
</UL>

<P><STRONG><a name="[2fb]"></a>GUI_Clear</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, GUI_Core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI_Clear &rArr; GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectListOwnerDraw
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCreate
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Create
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCreate
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCreate
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCreate
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProgOwnerSkin3
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCreate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_Main_Menu_Button_Home
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinShowHelpInfoCreate
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OwnerDraw
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_Right_Button_Home
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProgOwnerSkin2
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_Five_NUMBER_Button
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_Three_NUMBER_Button
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_textheader_Button
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_Two_NUMBER_Button
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_NUMBER_Button
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_TEST1
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_TEST
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_Left_Button_Return
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_DriverRight_Button_Return3
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_DriverRight_Button_Return
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_DriverLeft_Button_Return
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_Btn_Btn
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw51
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw5
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw3
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw50
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw2
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw00
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_DriverRight_Button_Return2
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_Callback
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[5d8]"></a>GUI__Config</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, GUI_Core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>

<P><STRONG><a name="[44c]"></a>GUI_Init</STRONG> (Thumb, 198 bytes, Stack size 16 bytes, GUI_Core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = GUI_Init &rArr; WM_Init &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Init
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDisplaySize
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeMax
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeDisplay
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeMax
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeDisplay
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskGUI
</UL>

<P><STRONG><a name="[5a8]"></a>GUI__RegisterExit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_Core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetRefreshHook
<LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetControlHook
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[a2a]"></a>GUI_IsInitialized</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Core.o(.text), UNUSED)

<P><STRONG><a name="[5e3]"></a>GUI_Exit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, GUI_Core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Exit
</UL>

<P><STRONG><a name="[a2b]"></a>GUI_SetAfterInitHook</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Core.o(.text), UNUSED)

<P><STRONG><a name="[a2c]"></a>GUI_DCACHE_SetClearCacheHook</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Core.o(.text), UNUSED)

<P><STRONG><a name="[a2d]"></a>GUI_DCACHE_Clear</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_Core.o(.text), UNUSED)

<P><STRONG><a name="[621]"></a>GUI_DEVICE__GetpDevice</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, GUI_Device.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrientationExCached
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
</UL>

<P><STRONG><a name="[626]"></a>GUI_DEVICE__GetpDriver</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, GUI_Device.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVRAMAddrEx
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVisEx
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPosEx
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDevFunc
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChromaModeEx
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChromaEx
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetAlphaModeEx
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetAlphaEx
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_RefreshEx
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPosEx
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpfIndex2ColorEx
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpfColor2IndexEx
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPaletteEx
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrientationExCached
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumLayers
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCacheEx
<LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[965]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[962]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmap
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
<LI><a href="#[91a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AssignCursorLayer
</UL>

<P><STRONG><a name="[5e4]"></a>GUI_DEVICE_Delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_Device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrientationExCached
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
<LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
</UL>

<P><STRONG><a name="[5e5]"></a>GUI_DEVICE_Create</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, GUI_Device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrientationExCached
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
<LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
</UL>

<P><STRONG><a name="[612]"></a>GUI_DEVICE_Unlink</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, GUI_Device.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrientationExCached
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAlpha
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
<LI><a href="#[907]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
</UL>

<P><STRONG><a name="[5e6]"></a>GUI_DEVICE_Link</STRONG> (Thumb, 132 bytes, Stack size 12 bytes, GUI_Device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUI_DEVICE_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrientationExCached
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAlpha
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_LinkDevices
<LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[905]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
</UL>

<P><STRONG><a name="[2d8]"></a>GUI_DEVICE_CreateAndLink</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, GUI_Device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[a2e]"></a>GUI_DEVICE_UnlinkTaskDevices</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_Device.o(.text), UNUSED)

<P><STRONG><a name="[5e7]"></a>GUI_DEVICE_LinkDevices</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, GUI_Device.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
</UL>

<P><STRONG><a name="[311]"></a>GUI_DispCEOL</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, GUI_DispCEOL.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OwnerDraw
</UL>

<P><STRONG><a name="[310]"></a>GUI_DispStringAt</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, GUI_DispStringAt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectListOwnerDraw
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCreate
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OwnerDraw
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw51
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw5
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw3
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw6
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw50
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw2
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw4
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpRefresh
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw00
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinShowDataRefresh
</UL>

<P><STRONG><a name="[58a]"></a>GL_DrawBitmap</STRONG> (Thumb, 146 bytes, Stack size 48 bytes, GUI_DrawBitmap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCharAA4_NoTrans
</UL>

<P><STRONG><a name="[5eb]"></a>GUI_PreserveTrans</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, GUI_DrawBitmap.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AA_SetAndMask
</UL>

<P><STRONG><a name="[2fc]"></a>GUI_DrawBitmap</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, GUI_DrawBitmap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI_DrawBitmap &rArr; GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_Main_Menu_Button_Home
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbWin
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_Right_Button_Home
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_Five_NUMBER_Button
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_Three_NUMBER_Button
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_Two_NUMBER_Button
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_NUMBER_Button
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_TEST1
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_TEST
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_Left_Button_Return
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_DriverRight_Button_Return3
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_DriverRight_Button_Return
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_DriverLeft_Button_Return
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_Btn_Btn
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw51
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw5
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw50
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpRefresh
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinShowDataRefresh
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_DriverRight_Button_Return2
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawImageAt
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[a2f]"></a>GUI_SetAlphaMask8888</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, GUI_DrawBitmap_8888.o(.text), UNUSED)

<P><STRONG><a name="[155]"></a>GUI_DrawGradientV</STRONG> (Thumb, 90 bytes, Stack size 56 bytes, GUI_DrawGradient.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGradientV_PointWhite
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpRefresh
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinShowDataRefresh
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_drive1
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGradientV_PointWhite
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_drive
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_drive
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
<LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackgroundH
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>
<BR>[Address Reference Count : 1]<UL><LI> SCROLLBAR_SkinFlex.o(.text)
</UL>
<P><STRONG><a name="[152]"></a>GUI_DrawGradientH</STRONG> (Thumb, 98 bytes, Stack size 56 bytes, GUI_DrawGradient.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = GUI_DrawGradientH &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGradientH_PointWhite
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGradientH_color
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackgroundV
</UL>
<BR>[Address Reference Count : 1]<UL><LI> SCROLLBAR_SkinFlex.o(.text)
</UL>
<P><STRONG><a name="[426]"></a>GUI_DrawGradientRoundedV</STRONG> (Thumb, 94 bytes, Stack size 64 bytes, GUI_DrawGradientRounded.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI_DrawGradientRoundedV &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRounded
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_drive1
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jiance_ok
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_drive
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_drive
</UL>

<P><STRONG><a name="[5fd]"></a>GUI_DrawGradientRoundedH</STRONG> (Thumb, 102 bytes, Stack size 64 bytes, GUI_DrawGradientRounded.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRounded
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>

<P><STRONG><a name="[5ff]"></a>GUI_sin</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, GUI_DrawLine.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_cos
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[5fe]"></a>GUI_cos</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_DrawLine.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_sin
</UL>

<P><STRONG><a name="[600]"></a>GL_DrawLine1Ex</STRONG> (Thumb, 446 bytes, Stack size 48 bytes, GUI_DrawLine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetLineColor
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1
</UL>

<P><STRONG><a name="[604]"></a>GL_DrawLine1</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, GUI_DrawLine.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
</UL>

<P><STRONG><a name="[605]"></a>GL_DrawLineEx</STRONG> (Thumb, 286 bytes, Stack size 56 bytes, GUI_DrawLine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_sin
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_atan2
</UL>
<BR>[Called By]<UL><LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLineTo
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLineRel
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineToEx
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
</UL>

<P><STRONG><a name="[609]"></a>GL_DrawLine</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, GUI_DrawLine.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[302]"></a>GUI_DrawLine</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, GUI_DrawLine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_DrawLine &rArr; GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Create
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCreate
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProgOwnerSkin3
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProgOwnerSkin2
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jiance_ok
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jiance_error
</UL>

<P><STRONG><a name="[60a]"></a>GUI_DrawLineRel</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, GUI_DrawLine.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRel
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>

<P><STRONG><a name="[60c]"></a>GL_DrawLineToEx</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, GUI_DrawLine.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>
<BR>[Called By]<UL><LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineTo
</UL>

<P><STRONG><a name="[60d]"></a>GL_DrawLineTo</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, GUI_DrawLine.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineToEx
</UL>

<P><STRONG><a name="[60e]"></a>GUI_DrawLineTo</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, GUI_DrawLine.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_MoveTo
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>

<P><STRONG><a name="[304]"></a>GUI_DrawRoundedRect</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, GUI_DrawRoundedRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI_DrawRoundedRect &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRoundedRect
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProgOwnerSkin3
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProgOwnerSkin2
</UL>

<P><STRONG><a name="[a30]"></a>GUI_SetUserAlpha</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_EnableAlpha.o(.text), UNUSED)

<P><STRONG><a name="[a31]"></a>GUI_RestoreUserAlpha</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_EnableAlpha.o(.text), UNUSED)

<P><STRONG><a name="[335]"></a>GUI_EnableAlpha</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, GUI_EnableAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GUI_EnableAlpha &rArr; GUI_SetAlpha &rArr; _InitAlpha &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCreate
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCreate
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCreate
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCreate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
</UL>

<P><STRONG><a name="[2f5]"></a>GUI_Exec1</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, GUI_Exec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Enter
</UL>

<P><STRONG><a name="[450]"></a>GUI_Exec</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, GUI_Exec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = GUI_Exec &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>
<BR>[Called By]<UL><LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskGUI
</UL>

<P><STRONG><a name="[307]"></a>GUI_GetStringDistX</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, GUI_GetStringDistX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeX2
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeX_CommonList
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeX
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CalcTextRect
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeX_CommonList
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__AddSize
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
</UL>

<P><STRONG><a name="[a32]"></a>GUI_GotoY</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_Goto.o(.text), UNUSED)

<P><STRONG><a name="[a33]"></a>GUI_GotoX</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_Goto.o(.text), UNUSED)

<P><STRONG><a name="[5d7]"></a>GUI_GotoXY</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_Goto.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>

<P><STRONG><a name="[a34]"></a>GUI_GetKey</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_OnKey.o(.text), UNUSED)

<P><STRONG><a name="[617]"></a>GUI_StoreKey</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_OnKey.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
</UL>

<P><STRONG><a name="[619]"></a>GUI_ClearKeyBuffer</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, GUI_OnKey.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncPointer
</UL>

<P><STRONG><a name="[61b]"></a>GUI_StoreKeyMsg</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, GUI_OnKey.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_StoreKeyMsg
</UL>
<BR>[Calls]<UL><LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SendKeyMsg
</UL>

<P><STRONG><a name="[61c]"></a>GUI_PollKeyMsg</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, GUI_OnKey.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GUI_PollKeyMsg &rArr; WM_OnKey &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM__GetClientRectEx &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
</UL>

<P><STRONG><a name="[2ec]"></a>GUI_SendKeyMsg</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, GUI_OnKey.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GUI_SendKeyMsg &rArr; WM_OnKey &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM__GetClientRectEx &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKeyMsg
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DataRefresh
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskGUI
</UL>

<P><STRONG><a name="[a35]"></a>GUI_GetKeyState</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, GUI_OnKey.o(.text), UNUSED)

<P><STRONG><a name="[a36]"></a>GUI_KEY__SetHook</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_OnKey.o(.text), UNUSED)

<P><STRONG><a name="[59c]"></a>GUI_GetPenSize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI_Pen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillEllipse
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawEllipse
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawRoundedRect
</UL>

<P><STRONG><a name="[a37]"></a>GUI_GetPenShape</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI_Pen.o(.text), UNUSED)

<P><STRONG><a name="[347]"></a>GUI_SetPenSize</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_Pen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCreate
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Create
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCreate
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jiance_ok
<LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[a38]"></a>GUI_SetPenShape</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_Pen.o(.text), UNUSED)

<P><STRONG><a name="[2fa]"></a>GUI_SetBkColor</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_SetColor.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectListOwnerDraw
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCreate
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Create
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCreate
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCreate
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCreate
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProgOwnerSkin3
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCreate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_Main_Menu_Button_Home
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OwnerDraw
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_Right_Button_Home
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProgOwnerSkin2
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_Five_NUMBER_Button
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_Three_NUMBER_Button
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_textheader_Button
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_Two_NUMBER_Button
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_NUMBER_Button
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_TEST1
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_TEST
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_Left_Button_Return
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_DriverRight_Button_Return3
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_DriverRight_Button_Return
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_DriverLeft_Button_Return
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_Btn_Btn
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw51
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw5
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw3
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw6
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw50
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw2
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw4
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw00
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_DriverRight_Button_Return2
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_Callback
<LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[301]"></a>GUI_SetColor</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_SetColor.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectListOwnerDraw
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCreate
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Create
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCreate
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProgOwnerSkin3
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OwnerDraw
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProgOwnerSkin2
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw51
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw5
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw3
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw6
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw50
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw2
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw4
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpRefresh
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_txt
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw00
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinShowDataRefresh
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_drive1
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quan_drive
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jiance_ok
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jiance_error
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
<LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
<LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillTrippleArc
<LI><a href="#[86f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc4
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc2
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraspV
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraspH
<LI><a href="#[971]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>

<P><STRONG><a name="[31f]"></a>GUI_SetFont</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, GUI_SetFont.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCreate
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpRefresh
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinShowDataRefresh
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__AddSize
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
<LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
</UL>

<P><STRONG><a name="[620]"></a>GUI_SetOrientationExCached</STRONG> (Thumb, 306 bytes, Stack size 40 bytes, GUI_SetOrientation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = GUI_SetOrientationExCached &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeEx
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeEx
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDevice
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrientationEx
</UL>

<P><STRONG><a name="[627]"></a>GUI_SetOrientationEx</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, GUI_SetOrientation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GUI_SetOrientationEx &rArr; GUI_SetOrientationExCached &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrientationExCached
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
</UL>
<BR>[Called By]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrientation
</UL>

<P><STRONG><a name="[3a7]"></a>GUI_SetOrientation</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI_SetOrientation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GUI_SetOrientation &rArr; GUI_SetOrientationEx &rArr; GUI_SetOrientationExCached &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrientationEx
</UL>
<BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectRefresh
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskGUI
</UL>

<P><STRONG><a name="[333]"></a>GUI_SetTextMode</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, GUI_SetTextMode.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectListOwnerDraw
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw51
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw5
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw3
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw6
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw50
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw2
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw4
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw00
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
</UL>

<P><STRONG><a name="[629]"></a>GUI_GetTime</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_Time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = GUI_GetTime &rArr; GUI_X_GetTime &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[812]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
</UL>

<P><STRONG><a name="[a39]"></a>GUI_SetTimeSlice</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Time.o(.text), UNUSED)

<P><STRONG><a name="[a3a]"></a>GUI_GetTimeSlice</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_Time.o(.text), UNUSED)

<P><STRONG><a name="[37b]"></a>GUI_Delay</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, GUI_Time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 608 + Unknown Stack Size
<LI>Call Chain = GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTime
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
</UL>
<BR>[Called By]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2KeyENTER_BEF
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpKeyENTER_BEF
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpKeyENTER_BEF
</UL>

<P><STRONG><a name="[320]"></a>GUI_UC_SetEncodeUTF8</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_UC_EncodeUTF8.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCreate
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Create
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Callback
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCreate
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCreate
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCreate
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCreate
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCreate
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCreate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinShowHelpInfoCreate
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinShowDataRefresh
</UL>

<P><STRONG><a name="[62a]"></a>GUI_DispDecShift</STRONG> (Thumb, 12 bytes, Stack size 24 bytes, GUI_Val.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[62c]"></a>GUI_DispSDecShift</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, GUI_Val.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddSign
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[62f]"></a>GUI_DispDecMin</STRONG> (Thumb, 16 bytes, Stack size 24 bytes, GUI_Val.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[632]"></a>GUI_DispDecSpace</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, GUI_Val.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Long2Len
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[635]"></a>GUI_DispSDec</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, GUI_Val.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddSign
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[a3b]"></a>GUI_DispDec</STRONG> (Thumb, 12 bytes, Stack size 24 bytes, GUI_Val.o(.text), UNUSED)

<P><STRONG><a name="[324]"></a>GUI_DispDecAt</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, GUI_Val.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpRefresh
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinShowDataRefresh
</UL>

<P><STRONG><a name="[622]"></a>LCD_GetXSizeEx</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetXSizeEx &rArr; [Anonymous Symbol] &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrientationExCached
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[95f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDeviceRect
</UL>

<P><STRONG><a name="[623]"></a>LCD_GetYSizeEx</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetYSizeEx &rArr; [Anonymous Symbol] &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrientationExCached
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[95f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDeviceRect
</UL>

<P><STRONG><a name="[624]"></a>LCD_GetVXSizeEx</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetVXSizeEx &rArr; [Anonymous Symbol] &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrientationExCached
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[625]"></a>LCD_GetVYSizeEx</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetVYSizeEx &rArr; [Anonymous Symbol] &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrientationExCached
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[628]"></a>LCD_GetBitsPerPixelEx</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetBitsPerPixelEx &rArr; [Anonymous Symbol] &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrientationEx
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
<LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapLine
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[63d]"></a>LCD_GetNumColorsEx</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumColorsEx &rArr; [Anonymous Symbol] &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[63f]"></a>LCD_GetXMagEx</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[641]"></a>LCD_GetYMagEx</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[643]"></a>LCD_GetMirrorXEx</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetMirrorXEx &rArr; [Anonymous Symbol] &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
</UL>

<P><STRONG><a name="[645]"></a>LCD_GetMirrorYEx</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetMirrorYEx &rArr; [Anonymous Symbol] &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
</UL>

<P><STRONG><a name="[647]"></a>LCD_GetSwapXYEx</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetSwapXYEx &rArr; [Anonymous Symbol] &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVSize
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
</UL>

<P><STRONG><a name="[726]"></a>LCD_GetXSize</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_Callback
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[727]"></a>LCD_GetYSize</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_Callback
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[a3c]"></a>LCD_GetVXSize</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)

<P><STRONG><a name="[a3d]"></a>LCD_GetVYSize</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)

<P><STRONG><a name="[927]"></a>LCD_GetBitsPerPixel</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[926]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRect
</UL>

<P><STRONG><a name="[8fd]"></a>LCD_GetNumColors</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2Color_0
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetIndexMask_0
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[a3e]"></a>LCD_GetXMag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)

<P><STRONG><a name="[a3f]"></a>LCD_GetYMag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)

<P><STRONG><a name="[a40]"></a>LCD_GetMirrorX</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)

<P><STRONG><a name="[a41]"></a>LCD_GetMirrorY</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)

<P><STRONG><a name="[2d9]"></a>LCD_GetSwapXY</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[868]"></a>GUI_GetBitsPerPixelEx</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[8a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRectEx
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
</UL>

<P><STRONG><a name="[a42]"></a>LCD_GetDevFunc</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)

<P><STRONG><a name="[649]"></a>LCD_GetPaletteEx</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>

<P><STRONG><a name="[64b]"></a>LCD_GetPalette</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetPalette &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2Color_0
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[64c]"></a>LCD_GetpfIndex2ColorEx</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>

<P><STRONG><a name="[5f4]"></a>GUI_GetpfIndex2ColorEx</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[64d]"></a>LCD_GetpfColor2IndexEx</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>

<P><STRONG><a name="[5f3]"></a>GUI_GetpfColor2IndexEx</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[5df]"></a>LCD_GetXSizeMax</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetXSizeMax &rArr; _GetMaxValue
</UL>
<BR>[Calls]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
</UL>
<BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[5de]"></a>LCD_GetYSizeMax</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetYSizeMax &rArr; _GetMaxValue
</UL>
<BR>[Calls]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
</UL>
<BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[5a6]"></a>LCD_GetVXSizeMax</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetVXSizeMax &rArr; _GetMaxValue
</UL>
<BR>[Calls]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
</UL>
<BR>[Called By]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>

<P><STRONG><a name="[64e]"></a>LCD_GetVYSizeMax</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
</UL>

<P><STRONG><a name="[64f]"></a>LCD_GetBitsPerPixelMax</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
</UL>

<P><STRONG><a name="[5e0]"></a>LCD_SetDisplaySize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[5dc]"></a>LCD_GetXSizeDisplay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[5dd]"></a>LCD_GetYSizeDisplay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[651]"></a>LCD__GetBPP</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
</UL>

<P><STRONG><a name="[650]"></a>LCD__GetBPPDevice</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD__GetBPPDevice
</UL>
<BR>[Calls]<UL><LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPP
</UL>
<BR>[Called By]<UL><LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
</UL>

<P><STRONG><a name="[652]"></a>LCD_SetAlphaEx</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetAlpha
<LI><a href="#[91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerAlphaEx
</UL>

<P><STRONG><a name="[2dc]"></a>LCD_SetVRAMAddrEx</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, LCD_Set.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_SetVRAMAddrEx
</UL>
<BR>[Calls]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVRAMAddr
</UL>

<P><STRONG><a name="[2db]"></a>LCD_SetVSizeEx</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, LCD_Set.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetVSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSize
</UL>

<P><STRONG><a name="[2da]"></a>LCD_SetSizeEx</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, LCD_Set.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSize
<LI><a href="#[906]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerSizeEx
</UL>

<P><STRONG><a name="[653]"></a>LCD_SetVisEx</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, LCD_Set.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_SetVisEx
</UL>
<BR>[Calls]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVis
<LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
</UL>

<P><STRONG><a name="[654]"></a>LCD_SetPosEx</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPos
<LI><a href="#[913]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
</UL>

<P><STRONG><a name="[655]"></a>LCD_SetAlphaModeEx</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetAlphaMode
</UL>

<P><STRONG><a name="[656]"></a>LCD_SetChromaModeEx</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChromaMode
</UL>

<P><STRONG><a name="[657]"></a>LCD_SetChromaEx</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChroma
</UL>

<P><STRONG><a name="[658]"></a>LCD_SetLUTEntryEx</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, LCD_Set.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetLUTEntryEx
</UL>
<BR>[Calls]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntry
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[8ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEx
<LI><a href="#[900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUT
</UL>

<P><STRONG><a name="[659]"></a>LCD_GetPosEx</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPos
<LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
</UL>

<P><STRONG><a name="[65a]"></a>LCD_RefreshEx</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Refresh
</UL>

<P><STRONG><a name="[65b]"></a>LCD_SetAlpha</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetAlphaEx
</UL>

<P><STRONG><a name="[65c]"></a>LCD_SetVRAMAddr</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVRAMAddrEx
</UL>

<P><STRONG><a name="[65d]"></a>LCD_SetVSize</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
</UL>

<P><STRONG><a name="[65e]"></a>LCD_SetSize</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
</UL>

<P><STRONG><a name="[65f]"></a>LCD_SetVis</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVisEx
</UL>

<P><STRONG><a name="[660]"></a>LCD_SetPos</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPosEx
</UL>

<P><STRONG><a name="[661]"></a>LCD_SetAlphaMode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetAlphaModeEx
</UL>

<P><STRONG><a name="[662]"></a>LCD_SetChromaMode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChromaModeEx
</UL>

<P><STRONG><a name="[663]"></a>LCD_SetChroma</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChromaEx
</UL>

<P><STRONG><a name="[664]"></a>LCD_SetLUTEntry</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
</UL>

<P><STRONG><a name="[665]"></a>LCD_GetPos</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPosEx
</UL>

<P><STRONG><a name="[666]"></a>LCD_Refresh</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_RefreshEx
</UL>

<P><STRONG><a name="[667]"></a>LCD_SetDevFunc</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, LCD_Set.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>

<P><STRONG><a name="[a43]"></a>LCD_SetOrg</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, LCD_Set.o(.text), UNUSED)

<P><STRONG><a name="[672]"></a>GUI_MEMDEV__WriteToActiveAt</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, GUIDEV.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_MEMDEV__WriteToActiveAt
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
</UL>

<P><STRONG><a name="[673]"></a>GUI_MEMDEV__CreateFixed</STRONG> (Thumb, 262 bytes, Stack size 56 bytes, GUIDEV.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed32
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[675]"></a>GUI_MEMDEV_GetBitsPerPixel</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, GUIDEV.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_MEMDEV_GetBitsPerPixel &rArr; LCD__GetBPPDevice
</UL>
<BR>[Calls]<UL><LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
</UL>

<P><STRONG><a name="[676]"></a>GUI_MEMDEV_Delete</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, GUIDEV.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = GUI_MEMDEV_Delete &rArr; GUI_USAGE_DecUseCnt &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE__FreeAttached
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_Callback
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
</UL>

<P><STRONG><a name="[679]"></a>GUI_MEMDEV_CreateEx</STRONG> (Thumb, 116 bytes, Stack size 48 bytes, GUIDEV.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[67a]"></a>GUI_MEMDEV_Create</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, GUIDEV.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = GUI_MEMDEV_Create &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_Callback
</UL>

<P><STRONG><a name="[67b]"></a>GUI_MEMDEV_Select</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, GUIDEV.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI_MEMDEV_Select &rArr; GUI_SelectLCD &rArr; LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_Callback
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[963]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
</UL>

<P><STRONG><a name="[67f]"></a>GUI_MEMDEV_CopyToLCDAt</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, GUIDEV.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
</UL>

<P><STRONG><a name="[682]"></a>GUI_MEMDEV_CopyToLCD</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUIDEV.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>
<BR>[Called By]<UL><LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[683]"></a>GUI_MEMDEV_MarkDirty</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, GUIDEV.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[685]"></a>GUI_MEMDEV_CreateFixed</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, GUIDEV_CreateFixed.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_Callback
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
</UL>

<P><STRONG><a name="[686]"></a>GUI_MEMDEV_CreateFixed32</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, GUIDEV_CreateFixed.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[687]"></a>GUI_MEMDEV_WriteAt</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, GUIDEV_Write.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_MEMDEV_WriteAt &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTiled
</UL>

<P><STRONG><a name="[688]"></a>GUI_MEMDEV_Write</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, GUIDEV_Write.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_MEMDEV_Write &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_Callback
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
</UL>

<P><STRONG><a name="[689]"></a>GUI_MEMDEV_WriteOpaqueAt</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, GUIDEV_Write.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteOpaque
</UL>

<P><STRONG><a name="[68a]"></a>GUI_MEMDEV_WriteOpaque</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUIDEV_Write.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteOpaqueAt
</UL>

<P><STRONG><a name="[a44]"></a>BUTTON_SetReactOnLevel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, BUTTON.o(.text), UNUSED)

<P><STRONG><a name="[a45]"></a>BUTTON_SetReactOnTouch</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, BUTTON.o(.text), UNUSED)

<P><STRONG><a name="[ef]"></a>BUTTON_Callback</STRONG> (Thumb, 242 bytes, Stack size 24 bytes, BUTTON.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = BUTTON_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtrArray
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> BUTTON.o(.text)
</UL>
<P><STRONG><a name="[692]"></a>BUTTON_CreateUser</STRONG> (Thumb, 10 bytes, Stack size 32 bytes, BUTTON.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = BUTTON_CreateUser &rArr; [Anonymous Symbol] &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateIndirect
</UL>

<P><STRONG><a name="[33b]"></a>BUTTON_CreateEx</STRONG> (Thumb, 6 bytes, Stack size 32 bytes, BUTTON.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BUTTON_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCreate
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCreate
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[696]"></a>BUTTON_SetText</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, BUTTON.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = BUTTON_SetText &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateIndirect
</UL>

<P><STRONG><a name="[699]"></a>BUTTON_SetFont</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, BUTTON.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[69a]"></a>BUTTON_SetState</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, BUTTON.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
</UL>

<P><STRONG><a name="[31d]"></a>BUTTON_SetPressed</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, BUTTON.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = BUTTON_SetPressed &rArr; WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Create
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCreate
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCreate
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinShowHelpInfoCreate
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCreate
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListKeyDown
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuInterface
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpInterface
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuInterface
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuInterface
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListBoxShowMainInfoInterface
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuKeyUp
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuKeyDown
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeKeyUp
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeKeyDown
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeKeyEnter
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputKeyUp
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputKeyDown
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputKeyEnter
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2KeyENTER_BEF
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2KeyUp
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2KeyDown
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpKeyENTER_BEF
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpKeyUp
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpKeyDown
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuKeyUp
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuKeyDown
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuKeyUp
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuKeyDown
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumKeyUp
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumKeyDown
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumKeyEnter
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumKeyUp
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumKeyDown
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumKeyEnter
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumKeyUp
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumKeyDown
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumKeyEnter
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageKeyUp
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageKeyDown
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageKeyEnter
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosKeyUp
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosKeyDown
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosKeyEnter
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuKeyUp
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuKeyDown
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuKeyUp
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuKeyDown
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpRefresh
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpKeyENTER_BEF
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpKeyUp
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpKeyDown
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoKeyUp
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoKeyDown
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinShowDataRefresh
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinKeyEnter
</UL>

<P><STRONG><a name="[69c]"></a>BUTTON_SetFocussable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, BUTTON.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
</UL>

<P><STRONG><a name="[69d]"></a>BUTTON_SetTextOffset</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, BUTTON.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[69e]"></a>BUTTON_GetpWidget</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, BUTTON.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[69f]"></a>BUTTON_SetUserData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, BUTTON.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
</UL>

<P><STRONG><a name="[6a1]"></a>BUTTON_GetUserData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, BUTTON.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
</UL>

<P><STRONG><a name="[346]"></a>BUTTON_SetBitmapEx</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, BUTTON_Bitmap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = BUTTON_SetBitmapEx &rArr; [Anonymous Symbol] &rArr; BUTTON__SetDrawObj &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCreate
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinShowHelpInfoCreate
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
</UL>

<P><STRONG><a name="[a46]"></a>BUTTON_SetBitmap</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, BUTTON_Bitmap.o(.text), UNUSED)

<P><STRONG><a name="[6a6]"></a>BUTTON_Create</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, BUTTON_Create.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[361]"></a>BUTTON_CreateAsChild</STRONG> (Thumb, 18 bytes, Stack size 24 bytes, BUTTON_Create.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BUTTON_CreateAsChild
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Create
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCreate
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCreate
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuCreate
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinShowHelpInfoCreate
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCreate
</UL>

<P><STRONG><a name="[15b]"></a>BUTTON_CreateIndirect</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, BUTTON_CreateIndirect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = BUTTON_CreateIndirect &rArr; BUTTON_CreateUser &rArr; [Anonymous Symbol] &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewindlg.o(.constdata)
</UL>
<P><STRONG><a name="[35d]"></a>BUTTON_IsPressed</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, BUTTON_IsPressed.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BUTTON_IsPressed
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListKeyDown
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuKeyEnter
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuKeyUp
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuKeyDown
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2KeyENTER_BEF
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2KeyEnter
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpKeyENTER_BEF
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpKeyEnter
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuKeyUp
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuKeyDown
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuKeyEnter
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuKeyEnter
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuKeyUp
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuKeyDown
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuKeyUp
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuKeyEnter
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuKeyDown
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpKeyENTER_BEF
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpKeyEnter
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpKeyUp
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpKeyDown
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoKeyUp
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoKeyDown
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoKeyEnter
</UL>

<P><STRONG><a name="[33c]"></a>BUTTON_SetSkin</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, BUTTON_Skin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = BUTTON_SetSkin &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Create
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCreate
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCreate
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCreate
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
</UL>

<P><STRONG><a name="[a47]"></a>BUTTON_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, BUTTON_Skin.o(.text), UNUSED)

<P><STRONG><a name="[6b3]"></a>BUTTON_SetSkinClassic</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, BUTTON_SkinClassic.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[345]"></a>BUTTON_SetDefaultSkinClassic</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, BUTTON_SkinClassic.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
</UL>

<P><STRONG><a name="[18]"></a>BUTTON_DrawSkinFlex</STRONG> (Thumb, 620 bytes, Stack size 56 bytes, BUTTON_SkinFlex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = BUTTON_DrawSkinFlex &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_Main_Menu_Button_Home
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_Right_Button_Home
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_Five_NUMBER_Button
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_Three_NUMBER_Button
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_textheader_Button
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_Two_NUMBER_Button
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_NUMBER_Button
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_TEST1
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_TEST
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_Left_Button_Return
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_DriverRight_Button_Return3
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_DriverRight_Button_Return
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_DriverLeft_Button_Return
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_Btn_Btn
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIN_DriverRight_Button_Return2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> BUTTON.o(.data)
</UL>
<P><STRONG><a name="[a48]"></a>BUTTON_SetSkinFlexProps</STRONG> (Thumb, 26 bytes, Stack size 20 bytes, BUTTON_SkinFlex.o(.text), UNUSED)

<P><STRONG><a name="[a49]"></a>BUTTON_GetSkinFlexProps</STRONG> (Thumb, 26 bytes, Stack size 20 bytes, BUTTON_SkinFlex.o(.text), UNUSED)

<P><STRONG><a name="[1c]"></a>CHECKBOX__GetButtonSize</STRONG> (Thumb, 32 bytes, Stack size 40 bytes, CHECKBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CHECKBOX__GetButtonSize
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> CHECKBOX.o(.data)
</UL>
<P><STRONG><a name="[f2]"></a>CHECKBOX_Callback</STRONG> (Thumb, 270 bytes, Stack size 40 bytes, CHECKBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = CHECKBOX_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasCaptured
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> CHECKBOX.o(.text)
</UL>
<P><STRONG><a name="[6bb]"></a>CHECKBOX_CreateUser</STRONG> (Thumb, 158 bytes, Stack size 48 bytes, CHECKBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = CHECKBOX_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateEx
</UL>

<P><STRONG><a name="[3a3]"></a>CHECKBOX_CreateEx</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, CHECKBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = CHECKBOX_CreateEx &rArr; CHECKBOX_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCreate
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageFresh
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectFresh
</UL>

<P><STRONG><a name="[6bc]"></a>CHECKBOX_SetUserData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, CHECKBOX.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
</UL>

<P><STRONG><a name="[6bd]"></a>CHECKBOX_GetUserData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, CHECKBOX.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
</UL>

<P><STRONG><a name="[3a4]"></a>CHECKBOX_SetState</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, CHECKBOX_SetState.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = CHECKBOX_SetState &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCreate
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageFresh
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectFresh
</UL>

<P><STRONG><a name="[7c6]"></a>DIALOG_GetBkColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, DIALOG.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetBkColor
</UL>

<P><STRONG><a name="[a4a]"></a>DIALOG_SetBkColor</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, DIALOG.o(.text), UNUSED)

<P><STRONG><a name="[6be]"></a>GUI_SetDialogStatusPtr</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, DIALOG.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>

<P><STRONG><a name="[6c0]"></a>GUI_GetDialogStatusPtr</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, DIALOG.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>

<P><STRONG><a name="[6c1]"></a>GUI_CreateDialogBox</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, DIALOG.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFocussedWindow
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecDialogBox
</UL>

<P><STRONG><a name="[6c6]"></a>GUI_EndDialog</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, DIALOG.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteSecure
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>

<P><STRONG><a name="[6c8]"></a>GUI_ExecCreatedDialog</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, DIALOG.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[6ca]"></a>GUI_ExecDialogBox</STRONG> (Thumb, 38 bytes, Stack size 40 bytes, DIALOG.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
</UL>

<P><STRONG><a name="[6e3]"></a>EDIT__GetCurrentChar</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, EDIT.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EDIT__GetCurrentChar &rArr; GUI_UC__NumChars2NumBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementCursor
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
</UL>

<P><STRONG><a name="[6e5]"></a>EDIT__SetCursorPos</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, EDIT.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EDIT__SetCursorPos &rArr; GUI__GetNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementCursor
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextMode
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
</UL>

<P><STRONG><a name="[6e6]"></a>EDIT__SetValueUnsigned</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, EDIT.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
</UL>

<P><STRONG><a name="[f3]"></a>EDIT_Callback</STRONG> (Thumb, 234 bytes, Stack size 24 bytes, EDIT.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = EDIT_Callback &rArr; _Paint &rArr; WIDGET__FillStringInRect &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> EDIT.o(.text)
</UL>
<P><STRONG><a name="[6ea]"></a>EDIT_CreateUser</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, EDIT.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[3b4]"></a>EDIT_CreateEx</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, EDIT.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = EDIT_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCreate
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCreate
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
</UL>

<P><STRONG><a name="[6e8]"></a>EDIT_SetCursorAtPixel</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, EDIT.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = EDIT_SetCursorAtPixel &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetCursorPosChar
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
</UL>

<P><STRONG><a name="[6e9]"></a>EDIT_AddKey</STRONG> (Thumb, 288 bytes, Stack size 40 bytes, EDIT.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = EDIT_AddKey &rArr; _InsertChar &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeCharacter
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
</UL>

<P><STRONG><a name="[6ed]"></a>EDIT_GetFont</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, EDIT.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[3b6]"></a>EDIT_SetFont</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, EDIT.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = EDIT_SetFont &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCreate
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCreate
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
</UL>

<P><STRONG><a name="[6ee]"></a>EDIT_GetBkColor</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, EDIT.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[6ef]"></a>EDIT_SetBkColor</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, EDIT.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[6f0]"></a>EDIT_GetTextColor</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, EDIT.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[3b7]"></a>EDIT_SetTextColor</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, EDIT.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = EDIT_SetTextColor &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCreate
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCreate
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeKeyEnter
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputKeyEnter
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumKeyEnter
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumKeyEnter
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumKeyEnter
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageKeyEnter
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosKeyEnter
</UL>

<P><STRONG><a name="[6f1]"></a>EDIT_SetText</STRONG> (Thumb, 252 bytes, Stack size 48 bytes, EDIT.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = EDIT_SetText &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextMode
</UL>

<P><STRONG><a name="[6f2]"></a>EDIT_GetText</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, EDIT.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[6f3]"></a>EDIT_GetValue</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, EDIT.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[3b2]"></a>EDIT_SetValue</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, EDIT.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = EDIT_SetValue &rArr; _SetValue &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EditDec
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddPosition
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFloatValue
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeKeyUp
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeKeyDown
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputKeyUp
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputKeyDown
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumKeyUp
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumKeyDown
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumKeyUp
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumKeyDown
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumKeyUp
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumKeyDown
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageKeyUp
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageKeyDown
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenKeyUp
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenKeyDown
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseKeyUp
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseKeyDown
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosKeyUp
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosKeyDown
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenKeyUp
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenKeyDown
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseKeyUp
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseKeyDown
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenKeyUp
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenKeyDown
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseKeyUp
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseKeyDown
</UL>

<P><STRONG><a name="[6f4]"></a>EDIT_SetMaxLen</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, EDIT.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = EDIT_SetMaxLen &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
</UL>

<P><STRONG><a name="[3c1]"></a>EDIT_SetTextAlign</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, EDIT.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = EDIT_SetTextAlign &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCreate
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCreate
</UL>

<P><STRONG><a name="[6f5]"></a>EDIT_EnableInversion</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, EDIT.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[6f6]"></a>EDIT_SetUserData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, EDIT.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
</UL>

<P><STRONG><a name="[6f7]"></a>EDIT_GetUserData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, EDIT.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
</UL>

<P><STRONG><a name="[3b8]"></a>EDIT_SetDecMode</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, EDITDec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = EDIT_SetDecMode &rArr; EDIT_SetMaxLen &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateBuffer
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDecs
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__GetCurrentChar
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WinPasswordNumberChangeShowStyle
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WinPasswordNumberShowStyle
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WinFourNumberShowStyle
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WinFiveNumberShowStyle
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WinThreeNumberShowStyle
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WinPercentageNumberShowStyle
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WinEmergencyPosNumberShowStyle
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCreate
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCreate
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFloatMode
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeKeyEnter
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputKeyEnter
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumKeyEnter
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumKeyEnter
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumKeyEnter
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageKeyEnter
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosKeyEnter
</UL>

<P><STRONG><a name="[3cd]"></a>EDIT_SetFloatMode</STRONG> (Thumb, 156 bytes, Stack size 48 bytes, EDITFloat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = EDIT_SetFloatMode &rArr; EDIT_SetDecMode &rArr; EDIT_SetMaxLen &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
</UL>
<BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
</UL>

<P><STRONG><a name="[6fc]"></a>EDIT_GetFloatValue</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, EDITFloat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[3ca]"></a>EDIT_SetFloatValue</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, EDITFloat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = EDIT_SetFloatValue &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesKeyUp
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesKeyDown
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenKeyUp
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenKeyDown
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseKeyUp
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseKeyDown
</UL>

<P><STRONG><a name="[3d6]"></a>EDIT_EnableBlink</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, EDIT_EnableBlink.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = EDIT_EnableBlink &rArr; WM_CreateTimer &rArr; GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
</UL>

<P><STRONG><a name="[3db]"></a>EDIT_SetTextMode</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, EDIT_SetTextMode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = EDIT_SetTextMode &rArr; EDIT_SetText &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WinPasswordNumberChangeShowStyle
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WinPasswordNumberShowStyle
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WinFourNumberShowStyle
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WinFiveNumberShowStyle
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WinThreeNumberShowStyle
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WinPercentageNumberShowStyle
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WinEmergencyPosNumberShowStyle
</UL>

<P><STRONG><a name="[1e]"></a>FRAMEWIN__GetBorderSize</STRONG> (Thumb, 64 bytes, Stack size 56 bytes, FRAMEWIN.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = FRAMEWIN__GetBorderSize
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> FRAMEWIN.o(.data)
</UL>
<P><STRONG><a name="[701]"></a>FRAMEWIN__CalcTitleHeight</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, FRAMEWIN.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FRAMEWIN__CalcTitleHeight
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYSizeOfFont
</UL>
<BR>[Called By]<UL><LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkin
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[703]"></a>FRAMEWIN__GetTitleLimits</STRONG> (Thumb, 146 bytes, Stack size 40 bytes, FRAMEWIN.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FRAMEWIN__GetTitleLimits &rArr; WM_GetNextSibling
</UL>
<BR>[Calls]<UL><LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[705]"></a>FRAMEWIN__CalcPositions</STRONG> (Thumb, 218 bytes, Stack size 64 bytes, FRAMEWIN.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = FRAMEWIN__CalcPositions &rArr; FRAMEWIN__GetTitleLimits &rArr; WM_GetNextSibling
</UL>
<BR>[Calls]<UL><LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeY
<LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeX
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetTitleHeight
</UL>

<P><STRONG><a name="[708]"></a>FRAMEWIN__UpdatePositions</STRONG> (Thumb, 304 bytes, Stack size 88 bytes, FRAMEWIN.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = FRAMEWIN__UpdatePositions &rArr; WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeY
<LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeX
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkin
</UL>

<P><STRONG><a name="[f6]"></a>FRAMEWIN_Callback</STRONG> (Thumb, 692 bytes, Stack size 80 bytes, FRAMEWIN.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = FRAMEWIN_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestorOrSelf
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetActive
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasFocus
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> FRAMEWIN.o(.text)
</UL>
<P><STRONG><a name="[712]"></a>FRAMEWIN_CreateUser</STRONG> (Thumb, 198 bytes, Stack size 64 bytes, FRAMEWIN.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableMemdev
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateEx
</UL>

<P><STRONG><a name="[715]"></a>FRAMEWIN_CreateEx</STRONG> (Thumb, 40 bytes, Stack size 40 bytes, FRAMEWIN.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[714]"></a>FRAMEWIN_SetText</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, FRAMEWIN.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
</UL>

<P><STRONG><a name="[355]"></a>FRAMEWIN_SetTextAlign</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, FRAMEWIN.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = FRAMEWIN_SetTextAlign &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxCreate
</UL>

<P><STRONG><a name="[716]"></a>FRAMEWIN_SetMoveable</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, FRAMEWIN.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[717]"></a>FRAMEWIN_SetActive</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, FRAMEWIN.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetActive
</UL>

<P><STRONG><a name="[718]"></a>FRAMEWIN_SetUserData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, FRAMEWIN.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
</UL>

<P><STRONG><a name="[719]"></a>FRAMEWIN_GetUserData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, FRAMEWIN.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
</UL>

<P><STRONG><a name="[71a]"></a>FRAMEWIN_Create</STRONG> (Thumb, 30 bytes, Stack size 32 bytes, FRAMEWIN_Create.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[352]"></a>FRAMEWIN_CreateAsChild</STRONG> (Thumb, 26 bytes, Stack size 32 bytes, FRAMEWIN_Create.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FRAMEWIN_CreateAsChild
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCreate
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCreate
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCreate
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxCreate
</UL>

<P><STRONG><a name="[71c]"></a>FRAMEWIN_SetBarColor</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, FRAMEWIN_SetColors.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[71d]"></a>FRAMEWIN_SetTextColor</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, FRAMEWIN_SetColors.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[71e]"></a>FRAMEWIN_SetTextColorEx</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, FRAMEWIN_SetColors.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[360]"></a>FRAMEWIN_SetClientColor</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, FRAMEWIN_SetColors.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = FRAMEWIN_SetClientColor &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCreate
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCreate
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCreate
</UL>

<P><STRONG><a name="[353]"></a>FRAMEWIN_SetFont</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, FRAMEWIN_SetFont.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = FRAMEWIN_SetFont &rArr; FRAMEWIN__UpdatePositions &rArr; WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCreate
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuCreate
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCreate
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCreate
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxCreate
</UL>

<P><STRONG><a name="[354]"></a>FRAMEWIN_SetTitleVis</STRONG> (Thumb, 168 bytes, Stack size 40 bytes, FRAMEWIN_SetTitleVis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = FRAMEWIN_SetTitleVis &rArr; FRAMEWIN__UpdatePositions &rArr; WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Create
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCreate
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCreate
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCreate
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCreate
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCreate
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCreate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinShowHelpInfoCreate
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCreate
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxCreate
</UL>

<P><STRONG><a name="[723]"></a>IMAGE__FreeAttached</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, IMAGE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = IMAGE__FreeAttached &rArr; GUI_MEMDEV_Delete &rArr; GUI_USAGE_DecUseCnt &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
</UL>

<P><STRONG><a name="[725]"></a>IMAGE__SetWindowSize</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, IMAGE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = IMAGE__SetWindowSize &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
</UL>

<P><STRONG><a name="[f8]"></a>IMAGE_Callback</STRONG> (Thumb, 498 bytes, Stack size 56 bytes, IMAGE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = IMAGE_Callback &rArr; GUI_MEMDEV_Create &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> IMAGE.o(.text)
</UL>
<P><STRONG><a name="[72a]"></a>IMAGE_CreateUser</STRONG> (Thumb, 136 bytes, Stack size 48 bytes, IMAGE.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateIndirect
</UL>

<P><STRONG><a name="[338]"></a>IMAGE_CreateEx</STRONG> (Thumb, 152 bytes, Stack size 48 bytes, IMAGE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = IMAGE_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCreate
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Create
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCreate
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCreate
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCreate
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCreate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinShowHelpInfoCreate
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
</UL>

<P><STRONG><a name="[72d]"></a>IMAGE_CreateIndirect</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, IMAGE.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateUser
</UL>

<P><STRONG><a name="[72e]"></a>IMAGE_SetUserData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, IMAGE.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
</UL>

<P><STRONG><a name="[72f]"></a>IMAGE_GetUserData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, IMAGE.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
</UL>

<P><STRONG><a name="[339]"></a>IMAGE_SetBitmap</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, IMAGE_Bitmap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = IMAGE_SetBitmap &rArr; IMAGE__SetWindowSize &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE__SetWindowSize
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE__FreeAttached
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCreate
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Create
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCreate
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCreate
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCreate
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCreate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinShowHelpInfoCreate
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
</UL>

<P><STRONG><a name="[73b]"></a>LISTBOX_UpdateScrollers</STRONG> (Thumb, 242 bytes, Stack size 24 bytes, LISTBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LISTBOX_UpdateScrollers &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarColor
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetString
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollH
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[74e]"></a>LISTBOX__GetNumItems</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, LISTBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LISTBOX__GetNumItems &rArr; GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetString
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSel
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetNumItems
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemSel
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
</UL>

<P><STRONG><a name="[74f]"></a>LISTBOX__GetpStringLocked</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, LISTBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LISTBOX__GetpStringLocked &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemText
</UL>

<P><STRONG><a name="[750]"></a>LISTBOX__InvalidateItemSize</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, LISTBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LISTBOX__InvalidateItemSize &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetString
</UL>

<P><STRONG><a name="[751]"></a>LISTBOX__InvalidateInsideArea</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, LISTBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = LISTBOX__InvalidateInsideArea &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetMulti
</UL>

<P><STRONG><a name="[746]"></a>LISTBOX__InvalidateItem</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, LISTBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = LISTBOX__InvalidateItem &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetString
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSel
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
</UL>

<P><STRONG><a name="[752]"></a>LISTBOX__InvalidateItemAndBelow</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, LISTBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = LISTBOX__InvalidateItemAndBelow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
</UL>
<BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
</UL>

<P><STRONG><a name="[73e]"></a>LISTBOX__SetScrollbarWidth</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, LISTBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetWidth
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetDefaultWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>

<P><STRONG><a name="[73f]"></a>LISTBOX__SetScrollbarColor</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, LISTBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = LISTBOX__SetScrollbarColor &rArr; SCROLLBAR_SetColor &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>

<P><STRONG><a name="[756]"></a>LISTBOX__AddSize</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, LISTBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = LISTBOX__AddSize &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
</UL>

<P><STRONG><a name="[fe]"></a>LISTBOX_OwnerDraw</STRONG> (Thumb, 532 bytes, Stack size 56 bytes, LISTBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetpStringLocked
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRect
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectListOwnerDraw
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OwnerDraw
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw51
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw5
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw3
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw6
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw50
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw2
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw4
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw00
</UL>
<BR>[Address Reference Count : 2]<UL><LI> LISTBOX.o(.text)
<LI> LISTBOX_SetOwnerDraw.o(.text)
</UL>
<P><STRONG><a name="[fd]"></a>LISTBOX_Callback</STRONG> (Thumb, 702 bytes, Stack size 80 bytes, LISTBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = LISTBOX_Callback &rArr; _AddKey &rArr; _MoveSel &rArr; LISTBOX_UpdateScrollers &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LISTBOX.o(.text)
</UL>
<P><STRONG><a name="[75d]"></a>LISTBOX_CreateUser</STRONG> (Thumb, 10 bytes, Stack size 32 bytes, LISTBOX.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[33d]"></a>LISTBOX_CreateEx</STRONG> (Thumb, 6 bytes, Stack size 32 bytes, LISTBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LISTBOX_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCreate
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCreate
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCreate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateAsChild
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Create
</UL>

<P><STRONG><a name="[32a]"></a>LISTBOX_InvalidateItem</STRONG> (Thumb, 202 bytes, Stack size 40 bytes, LISTBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = LISTBOX_InvalidateItem &rArr; LISTBOX_UpdateScrollers &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCallback
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwnerDraw
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetText
</UL>

<P><STRONG><a name="[761]"></a>LISTBOX_AddKey</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, LISTBOX.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[344]"></a>LISTBOX_AddString</STRONG> (Thumb, 172 bytes, Stack size 48 bytes, LISTBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__AddSize
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCreate
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCreate
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCreate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetText
</UL>

<P><STRONG><a name="[760]"></a>LISTBOX_SetText</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, LISTBOX.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
</UL>
<BR>[Called By]<UL><LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[314]"></a>LISTBOX_SetSel</STRONG> (Thumb, 210 bytes, Stack size 48 bytes, LISTBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCreate
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCreate
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCreate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuInterface
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuInterface
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuInterface
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinInterface
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListBoxShowMainInfoInterface
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuKeyUp
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuKeyDown
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeKeyUp
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeKeyDown
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeKeyEnter
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageKeyUp
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageKeyDown
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputKeyUp
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputKeyDown
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputKeyEnter
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuKeyUp
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuKeyDown
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumKeyUp
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumKeyDown
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumKeyEnter
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumKeyUp
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumKeyDown
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumKeyEnter
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumKeyUp
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumKeyDown
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumKeyEnter
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageKeyUp
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageKeyDown
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageKeyEnter
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosKeyUp
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosKeyDown
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosKeyEnter
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectKeyUp
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectKeyDown
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserKeyUp
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserKeyDown
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuKeyUp
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuKeyDown
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuKeyUp
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuKeyDown
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoKeyUp
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoKeyDown
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListBoxInterface
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinKeyUp
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinKeyDown
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[30a]"></a>LISTBOX_GetSel</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, LISTBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LISTBOX_GetSel
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectListOwnerDraw
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY2
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListCallback
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OwnerDraw
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw51
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuKeyEnter
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuKeyUp
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuKeyDown
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw5
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageKeyUp
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageKeyDown
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageKeyEnter
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuKeyUp
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuKeyDown
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuKeyEnter
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw3
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectKeyUp
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectKeyDown
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectKeyEnter
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserKeyUp
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserKeyDown
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserKeyEnter
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw6
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw50
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuKeyEnter
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuKeyUp
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuKeyDown
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw2
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw4
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuKeyUp
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuKeyEnter
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuKeyDown
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoKeyUp
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoKeyDown
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoKeyEnter
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw00
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinKeyEnter
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinKeyUp
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinKeyDown
</UL>

<P><STRONG><a name="[763]"></a>LISTBOX_IncSel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, LISTBOX.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[764]"></a>LISTBOX_DecSel</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, LISTBOX.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[765]"></a>LISTBOX_EnableWrapMode</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, LISTBOX.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[766]"></a>LISTBOX_GetOwner</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, LISTBOX.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[767]"></a>LISTBOX_SetUserData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, LISTBOX.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
</UL>

<P><STRONG><a name="[768]"></a>LISTBOX_GetUserData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, LISTBOX.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
</UL>

<P><STRONG><a name="[769]"></a>LISTBOX_Create</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, LISTBOX_Create.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
</UL>

<P><STRONG><a name="[358]"></a>LISTBOX_CreateAsChild</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, LISTBOX_Create.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LISTBOX_CreateAsChild &rArr; LISTBOX_CreateEx
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxCreate
</UL>

<P><STRONG><a name="[33f]"></a>LISTBOX_SetFont</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, LISTBOX_Font.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = LISTBOX_SetFont &rArr; LISTBOX_InvalidateItem &rArr; LISTBOX_UpdateScrollers &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCreate
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCreate
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCreate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
</UL>

<P><STRONG><a name="[76a]"></a>LISTBOX_GetFont</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, LISTBOX_Font.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[306]"></a>LISTBOX_GetItemText</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, LISTBOX_GetItemText.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = LISTBOX_GetItemText &rArr; LISTBOX__GetpStringLocked &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetNumItems
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetpStringLocked
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectListOwnerDraw
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeX2
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeX_CommonList
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OwnerDraw
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeX
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw51
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw5
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw3
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw6
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw50
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw2
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw4
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw00
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeX_CommonList
</UL>

<P><STRONG><a name="[315]"></a>LISTBOX_GetNumItems</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, LISTBOX_GetNumItems.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LISTBOX_GetNumItems &rArr; LISTBOX__GetNumItems &rArr; GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuInterface
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuInterface
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuInterface
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemText
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuKeyEnter
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuKeyUp
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuKeyDown
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageKeyUp
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageKeyDown
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectKeyUp
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectKeyDown
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserKeyUp
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserKeyDown
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuKeyEnter
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuKeyUp
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuKeyDown
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuKeyUp
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuKeyDown
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoKeyUp
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoKeyDown
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListBoxInterface
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinKeyDown
</UL>

<P><STRONG><a name="[30c]"></a>LISTBOX_GetItemDisabled</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, LISTBOX_ItemDisabled.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LISTBOX_GetItemDisabled &rArr; GUI_ARRAY_GethItem &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectListOwnerDraw
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OwnerDraw
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuInterface
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuInterface
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw51
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuKeyEnter
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuKeyUp
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuKeyDown
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw5
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageKeyUp
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageKeyDown
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageKeyEnter
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw3
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectKeyUp
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectKeyDown
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectKeyEnter
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserKeyUp
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserKeyDown
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserKeyEnter
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw6
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw50
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuKeyEnter
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuKeyUp
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuKeyDown
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw2
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw4
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuKeyUp
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuKeyDown
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoKeyUp
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoKeyDown
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw00
</UL>

<P><STRONG><a name="[31b]"></a>LISTBOX_SetItemDisabled</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, LISTBOX_ItemDisabled.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LISTBOX_SetItemDisabled &rArr; LISTBOX__InvalidateItem &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCreate
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCreate
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCreate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuKeyDown
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageKeyDown
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectKeyDown
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuKeyDown
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinShowRefresh
</UL>

<P><STRONG><a name="[340]"></a>LISTBOX_SetItemSpacing</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, LISTBOX_ItemSpacing.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = LISTBOX_SetItemSpacing &rArr; LISTBOX_InvalidateItem &rArr; LISTBOX_UpdateScrollers &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCreate
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCreate
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCreate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
</UL>

<P><STRONG><a name="[76b]"></a>LISTBOX_GetItemSpacing</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, LISTBOX_ItemSpacing.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[76c]"></a>LISTBOX_SetMulti</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, LISTBOX_MultiSel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
</UL>

<P><STRONG><a name="[76d]"></a>LISTBOX_GetMulti</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, LISTBOX_MultiSel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[30d]"></a>LISTBOX_GetItemSel</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, LISTBOX_MultiSel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LISTBOX_GetItemSel &rArr; GUI_ARRAY_GethItem &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectListOwnerDraw
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OwnerDraw
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw51
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw5
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw3
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw6
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw50
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw2
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw4
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw00
</UL>

<P><STRONG><a name="[3f8]"></a>LISTBOX_SetItemSel</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, LISTBOX_MultiSel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LISTBOX_SetItemSel &rArr; LISTBOX__InvalidateItem &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCreate
</UL>

<P><STRONG><a name="[76e]"></a>LISTBOX_SetAutoScrollH</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, LISTBOX_SetAutoScroll.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
</UL>

<P><STRONG><a name="[342]"></a>LISTBOX_SetAutoScrollV</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, LISTBOX_SetAutoScroll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = LISTBOX_SetAutoScrollV &rArr; LISTBOX_UpdateScrollers &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCreate
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCreate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
</UL>

<P><STRONG><a name="[317]"></a>LISTBOX_SetBkColor</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, LISTBOX_SetBkColor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = LISTBOX_SetBkColor &rArr; LISTBOX__InvalidateInsideArea &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCreate
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCreate
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCreate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuInterface
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuInterface
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuInterface
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinInterface
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListBoxShowMainInfoInterface
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeKeyDown
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputKeyDown
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuKeyUp
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuKeyDown
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuKeyUp
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuKeyDown
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoKeyUp
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoKeyDown
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinKeyUp
</UL>

<P><STRONG><a name="[343]"></a>LISTBOX_SetOwnerDraw</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, LISTBOX_SetOwnerDraw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = LISTBOX_SetOwnerDraw &rArr; LISTBOX_InvalidateItem &rArr; LISTBOX_UpdateScrollers &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCreate
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
</UL>

<P><STRONG><a name="[31a]"></a>LISTBOX_SetString</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, LISTBOX_SetString.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = LISTBOX_SetString &rArr; LISTBOX_UpdateScrollers &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemSize
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuRefresh
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinShowRefresh
</UL>

<P><STRONG><a name="[341]"></a>LISTBOX_SetTextAlign</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, LISTBOX_SetTextAlign.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = LISTBOX_SetTextAlign &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCreate
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCreate
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCreate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
</UL>

<P><STRONG><a name="[372]"></a>LISTBOX_SetTextColor</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, LISTBOX_SetTextColor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = LISTBOX_SetTextColor &rArr; LISTBOX__InvalidateInsideArea &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCreate
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCreate
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCreate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
</UL>

<P><STRONG><a name="[786]"></a>LISTVIEW__GetpRow</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, LISTVIEW.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LISTVIEW__GetpRow &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DisableRow
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetRowDisabled
<LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_RowIsDisabled
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemTextLen
</UL>

<P><STRONG><a name="[781]"></a>LISTVIEW__GetRowDistY</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, LISTVIEW.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LISTVIEW__GetRowDistY
</UL>
<BR>[Calls]<UL><LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
</UL>
<BR>[Called By]<UL><LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
</UL>

<P><STRONG><a name="[77d]"></a>LISTVIEW__InvalidateInsideArea</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, LISTVIEW.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = LISTVIEW__InvalidateInsideArea &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetFont
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetBkColor
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSelCol
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[8da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRBorder
<LI><a href="#[8d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetLBorder
</UL>

<P><STRONG><a name="[789]"></a>LISTVIEW__InvalidateRow</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, LISTVIEW.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = LISTVIEW__InvalidateRow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DisableRow
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetRowDisabled
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSelCol
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
</UL>

<P><STRONG><a name="[773]"></a>LISTVIEW__SetSel</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, LISTVIEW.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LISTVIEW__SetSel &rArr; _UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_RowIsDisabled
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSel
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[78a]"></a>LISTVIEW__SetSelCol</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, LISTVIEW.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_RowIsDisabled
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>
<BR>[Called By]<UL><LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSelCol
</UL>

<P><STRONG><a name="[78b]"></a>LISTVIEW__UpdateScrollParas</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, LISTVIEW.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LISTVIEW__UpdateScrollParas &rArr; _UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetFont
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[100]"></a>LISTVIEW_OwnerDraw</STRONG> (Thumb, 238 bytes, Stack size 24 bytes, LISTVIEW.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LISTVIEW_OwnerDraw &rArr; GUI_DispStringInRectWrap &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LISTVIEW.o(.text)
</UL>
<P><STRONG><a name="[ff]"></a>LISTVIEW_Callback</STRONG> (Thumb, 648 bytes, Stack size 56 bytes, LISTVIEW.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_Callback &rArr; _OnPaint &rArr; _GetNumVisibleRows &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetSel
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LISTVIEW.o(.text)
</UL>
<P><STRONG><a name="[790]"></a>LISTVIEW_CreateUser</STRONG> (Thumb, 62 bytes, Stack size 48 bytes, LISTVIEW.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = LISTVIEW_CreateUser &rArr; [Anonymous Symbol] &rArr; LISTVIEW__UpdateScrollParas &rArr; _UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateIndirect
</UL>

<P><STRONG><a name="[363]"></a>LISTVIEW_CreateEx</STRONG> (Thumb, 58 bytes, Stack size 48 bytes, LISTVIEW.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LISTVIEW_CreateEx &rArr; WM_GetClientRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCreate
</UL>

<P><STRONG><a name="[793]"></a>LISTVIEW_IncSel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, LISTVIEW.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[794]"></a>LISTVIEW_DecSel</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, LISTVIEW.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[364]"></a>LISTVIEW_AddColumn</STRONG> (Thumb, 162 bytes, Stack size 56 bytes, LISTVIEW.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = LISTVIEW_AddColumn &rArr; LISTVIEW__UpdateScrollParas &rArr; _UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCreate
</UL>

<P><STRONG><a name="[36b]"></a>LISTVIEW_AddRow</STRONG> (Thumb, 268 bytes, Stack size 56 bytes, LISTVIEW.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; _UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strlen
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCreate
</UL>

<P><STRONG><a name="[366]"></a>LISTVIEW_SetHeaderHeight</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, LISTVIEW.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LISTVIEW_SetHeaderHeight &rArr; HEADER_SetHeight &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCreate
</UL>

<P><STRONG><a name="[799]"></a>LISTVIEW_EnableCellSelect</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, LISTVIEW.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[79a]"></a>LISTVIEW_SetUserData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, LISTVIEW.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
</UL>

<P><STRONG><a name="[79b]"></a>LISTVIEW_GetUserData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, LISTVIEW.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
</UL>

<P><STRONG><a name="[15a]"></a>LISTVIEW_CreateIndirect</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, LISTVIEW_CreateIndirect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = LISTVIEW_CreateIndirect &rArr; LISTVIEW_CreateUser &rArr; [Anonymous Symbol] &rArr; LISTVIEW__UpdateScrollParas &rArr; _UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewindlg.o(.constdata)
</UL>
<P><STRONG><a name="[79d]"></a>LISTVIEW_DisableRow</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, LISTVIEW_DisableRow.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
</UL>

<P><STRONG><a name="[79e]"></a>LISTVIEW_EnableRow</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, LISTVIEW_DisableRow.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetRowDisabled
</UL>

<P><STRONG><a name="[772]"></a>LISTVIEW_RowIsDisabled</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, LISTVIEW_DisableRow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LISTVIEW_RowIsDisabled &rArr; LISTVIEW__GetpRow &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
</UL>
<BR>[Called By]<UL><LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSelCol
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[771]"></a>LISTVIEW__GetNumRows</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, LISTVIEW_GetNumRows.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LISTVIEW__GetNumRows &rArr; GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DisableRow
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetRowDisabled
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemTextLen
<LI><a href="#[8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemText
</UL>

<P><STRONG><a name="[36e]"></a>LISTVIEW_GetNumRows</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, LISTVIEW_GetNumRows.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewInterface
</UL>

<P><STRONG><a name="[35f]"></a>LISTVIEW_GetSel</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, LISTVIEW_GetSel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LISTVIEW_GetSel
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCallback
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[7a0]"></a>LISTVIEW_GetSelCol</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, LISTVIEW_GetSel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSel
</UL>

<P><STRONG><a name="[369]"></a>LISTVIEW_SetBkColor</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, LISTVIEW_SetBkColor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = LISTVIEW_SetBkColor &rArr; LISTVIEW__InvalidateInsideArea &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCreate
</UL>

<P><STRONG><a name="[365]"></a>LISTVIEW_SetFont</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, LISTVIEW_SetFont.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = LISTVIEW_SetFont &rArr; LISTVIEW__UpdateScrollParas &rArr; _UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCreate
</UL>

<P><STRONG><a name="[367]"></a>LISTVIEW_SetGridVis</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, LISTVIEW_SetGridVis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = LISTVIEW_SetGridVis &rArr; LISTVIEW__UpdateScrollParas &rArr; _UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCreate
</UL>

<P><STRONG><a name="[36c]"></a>LISTVIEW_SetItemText</STRONG> (Thumb, 152 bytes, Stack size 48 bytes, LISTVIEW_SetItemText.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LISTVIEW_SetItemText &rArr; LISTVIEW__InvalidateRow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strlen
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCreate
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemTextSorted
</UL>

<P><STRONG><a name="[7a1]"></a>LISTVIEW_SetItemTextSorted</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, LISTVIEW_SetItemText.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowSorted
</UL>

<P><STRONG><a name="[368]"></a>LISTVIEW_SetRowHeight</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, LISTVIEW_SetRowHeight.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = LISTVIEW_SetRowHeight &rArr; LISTVIEW__UpdateScrollParas &rArr; _UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCreate
</UL>

<P><STRONG><a name="[35e]"></a>LISTVIEW_SetSel</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, LISTVIEW_SetSel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LISTVIEW_SetSel &rArr; LISTVIEW__SetSel &rArr; _UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
</UL>
<BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListKeyDown
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListViewInterface
</UL>

<P><STRONG><a name="[7a3]"></a>LISTVIEW_SetSelCol</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, LISTVIEW_SetSel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSelCol
</UL>

<P><STRONG><a name="[7a5]"></a>PROGBAR__GetTextLocked</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, PROGBAR.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[7a6]"></a>PROGBAR__GetTextRect</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, PROGBAR.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = PROGBAR__GetTextRect &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[7aa]"></a>PROGBAR__Value2Pos</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, PROGBAR.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PROGBAR__Value2Pos
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[101]"></a>PROGBAR_Callback</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, PROGBAR.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = PROGBAR_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PROGBAR.o(.text)
</UL>
<P><STRONG><a name="[7a8]"></a>PROGBAR_CreateUser</STRONG> (Thumb, 12 bytes, Stack size 40 bytes, PROGBAR.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[348]"></a>PROGBAR_CreateEx</STRONG> (Thumb, 8 bytes, Stack size 40 bytes, PROGBAR.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PROGBAR_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[322]"></a>PROGBAR_SetValue</STRONG> (Thumb, 340 bytes, Stack size 40 bytes, PROGBAR.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = PROGBAR_SetValue &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__Value2Pos
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumKeyUp
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumKeyDown
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumKeyEnter
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumKeyUp
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumKeyDown
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumKeyEnter
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumKeyUp
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumKeyDown
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumKeyEnter
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageKeyUp
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageKeyDown
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageKeyEnter
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenKeyUp
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenKeyDown
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseKeyUp
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseKeyDown
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosKeyUp
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosKeyDown
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosKeyEnter
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesKeyUp
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesKeyDown
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenKeyUp
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenKeyDown
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseKeyUp
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseKeyDown
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenKeyUp
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenKeyDown
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseKeyUp
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseKeyDown
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpRefresh
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinShowDataRefresh
</UL>

<P><STRONG><a name="[7ad]"></a>PROGBAR_GetValue</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, PROGBAR.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[7ae]"></a>PROGBAR_GetMinMax</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, PROGBAR.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[7af]"></a>PROGBAR_SetUserData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, PROGBAR.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
</UL>

<P><STRONG><a name="[7b0]"></a>PROGBAR_GetUserData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, PROGBAR.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
</UL>

<P><STRONG><a name="[7b1]"></a>PROGBAR_Create</STRONG> (Thumb, 18 bytes, Stack size 24 bytes, PROGBAR_Create.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[3b5]"></a>PROGBAR_CreateAsChild</STRONG> (Thumb, 18 bytes, Stack size 24 bytes, PROGBAR_Create.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PROGBAR_CreateAsChild
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
</UL>

<P><STRONG><a name="[34b]"></a>PROGBAR_SetBarColor</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, PROGBAR_SetBarColor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = PROGBAR_SetBarColor &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
</UL>

<P><STRONG><a name="[34a]"></a>PROGBAR_SetMinMax</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, PROGBAR_SetMinMax.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = PROGBAR_SetMinMax &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
</UL>

<P><STRONG><a name="[349]"></a>PROGBAR_SetText</STRONG> (Thumb, 178 bytes, Stack size 48 bytes, PROGBAR_SetText.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = PROGBAR_SetText &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextLocked
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
</UL>

<P><STRONG><a name="[34c]"></a>PROGBAR_SetSkin</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, PROGBAR_Skin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = PROGBAR_SetSkin &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpRefresh
</UL>

<P><STRONG><a name="[a4b]"></a>PROGBAR_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, PROGBAR_Skin.o(.text), UNUSED)

<P><STRONG><a name="[2]"></a>PROGBAR_DrawSkinFlex</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, PROGBAR_SkinFlex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = PROGBAR_DrawSkinFlex &rArr; _DrawBackground &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProgOwnerSkin3
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProgOwnerSkin2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PROGBAR.o(.data)
</UL>
<P><STRONG><a name="[7b4]"></a>PROGBAR_SetSkinFlexProps</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, PROGBAR_SkinFlex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[7b6]"></a>PROGBAR_GetSkinFlexProps</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, PROGBAR_SkinFlex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[3ae]"></a>SCROLLBAR_GetNumItems</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, SCROLLBAR_GetNumItems.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SCROLLBAR_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageFresh
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectFresh
</UL>

<P><STRONG><a name="[3af]"></a>SCROLLBAR_GetValue</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, SCROLLBAR_GetValue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SCROLLBAR_GetValue
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageFresh
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectFresh
</UL>

<P><STRONG><a name="[102]"></a>TEXT_Callback</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, TEXT.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = TEXT_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
</UL>
<BR>[Address Reference Count : 1]<UL><LI> TEXT.o(.text)
</UL>
<P><STRONG><a name="[7b8]"></a>TEXT_CreateUser</STRONG> (Thumb, 10 bytes, Stack size 32 bytes, TEXT.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = TEXT_CreateUser &rArr; [Anonymous Symbol] &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateIndirect
</UL>

<P><STRONG><a name="[362]"></a>TEXT_CreateEx</STRONG> (Thumb, 6 bytes, Stack size 32 bytes, TEXT.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TEXT_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCreate
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Create
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCreate
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCreate
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCreate
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCreate
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCreate
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCreate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinShowHelpInfoCreate
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCreate
<LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[7ba]"></a>TEXT_SetUserData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, TEXT.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
</UL>

<P><STRONG><a name="[7bb]"></a>TEXT_GetUserData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, TEXT.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
</UL>

<P><STRONG><a name="[7bc]"></a>TEXT_Create</STRONG> (Thumb, 24 bytes, Stack size 32 bytes, TEXT_Create.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[33a]"></a>TEXT_CreateAsChild</STRONG> (Thumb, 22 bytes, Stack size 32 bytes, TEXT_Create.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TEXT_CreateAsChild
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
</UL>

<P><STRONG><a name="[15c]"></a>TEXT_CreateIndirect</STRONG> (Thumb, 60 bytes, Stack size 40 bytes, TEXT_CreateIndirect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = TEXT_CreateIndirect &rArr; TEXT_CreateUser &rArr; [Anonymous Symbol] &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewindlg.o(.constdata)
</UL>
<P><STRONG><a name="[313]"></a>TEXT_SetBkColor</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, TEXT_SetBkColor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = TEXT_SetBkColor &rArr; WM_SetHasTrans &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ClrHasTrans
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Create
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCreate
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCreate
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCreate
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCreate
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinShowHelpInfoCreate
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpInterface
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2KeyUp
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2KeyDown
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpKeyUp
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpKeyDown
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuKeyUp
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuKeyDown
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpRefresh
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpKeyUp
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpKeyDown
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinShowDataRefresh
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinKeyUp
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinKeyDown
</UL>

<P><STRONG><a name="[326]"></a>TEXT_SetFont</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, TEXT_SetFont.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = TEXT_SetFont &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCreate
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Create
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Callback
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCreate
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCreate
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCreate
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCreate
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCreate
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCreate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinShowHelpInfoCreate
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpRefresh
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinShowDataRefresh
</UL>

<P><STRONG><a name="[325]"></a>TEXT_SetText</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, TEXT_SetText.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = TEXT_SetText &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCreate
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Create
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Callback_Refesh
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCreate
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCreate
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCreate
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCreate
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCreate
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCreate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinShowHelpInfoCreate
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCreate
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Callback_Refesh2
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinShowDataRefresh
</UL>

<P><STRONG><a name="[36a]"></a>TEXT_SetTextAlign</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, TEXT_SetTextAlign.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = TEXT_SetTextAlign &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCreate
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Create
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCreate
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCreate
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCreate
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCreate
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCreate
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCreate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinShowHelpInfoCreate
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCreate
</UL>

<P><STRONG><a name="[327]"></a>TEXT_SetTextColor</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, TEXT_SetTextColor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = TEXT_SetTextColor &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCreate
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Create
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCreate
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCreate
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCreate
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCreate
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCreate
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCreate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinShowHelpInfoCreate
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpRefresh
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinShowDataRefresh
</UL>

<P><STRONG><a name="[374]"></a>TEXT_SetWrapMode</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, TEXT_SetWrapMode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = TEXT_SetWrapMode &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinShowHelpInfoCreate
</UL>

<P><STRONG><a name="[7bf]"></a>TEXT_GetNumLines</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, TEXT_SetWrapMode.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WrapGetNumLines
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
</UL>

<P><STRONG><a name="[7cf]"></a>WIDGET__RotateRect90</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, WIDGET.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WIDGET__RotateRect90
</UL>
<BR>[Called By]<UL><LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillRectEx
<LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawUpRect
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawFocusRect
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
</UL>

<P><STRONG><a name="[7c3]"></a>WIDGET__GetClientRect</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, WIDGET.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = WIDGET__GetClientRect &rArr; WM_GetClientRect
</UL>
<BR>[Calls]<UL><LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[7c4]"></a>WIDGET__GetBkColor</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, WIDGET.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIALOG_GetBkColor
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetBkColor
</UL>

<P><STRONG><a name="[6d0]"></a>WIDGET__GetInsideRect</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, WIDGET.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WIDGET__GetInsideRect
</UL>
<BR>[Calls]<UL><LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
</UL>
<BR>[Called By]<UL><LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[7c8]"></a>WIDGET__GetXSize</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, WIDGET.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[a4c]"></a>WIDGET__GetYSize</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, WIDGET.o(.text), UNUSED)

<P><STRONG><a name="[7ca]"></a>WIDGET__GetWindowSizeX</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, WIDGET.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[69b]"></a>WIDGET_SetState</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, WIDGET.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetState
</UL>

<P><STRONG><a name="[7cb]"></a>WIDGET_GetState</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, WIDGET.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[68c]"></a>WIDGET_OrState</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, WIDGET.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetFocussable
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[68f]"></a>WIDGET_AndState</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, WIDGET.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetFocussable
<LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[695]"></a>WIDGET__Init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, WIDGET.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_CreateIndirect
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateUser
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateUser
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[939]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
</UL>

<P><STRONG><a name="[691]"></a>WIDGET_HandleActive</STRONG> (Thumb, 400 bytes, Stack size 32 bytes, WIDGET.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_Callback
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[73a]"></a>WIDGET__SetScrollState</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, WIDGET.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = WIDGET__SetScrollState &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollState
</UL>
<BR>[Called By]<UL><LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>

<P><STRONG><a name="[7ce]"></a>WIDGET__DrawFocusRect</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, WIDGET.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
</UL>

<P><STRONG><a name="[7d0]"></a>WIDGET__DrawVLine</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, WIDGET.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>

<P><STRONG><a name="[7d1]"></a>WIDGET__DrawHLine</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, WIDGET.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>

<P><STRONG><a name="[7d2]"></a>WIDGET__FillRectEx</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, WIDGET.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
<LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
</UL>

<P><STRONG><a name="[7d4]"></a>WIDGET__DrawTriangle</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, WIDGET.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = WIDGET__DrawTriangle &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
</UL>

<P><STRONG><a name="[7d5]"></a>WIDGET__EFFECT_DrawDownRect</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, WIDGET.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = WIDGET__EFFECT_DrawDownRect &rArr; _EffectRequiresRedraw &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
<LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EffectRequiresRedraw
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
</UL>

<P><STRONG><a name="[6d6]"></a>WIDGET__EFFECT_DrawDown</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, WIDGET.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = WIDGET__EFFECT_DrawDown &rArr; WIDGET__EFFECT_DrawDownRect &rArr; _EffectRequiresRedraw &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
</UL>
<BR>[Called By]<UL><LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[7d6]"></a>WIDGET__EFFECT_DrawUpRect</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, WIDGET.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
<LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Screen2Client
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[381]"></a>WIDGET_SetDefaultEffect</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, WIDGET.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCreate
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCreate
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
</UL>

<P><STRONG><a name="[8cc]"></a>WIDGET_GetDefaultEffect</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, WIDGET.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
</UL>

<P><STRONG><a name="[a4d]"></a>WIDGET_EFFECT_Simple_SetColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, WIDGET_Effect_Simple.o(.text), UNUSED)

<P><STRONG><a name="[a4e]"></a>WIDGET_EFFECT_Simple_GetColor</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, WIDGET_Effect_Simple.o(.text), UNUSED)

<P><STRONG><a name="[a4f]"></a>WIDGET_EFFECT_Simple_GetNumColors</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, WIDGET_Effect_Simple.o(.text), UNUSED)

<P><STRONG><a name="[33e]"></a>WIDGET_SetEffect</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, WIDGET_SetEffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = WIDGET_SetEffect &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM__GetClientRectEx &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCreate
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCreate
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCreate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[103]"></a>WINDOW_Callback</STRONG> (Thumb, 290 bytes, Stack size 32 bytes, WINDOW.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = WINDOW_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestorOrSelf
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasFocus
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WINDOW.o(.text)
</UL>
<P><STRONG><a name="[7da]"></a>WINDOW_SetBkColor</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, WINDOW.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[7db]"></a>WINDOW_CreateUser</STRONG> (Thumb, 10 bytes, Stack size 32 bytes, WINDOW.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[a50]"></a>WINDOW_CreateEx</STRONG> (Thumb, 6 bytes, Stack size 32 bytes, WINDOW.o(.text), UNUSED)

<P><STRONG><a name="[159]"></a>WINDOW_CreateIndirect</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, WINDOW.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = WINDOW_CreateIndirect &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewindlg.o(.constdata)
</UL>
<P><STRONG><a name="[7dd]"></a>WINDOW_SetUserData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, WINDOW.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
</UL>

<P><STRONG><a name="[7de]"></a>WINDOW_GetUserData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, WINDOW.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
</UL>

<P><STRONG><a name="[7e1]"></a>WM__InvalidateParent</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>

<P><STRONG><a name="[7e5]"></a>WM__Invalidate1Abs</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[7e6]"></a>WM__ClipAtParentBorders</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__ClipAtParentBorders
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
</UL>
<BR>[Called By]<UL><LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>

<P><STRONG><a name="[7e7]"></a>WM__ActivateClipRect</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
</UL>

<P><STRONG><a name="[7e8]"></a>WM__InsertWindowIntoList</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__InsertWindowIntoList
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[7e9]"></a>WM__RemoveWindowFromList</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__RemoveWindowFromList
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
</UL>

<P><STRONG><a name="[7ea]"></a>WM__DetachWindow</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = WM__DetachWindow &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[7eb]"></a>WM__Client2Screen</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>

<P><STRONG><a name="[7ec]"></a>WM__IsWindow</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__IsWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
</UL>

<P><STRONG><a name="[7ed]"></a>WM__InvalidateDrawAndDescs</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92 + In Cycle
<LI>Call Chain = WM__InvalidateDrawAndDescs &rArr;  WM__InvalidateDrawAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[7ee]"></a>WM_InvalidateWindowAndDescsEx</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + In Cycle
<LI>Call Chain = WM_InvalidateWindowAndDescsEx &rArr;  WM_InvalidateWindowAndDescsEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[7e2]"></a>WM__InvalidateRect</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + In Cycle
<LI>Call Chain = WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[7e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateParent
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
</UL>

<P><STRONG><a name="[7ef]"></a>WM__InvalidateRectEx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[a51]"></a>WM__RectIsNZ</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, WM.o(.text), UNUSED)

<P><STRONG><a name="[6bf]"></a>WM_SendMessage</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM__GetClientRectEx &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDialogStatusPtr
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetDialogStatusPtr
<LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollState
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetBkColor
<LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTimer
<LI><a href="#[8f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocussable
<LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[7f4]"></a>WM__SendMsgNoData</STRONG> (Thumb, 18 bytes, Stack size 24 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM__GetClientRectEx &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[7c7]"></a>WM__GetClientRectWin</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[8e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[74a]"></a>WM_InvalidateRect</STRONG> (Thumb, 192 bytes, Stack size 40 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[698]"></a>WM_InvalidateWindow</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColorEx
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetBarColor
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetActive
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetBkColor
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_EnableInversion
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkinClassic
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetTextOffset
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetFont
<LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetWrapMode
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetSkin
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetBarColor
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetClientColor
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextMode
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFont
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_EnableBlink
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_SetBkColor
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ClrHasTrans
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_EnableCellSelect
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSelCol
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetColor
<LI><a href="#[80c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbInvalidateOne
<LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
<LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextAlign
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[8cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetFont
<LI><a href="#[8d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDirIndicator
<LI><a href="#[8cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DeleteItem
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkin
<LI><a href="#[8af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetSkinFlexButtonSize
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetSkin
<LI><a href="#[970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetSkin
<LI><a href="#[936]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[93e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetState
<LI><a href="#[93d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetPageSize
<LI><a href="#[93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetNumItems
<LI><a href="#[939]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetSkin
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetFont
</UL>

<P><STRONG><a name="[694]"></a>WM_CreateWindowAsChild</STRONG> (Thumb, 324 bytes, Stack size 64 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_CreateIndirect
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateUser
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateUser
<LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindow
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[939]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
</UL>

<P><STRONG><a name="[7f7]"></a>WM_CreateWindow</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[34f]"></a>WM_DeleteWindow</STRONG> (Thumb, 216 bytes, Stack size 40 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + In Cycle
<LI>Call Chain = WM_DeleteWindow &rArr;  WM_DeleteWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuDestroy
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkDestroy
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeDestroy
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageDestroy
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputDestroy
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Destroy
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpDestroy
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuDestroy
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuDestroy
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumDestroy
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumDestroy
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumDestroy
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageDestroy
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenDestroy
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseDestroy
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosDestroy
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesDestroy
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenDestroy
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseDestroy
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenDestroy
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseDestroy
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenDestroy
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseDestroy
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectDestroy
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserDestroy
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuDestroy
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuDestroy
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpDestroy
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinShowHelpInfoDestroy
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoDestroy
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewDestroy
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxDestroy
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinDestroy
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageFresh
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectFresh
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[6e7]"></a>WM_SelectWindow</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM_SelectWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>

<P><STRONG><a name="[8ea]"></a>WM_GetActiveWindow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
</UL>

<P><STRONG><a name="[599]"></a>WM__GetNextIVR</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLineTo
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLineRel
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientRoundedH
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteOpaqueAt
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedRect
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientRoundedV
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawArc
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillEllipse
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawEllipse
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawRoundedRect
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillEllipse
<LI><a href="#[822]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillPolygon
<LI><a href="#[81f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPoint
<LI><a href="#[819]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[875]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__FillTrippleArc
<LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[598]"></a>WM__InitIVRSearch</STRONG> (Thumb, 358 bytes, Stack size 48 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLineTo
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLineRel
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientRoundedH
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteOpaqueAt
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedRect
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientRoundedV
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawArc
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillEllipse
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawEllipse
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawRoundedRect
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillEllipse
<LI><a href="#[822]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillPolygon
<LI><a href="#[81f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPoint
<LI><a href="#[819]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[875]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__FillTrippleArc
<LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[7fa]"></a>WM_SetDefault</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>
<BR>[Called By]<UL><LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>

<P><STRONG><a name="[105]"></a>WM__Paint1</STRONG> (Thumb, 198 bytes, Stack size 48 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = WM__Paint1 &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WM.o(.text)
</UL>
<P><STRONG><a name="[7ff]"></a>WM__Paint</STRONG> (Thumb, 218 bytes, Stack size 40 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
</UL>

<P><STRONG><a name="[6c7]"></a>WM__DeleteSecure</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[804]"></a>WM_Exec1</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
</UL>

<P><STRONG><a name="[614]"></a>WM_Exec</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec1
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
</UL>

<P><STRONG><a name="[680]"></a>WM_Activate</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>

<P><STRONG><a name="[67c]"></a>WM_Deactivate</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>

<P><STRONG><a name="[32b]"></a>WM_DefaultProc</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM_DefaultProc &rArr; WM__GetClientRectEx &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[806]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCallback
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCallback
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCallback
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCallback
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCallback
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Callback
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCallback
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCallback
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuCallback
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCallback
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCallback
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCallback
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCallback
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCallback
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCallback
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCallback
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCallback
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCallback
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCallback
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCallback
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCallback
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCallback
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCallback
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCallback
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCallback
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCallback
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCallback
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCallback
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinShowHelpInfoCallback
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCallback
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCallback
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListCallback
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCallback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_Callback
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[5e2]"></a>WM_Init</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = WM_Init &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[809]"></a>WM_GetWindowInfo</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[80a]"></a>WM_SetEnableState</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, WM_EnableWindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = WM_SetEnableState &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM__GetClientRectEx &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableWindow
</UL>

<P><STRONG><a name="[37d]"></a>WM_EnableWindow</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, WM_EnableWindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = WM_EnableWindow &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM__GetClientRectEx &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2KeyENTER_BEF
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpKeyENTER_BEF
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpKeyENTER_BEF
</UL>

<P><STRONG><a name="[37c]"></a>WM_DisableWindow</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, WM_EnableWindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = WM_DisableWindow &rArr; WM_SetEnableState &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM__GetClientRectEx &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
</UL>
<BR>[Called By]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2KeyENTER_BEF
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpKeyENTER_BEF
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpKeyENTER_BEF
</UL>

<P><STRONG><a name="[2ea]"></a>WM_GetDesktopWindow</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, WM_GetDesktopWindow.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuDestroy
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkDestroy
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCreate
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeDestroy
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageDestroy
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCreate
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputDestroy
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Destroy
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Create
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpDestroy
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCreate
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuDestroy
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCreate
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuDestroy
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuCreate
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumDestroy
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumDestroy
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumDestroy
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageDestroy
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenDestroy
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseDestroy
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosDestroy
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesDestroy
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenDestroy
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseDestroy
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenDestroy
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCreate
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseDestroy
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCreate
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenDestroy
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseDestroy
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectDestroy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCreate
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserDestroy
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCreate
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuDestroy
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuDestroy
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpDestroy
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinShowHelpInfoDestroy
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinShowHelpInfoCreate
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoDestroy
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewDestroy
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCreate
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxDestroy
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxCreate
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinDestroy
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DataRefresh
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskGUI
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[3ad]"></a>WM_GetDialogItem</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, WM_GetDialogItem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageFresh
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectFresh
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarColor
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
<LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
</UL>

<P><STRONG><a name="[357]"></a>WM_GetFirstChild</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, WM_GetFirstChild.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetFirstChild
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Create
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCreate
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCreate
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCreate
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCreate
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCreate
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCreate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinShowHelpInfoCreate
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCreate
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxCreate
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageFresh
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectFresh
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpRefresh
<LI><a href="#[80c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[329]"></a>WM_GetId</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, WM_GetId.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = WM_GetId &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM__GetClientRectEx &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCallback
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
</UL>

<P><STRONG><a name="[30e]"></a>WM_HasFocus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, WM_HasFocus.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OwnerDraw
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[323]"></a>WM_HideWindow</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, WM_Hide.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = WM_HideWindow &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpRefresh
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinShowDataRefresh
<LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[34e]"></a>WM_SetCallback</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, WM_SetCallback.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuDestroy
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkDestroy
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCreate
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeDestroy
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageDestroy
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCreate
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputDestroy
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Destroy
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Create
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpDestroy
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCreate
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuDestroy
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCreate
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuDestroy
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuCreate
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumDestroy
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumDestroy
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumDestroy
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageDestroy
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenDestroy
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseDestroy
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosDestroy
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesDestroy
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenDestroy
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseDestroy
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenDestroy
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCreate
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseDestroy
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCreate
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenDestroy
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseDestroy
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectDestroy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCreate
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserDestroy
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCreate
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuDestroy
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuDestroy
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpDestroy
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinShowHelpInfoDestroy
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinShowHelpInfoCreate
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoDestroy
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewDestroy
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCreate
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxDestroy
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxCreate
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinDestroy
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
</UL>

<P><STRONG><a name="[2eb]"></a>WM_SetFocus</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, WM_SetFocus.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM__GetClientRectEx &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCreate
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Create
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCreate
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCreate
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCreate
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCreate
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCreate
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCreate
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCreate
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListKeyDown
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DataRefresh
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskGUI
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[80c]"></a>WM_InvalidateWindowAndDescs</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, WM_Show.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + In Cycle
<LI>Call Chain = WM_InvalidateWindowAndDescs &rArr;  WM_InvalidateWindowAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[80c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[80c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
</UL>

<P><STRONG><a name="[321]"></a>WM_ShowWindow</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, WM_Show.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = WM_ShowWindow &rArr; WM_InvalidateWindowAndDescs &rArr;  WM_InvalidateWindowAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[80c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpRefresh
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinShowDataRefresh
</UL>

<P><STRONG><a name="[7f8]"></a>WM__DeleteAssocTimer</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, WM_Timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = WM__DeleteAssocTimer &rArr; GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[80e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimerLin
<LI><a href="#[80d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetFirstTimer
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[350]"></a>WM_DeleteTimer</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, WM_Timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = WM_DeleteTimer &rArr; GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeDestroy
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Destroy
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpDestroy
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumDestroy
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumDestroy
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumDestroy
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageDestroy
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosDestroy
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuDestroy
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuDestroy
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpDestroy
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoDestroy
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinDestroy
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_EnableBlink
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[34d]"></a>WM_CreateTimer</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, WM_Timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = WM_CreateTimer &rArr; GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[811]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Create
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCreate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_EnableBlink
<LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[328]"></a>WM_RestartTimer</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, WM_Timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = WM_RestartTimer &rArr; GUI_TIMER_Restart &rArr; _Link
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[811]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[812]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCallback
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCallback
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Callback
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCallback
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCallback
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCallback
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCallback
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCallback
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCallback
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCallback
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCallback
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCallback
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCallback
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCallback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[813]"></a>WM_GetTimerId</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, WM_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[aa]"></a>LCD_Index2Color_555</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, GUICC_555_Index2Color.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> GUI_DrawBitmap_555.o(.text)
<LI> GUI_DrawBitmap_555.o(.rodata)
</UL>
<P><STRONG><a name="[ac]"></a>LCD_Index2Color_8888</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, GUICC_8888_Index2Color.o(.text))
<BR>[Address Reference Count : 5]<UL><LI> GUI_DrawBitmap_8888.o(.text)
<LI> GUI_DrawBitmap_8888.o(.rodata)
<LI> GUICC_8888.o(.rodata)
<LI> GUI__Alpha.o(.text)
<LI> GUIDEV_WriteToActiveAlpha.o(.text)
</UL>
<P><STRONG><a name="[124]"></a>LCD_Index2Color_888</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, GUICC_888_Index2Color.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> GUICC_888.o(.rodata)
<LI> GUI__Alpha.o(.text)
</UL>
<P><STRONG><a name="[ab]"></a>LCD_Index2Color_M555</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, GUICC_M555_Index2Color.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> GUI_DrawBitmap_555.o(.text)
<LI> GUI_DrawBitmap_555.o(.rodata)
</UL>
<P><STRONG><a name="[ad]"></a>LCD_Index2Color_M8888I</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, GUICC_M8888I_Index2Color.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> GUI_DrawBitmap_8888.o(.text)
<LI> GUI_DrawBitmap_8888.o(.rodata)
</UL>
<P><STRONG><a name="[60b]"></a>GUI_MoveRel</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, GUI_2DLib.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLineRel
</UL>

<P><STRONG><a name="[60f]"></a>GL_MoveTo</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_2DLib.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLineTo
</UL>

<P><STRONG><a name="[a52]"></a>GUI_MoveTo</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, GUI_2DLib.o(.text), UNUSED)

<P><STRONG><a name="[6ac]"></a>GUI_DrawRect</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, GUI_2DLib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>

<P><STRONG><a name="[630]"></a>GUI_AddDecMin</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, GUI_AddDecMin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_AddDecMin &rArr; GUI_AddDecShift
</UL>
<BR>[Calls]<UL><LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Long2Len
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecSpace
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecMin
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
</UL>

<P><STRONG><a name="[633]"></a>GUI_Long2Len</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, GUI_AddDecShift.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecSpace
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
</UL>

<P><STRONG><a name="[62d]"></a>GUI_AddSign</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, GUI_AddDecShift.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDecShift
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDec
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateBuffer
</UL>

<P><STRONG><a name="[62e]"></a>GUI_AddDecShift</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, GUI_AddDecShift.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDecShift
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDec
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateBuffer
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
</UL>

<P><STRONG><a name="[816]"></a>GUI__GetLineNumChars</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, GUI_CharLine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[815]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
</UL>

<P><STRONG><a name="[817]"></a>GUI__GetOverlap</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, GUI_CharLine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__GetOverlap
</UL>
<BR>[Calls]<UL><LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
</UL>

<P><STRONG><a name="[616]"></a>GUI__GetLineDistX</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, GUI_CharLine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI__GetLineDistX &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[815]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[819]"></a>GUI__DispLine</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, GUI_CharLine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[185]"></a>GUIMONO_DispChar</STRONG> (Thumb, 306 bytes, Stack size 80 bytes, GUI_CharM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUIMONO_DispChar &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> F6x8.o(.rodata)
</UL>
<P><STRONG><a name="[186]"></a>GUIMONO_GetCharDistX</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, GUI_CharM.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> F6x8.o(.rodata)
</UL>
<P><STRONG><a name="[187]"></a>GUIMONO_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_CharM.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> F6x8.o(.rodata)
</UL>
<P><STRONG><a name="[188]"></a>GUIMONO_IsInFont</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, GUI_CharM.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> F6x8.o(.rodata)
</UL>
<P><STRONG><a name="[743]"></a>GUI_ClearRectEx</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, GUI_ClearRectEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_ClearRectEx &rArr; GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
</UL>
<BR>[Called By]<UL><LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_OwnerDraw
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[5e9]"></a>GUI_DispString</STRONG> (Thumb, 260 bytes, Stack size 48 bytes, GUI_DispString.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
<LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[819]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
</UL>
<BR>[Called By]<UL><LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDecShift
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDec
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecSpace
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
</UL>

<P><STRONG><a name="[81a]"></a>GUI__DispStringInRect</STRONG> (Thumb, 326 bytes, Stack size 64 bytes, GUI_DispStringInRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[81b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__HandleEOLine
<LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[819]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
</UL>

<P><STRONG><a name="[81c]"></a>GUI_DispStringInRectMax</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, GUI_DispStringInRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
</UL>

<P><STRONG><a name="[6b1]"></a>GUI_DispStringInRect</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_DispStringInRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
</UL>

<P><STRONG><a name="[7c0]"></a>GUI_WrapGetNumLines</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, GUI_DispStringInRectWrap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = GUI_WrapGetNumLines &rArr; GUI__WrapGetNumBytesToNextLine &rArr; GUI__WrapGetNumCharsToNextLine &rArr; _WrapGetNumCharsDisp &rArr; GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[81d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
</UL>
<BR>[Called By]<UL><LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_GetNumLines
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>

<P><STRONG><a name="[78e]"></a>GUI_DispStringInRectWrap</STRONG> (Thumb, 298 bytes, Stack size 64 bytes, GUI_DispStringInRectWrap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_DispStringInRectWrap &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WrapGetNumLines
<LI><a href="#[81e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsDisp
<LI><a href="#[81d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
<LI><a href="#[819]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_OwnerDraw
</UL>

<P><STRONG><a name="[6b2]"></a>GUI_DrawFocusRect</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, GUI_DrawFocusRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_DrawFocusRect &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawFocusRect
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
</UL>

<P><STRONG><a name="[6b5]"></a>GUI_DrawHLine</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, GUI_DrawHLine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawVLine
<LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawTriangle
<LI><a href="#[7d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawHLine
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraspV
<LI><a href="#[971]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>

<P><STRONG><a name="[601]"></a>GL_DrawPoint</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, GUI_DrawPoint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GL_DrawPoint &rArr; GL_FillCircle &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
</UL>

<P><STRONG><a name="[81f]"></a>GUI_DrawPoint</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, GUI_DrawPoint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircle
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>

<P><STRONG><a name="[6b6]"></a>GUI_DrawVLine</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, GUI_DrawVLine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_DrawVLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawVLine
<LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawTriangle
<LI><a href="#[7d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawHLine
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraspH
<LI><a href="#[971]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>

<P><STRONG><a name="[1f]"></a>GUIPROP_EXT__ClearLine</STRONG> (Thumb, 220 bytes, Stack size 40 bytes, GUI_EncExt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GUIPROP_EXT__ClearLine &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__FindChar
<LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
<LI><a href="#[815]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_EncExt.o(.data)
</UL>
<P><STRONG><a name="[821]"></a>GUIPROP_EXT__DispLine</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, GUI_EncExt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[815]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>

<P><STRONG><a name="[a53]"></a>GUIPROP_EXT__SetfpClearLine</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_EncExt.o(.text), UNUSED)

<P><STRONG><a name="[608]"></a>GL_FillPolygon</STRONG> (Thumb, 456 bytes, Stack size 56 bytes, GUI_FillPolygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GL_FillPolygon
</UL>
<BR>[Called By]<UL><LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
<LI><a href="#[822]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillPolygon
</UL>

<P><STRONG><a name="[822]"></a>GUI_FillPolygon</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, GUI_FillPolygon.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>

<P><STRONG><a name="[6b7]"></a>GUI_FillRect</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, GUI_FillRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_FillRect &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
</UL>

<P><STRONG><a name="[7d3]"></a>GUI_FillRectEx</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, GUI_FillRectEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_FillRectEx &rArr; GUI_FillRect &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillRectEx
</UL>

<P><STRONG><a name="[6ab]"></a>GUI_GetClientRect</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_GetClientRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = GUI_GetClientRect &rArr; WM_GetClientRect
</UL>
<BR>[Calls]<UL><LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[823]"></a>GUI_GetBkColorIndex</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_GetColor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBkColorIndex
</UL>

<P><STRONG><a name="[5cd]"></a>GUI_GetBkColor</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, GUI_GetColor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_GetBkColor &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBkColorIndex
<LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
</UL>

<P><STRONG><a name="[826]"></a>GUI_GetColorIndex</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_GetColor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
</UL>

<P><STRONG><a name="[5cc]"></a>GUI_GetColor</STRONG> (Thumb, 6 bytes, Stack size 8 bytes, GUI_GetColor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_GetColor
</UL>
<BR>[Calls]<UL><LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRounded
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
</UL>

<P><STRONG><a name="[7a7]"></a>GUI_GetFontSizeY</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_GetFontSizeY.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetFontSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
</UL>

<P><STRONG><a name="[702]"></a>GUI_GetYSizeOfFont</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI_GetYSizeOfFont.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
</UL>

<P><STRONG><a name="[757]"></a>GUI_GetYDistOfFont</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_GetYSizeOfFont.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[8cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetFont
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
</UL>

<P><STRONG><a name="[7ac]"></a>GUI_MergeRect</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, GUI_MergeRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MergeRect &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[7e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[6b0]"></a>GUI_MoveRect</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, GUI_MoveRect.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Screen2Client
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
<LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[94a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>

<P><STRONG><a name="[6d8]"></a>GUI_ALLOC_Realloc</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, GUI_Realloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
</UL>

<P><STRONG><a name="[7f1]"></a>GUI_RectsIntersect</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, GUI_RectsIntersect.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[7d8]"></a>GUI_SaveContext_W</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_SaveContext.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_SaveContext_W &rArr; [Anonymous Symbol] &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[7d9]"></a>GUI_RestoreContext</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, GUI_SaveContext.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[677]"></a>GUI_SelectLCD</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, GUI_SelectLCD.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_SelectLCD &rArr; LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
</UL>

<P><STRONG><a name="[838]"></a>GUI__AlphaPreserveTrans</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__AlphaPreserveTrans
</UL>
<BR>[Calls]<UL><LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AA_SetAndMask
</UL>
<BR>[Called By]<UL><LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[10c]"></a>GUI_SetAlpha</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = GUI_SetAlpha &rArr; _InitAlpha &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDevice
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[839]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__SetAlphaCallback
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
</UL>
<BR>[Called By]<UL><LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAlpha
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[83a]"></a>GUI_SetBkColorIndex</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, GUI_SetColorIndex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
</UL>

<P><STRONG><a name="[5f8]"></a>GUI_SetColorIndex</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, GUI_SetColorIndex.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW_8888
</UL>

<P><STRONG><a name="[7fb]"></a>GL_SetDefault</STRONG> (Thumb, 4 bytes, Stack size 8 bytes, GUI_SetDefault.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GL_SetDefault &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDefault
</UL>

<P><STRONG><a name="[a54]"></a>GUI_SetDefault</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, GUI_SetDefault.o(.text), UNUSED)

<P><STRONG><a name="[5ea]"></a>GUI_SetDrawMode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_SetDrawMode.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[5e1]"></a>GUI_SetOrg</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, GUI_SetOrg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[6ce]"></a>LCD_SetPixelIndex</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, GUI_SetPixelIndex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvertRect
</UL>

<P><STRONG><a name="[864]"></a>GUI_TIMER__IsActive</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
</UL>

<P><STRONG><a name="[85f]"></a>GUI_TIMER__GetPeriod</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
</UL>

<P><STRONG><a name="[860]"></a>GUI_TIMER__GetNextTimer</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[80d]"></a>GUI_TIMER__GetFirstTimer</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, GUI_Timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_TIMER__GetFirstTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[80e]"></a>GUI_TIMER__GetNextTimerLin</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, GUI_Timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_TIMER__GetNextTimerLin
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[11e]"></a>GUI_TIMER_Exec</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, GUI_Timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER_Exec &rArr; GUI_GetTime &rArr; GUI_X_GetTime &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_Timer.o(.text)
</UL>
<P><STRONG><a name="[810]"></a>GUI_TIMER_Create</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, GUI_Timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
</UL>

<P><STRONG><a name="[724]"></a>GUI_TIMER_Delete</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, GUI_Timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE__FreeAttached
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_Callback
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[811]"></a>GUI_TIMER_SetPeriod</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, GUI_Timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_TIMER_SetPeriod
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
</UL>

<P><STRONG><a name="[861]"></a>GUI_TIMER_GetPeriod</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[862]"></a>GUI_TIMER_SetTime</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[863]"></a>GUI_TIMER_SetDelay</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, GUI_Timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
</UL>

<P><STRONG><a name="[812]"></a>GUI_TIMER_Restart</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, GUI_Timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER_Restart &rArr; _Link
</UL>
<BR>[Calls]<UL><LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
</UL>

<P><STRONG><a name="[80f]"></a>GUI_TIMER_GetFlag</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, GUI_Timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_TIMER_GetFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[6db]"></a>GUI_UC_GetCharSize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI_UC.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorPosChar
</UL>

<P><STRONG><a name="[6e4]"></a>GUI_UC_GetCharCode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI_UC.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__GetCurrentChar
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorPosChar
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorCharacter
</UL>

<P><STRONG><a name="[6df]"></a>GUI_UC_Encode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI_UC.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeCharacter
</UL>

<P><STRONG><a name="[6de]"></a>GUI_UC__CalcSizeOfChar</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI_UC.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeCharacter
</UL>

<P><STRONG><a name="[815]"></a>GUI_UC__GetCharCodeInc</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, GUI_UC.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[821]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__DispLine
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
<LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorPosX
<LI><a href="#[921]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWordWrap
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCharWrap
</UL>

<P><STRONG><a name="[6da]"></a>GUI_UC__NumChars2NumBytes</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, GUI_UC.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__NumChars2NumBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__GetCurrentChar
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetText
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[81d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[921]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
</UL>

<P><STRONG><a name="[876]"></a>GUI_UC__NumBytes2NumChars</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, GUI_UC.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__NumBytes2NumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorPosChar
</UL>

<P><STRONG><a name="[a55]"></a>GUI_UC_SetEncodeNone</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_UC_EncodeNone.o(.text), UNUSED)

<P><STRONG><a name="[a56]"></a>GUI_SetSignalEventFunc</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_WaitEvent.o(.text), UNUSED)

<P><STRONG><a name="[a57]"></a>GUI_SetWaitEventFunc</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_WaitEvent.o(.text), UNUSED)

<P><STRONG><a name="[a58]"></a>GUI_SetWaitEventTimedFunc</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_WaitEvent.o(.text), UNUSED)

<P><STRONG><a name="[618]"></a>GUI_SignalEvent</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_WaitEvent.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKeyMsg
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[7e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
</UL>

<P><STRONG><a name="[6cb]"></a>GUI_WaitEvent</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, GUI_WaitEvent.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__IsActive
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
</UL>
<BR>[Called By]<UL><LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[20]"></a>GUI__MixColorsBulk</STRONG> (Thumb, 158 bytes, Stack size 36 bytes, GUI__Alpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GUI__MixColorsBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI__Alpha.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>GUI__MixColors</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, GUI__Alpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelAlphaMask
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelAlpha
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
<LI><a href="#[887]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP_DDB
<LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[965]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[963]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
<LI><a href="#[962]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmap
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI__Alpha.o(.data)
</UL>
<P><STRONG><a name="[865]"></a>GUI__DoAlphaBlending</STRONG> (Thumb, 436 bytes, Stack size 88 bytes, GUI__Alpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[86a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ExpandPixelIndicesEx
<LI><a href="#[869]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRectEx
<LI><a href="#[867]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
</UL>

<P><STRONG><a name="[866]"></a>GUI__GetAlphaBuffer</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, GUI__Alpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[86b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AllocAlphaBuffer
</UL>

<P><STRONG><a name="[86b]"></a>GUI__AllocAlphaBuffer</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, GUI__Alpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI__AllocAlphaBuffer &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
</UL>

<P><STRONG><a name="[a59]"></a>GUI__SetAlphaBufferSize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI__Alpha.o(.text), UNUSED)

<P><STRONG><a name="[a5a]"></a>GUI_SetFuncAlphaBlending</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI__Alpha.o(.text), UNUSED)

<P><STRONG><a name="[a5b]"></a>GUI_SetFuncMixColors</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI__Alpha.o(.text), UNUSED)

<P><STRONG><a name="[a5c]"></a>GUI_SetFuncMixColorsBulk</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI__Alpha.o(.text), UNUSED)

<P><STRONG><a name="[a5d]"></a>GUI_SetFuncDrawAlpha</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, GUI__Alpha.o(.text), UNUSED)

<P><STRONG><a name="[6d1]"></a>GUI__CalcTextRect</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, GUI__CalcTextRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GUI__CalcTextRect &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[5ee]"></a>GUI__DrawBitmap16bpp</STRONG> (Thumb, 552 bytes, Stack size 72 bytes, GUI__DrawBitmap16bpp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = GUI__DrawBitmap16bpp &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNextPixelAPI
<LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[873]"></a>GUI__DrawTwinArc2</STRONG> (Thumb, 92 bytes, Stack size 56 bytes, GUI__DrawTwinArc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = GUI__DrawTwinArc2 &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc2
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
</UL>

<P><STRONG><a name="[6b4]"></a>GUI__DrawTwinArc4</STRONG> (Thumb, 98 bytes, Stack size 64 bytes, GUI__DrawTwinArc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI__DrawTwinArc4 &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[86f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc4
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>

<P><STRONG><a name="[875]"></a>GUI__FillTrippleArc</STRONG> (Thumb, 100 bytes, Stack size 56 bytes, GUI__DrawTwinArc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillTrippleArc
</UL>

<P><STRONG><a name="[6d4]"></a>GUI__GetCursorPosX</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI__GetCursorPos.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[6ec]"></a>GUI__GetCursorPosChar</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI__GetCursorPos.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
</UL>

<P><STRONG><a name="[6d2]"></a>GUI__GetCursorCharacter</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, GUI__GetCursorPos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__GetCursorCharacter
</UL>
<BR>[Called By]<UL><LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[615]"></a>GUI__GetNumChars</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, GUI__GetNumChars.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__GetNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[815]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetText
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
</UL>

<P><STRONG><a name="[741]"></a>GUI__IntersectRect</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, GUI__IntersectRect.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[965]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[962]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmap
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[7e4]"></a>GUI__IntersectRects</STRONG> (Thumb, 98 bytes, Stack size 4 bytes, GUI__IntersectRects.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[7e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
</UL>

<P><STRONG><a name="[877]"></a>GUI__ManageCacheEx</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, GUI__ManageCache.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI__ManageCacheEx
</UL>
<BR>[Calls]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
</UL>

<P><STRONG><a name="[805]"></a>GUI__ManageCache</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI__ManageCache.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI__ManageCache &rArr; GUI__ManageCacheEx
</UL>
<BR>[Calls]<UL><LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCacheEx
</UL>
<BR>[Called By]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
</UL>

<P><STRONG><a name="[878]"></a>GUI_SetControlHook</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, GUI__ManageCache.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
</UL>

<P><STRONG><a name="[879]"></a>GUI_SetRefreshHook</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, GUI__ManageCache.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
</UL>

<P><STRONG><a name="[5a1]"></a>GUI__memset</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, GUI__memset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUI__memset
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetDevFunc
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPos
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Exit
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushLine
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect_CX
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GenCheck
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[6ad]"></a>GUI__ReduceRect</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, GUI__ReduceRect.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
</UL>

<P><STRONG><a name="[697]"></a>GUI__SetText</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, GUI__SetText.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GUI__SetText &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strlen
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
</UL>

<P><STRONG><a name="[87b]"></a>GUI__ATan2</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, GUI__SinHQ.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
<LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ASinHQ
</UL>

<P><STRONG><a name="[87c]"></a>GUI__ASinHQ</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, GUI__SinHQ.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ATan2
</UL>

<P><STRONG><a name="[5c6]"></a>GUI__SinHQ</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, GUI__SinHQ.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CosHQ
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[5c7]"></a>GUI__CosHQ</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI__SinHQ.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SinHQ
</UL>
<BR>[Called By]<UL><LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[58f]"></a>GUI__sqrt32</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, GUI__sqrt32.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRoundedRect
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRounded
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillEllipse
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawEllipse
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillEllipse
<LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ATan2
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTrippleArcPara
<LI><a href="#[86f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc4
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc2
</UL>

<P><STRONG><a name="[796]"></a>GUI__strlen</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, GUI__strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>

<P><STRONG><a name="[58d]"></a>LCD_SetDrawMode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_DispChar
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[901]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT_DispChar
</UL>

<P><STRONG><a name="[a9]"></a>LCD_DrawPixel</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, LCD.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRoundedRect
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_Core.o(.text)
</UL>
<P><STRONG><a name="[a8]"></a>LCD_DrawHLine</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, LCD.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRoundedRect
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillEllipse
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawEllipse
<LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillTrippleArc
<LI><a href="#[86f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc4
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc2
</UL>
<BR>[Address Reference Count : 3]<UL><LI> GUI_Core.o(.text)
<LI> GUI_DrawGradientRounded.o(.text)
<LI> GUI_DrawGradient.o(.text)
</UL>
<P><STRONG><a name="[af]"></a>LCD_DrawVLine</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, LCD.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRoundedRect
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
</UL>
<BR>[Address Reference Count : 2]<UL><LI> GUI_DrawGradientRounded.o(.text)
<LI> GUI_DrawGradient.o(.text)
</UL>
<P><STRONG><a name="[5ce]"></a>LCD_FillRect</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, LCD.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
</UL>

<P><STRONG><a name="[87d]"></a>LCD__DrawBitmap_1bpp</STRONG> (Thumb, 460 bytes, Stack size 64 bytes, LCD.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = LCD__DrawBitmap_1bpp &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[5cb]"></a>LCD_DrawBitmap</STRONG> (Thumb, 538 bytes, Stack size 64 bytes, LCD.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[901]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT_DispChar
<LI><a href="#[8a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
</UL>

<P><STRONG><a name="[67e]"></a>LCD_SetClipRectMax</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
</UL>

<P><STRONG><a name="[5db]"></a>LCD_Init</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, LCD.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LCD_Init &rArr; LCD_InitColors &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[5f1]"></a>LCD_Color2Index</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW_8888
<LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvertRect
<LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_NoTrans
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA8_Trans
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA8_NoTrans
</UL>

<P><STRONG><a name="[588]"></a>LCD_Index2Color</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
<LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvertRect
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_NoTrans
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCharAA4_NoTrans
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA8_Trans
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA8_NoTrans
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[83c]"></a>LCD_SetColorIndex</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
<LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
</UL>

<P><STRONG><a name="[83b]"></a>LCD_SetBkColorIndex</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColorIndex
</UL>

<P><STRONG><a name="[5d9]"></a>LCD_SetBkColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_OwnerDraw
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[5da]"></a>LCD_SetColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, LCD.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRounded
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_OwnerDraw
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[5ec]"></a>LCD_AA_SetAndMask</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, LCD_AA.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PreserveTrans
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AlphaPreserveTrans
</UL>

<P><STRONG><a name="[23]"></a>LCD_AA_MixColors16</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, LCD_AA.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_AA_MixColors16 &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 2]<UL><LI> LCD_AA.o(.data)
<LI> LCD_AA.o(.text)
</UL>
<P><STRONG><a name="[a5e]"></a>LCD_AA_MixColors256</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, LCD_AA.o(.text), UNUSED)

<P><STRONG><a name="[a3]"></a>LCD_SetPixelAA4_Trans</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, LCD_AA.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LCD_SetPixelAA4_Trans &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
</UL>
<BR>[Called By]<UL><LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushLine
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCharAA4_Trans
</UL>
<BR>[Address Reference Count : 2]<UL><LI> GUIAA_Lib.o(.text)
<LI> LCD_AA.o(.text)
</UL>
<P><STRONG><a name="[a6]"></a>LCD_SetPixelAA4_NoTrans</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, LCD_AA.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_SetPixelAA4_NoTrans
</UL>
<BR>[Calls]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
</UL>
<BR>[Address Reference Count : 2]<UL><LI> GUIAA_Lib.o(.text)
<LI> LCD_AA.o(.text)
</UL>
<P><STRONG><a name="[129]"></a>LCD_SetPixelAA8_Trans</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, LCD_AA.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LCD_SetPixelAA8_Trans &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LCD_AA.o(.text)
</UL>
<P><STRONG><a name="[128]"></a>LCD_SetPixelAA8_NoTrans</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, LCD_AA.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_SetPixelAA8_NoTrans
</UL>
<BR>[Calls]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LCD_AA.o(.text)
</UL>
<P><STRONG><a name="[5ac]"></a>LCD_AA_SetGamma</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, LCD_AA.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetGammaAA4
</UL>

<P><STRONG><a name="[5ae]"></a>LCD_AA_GetGamma</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, LCD_AA.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_GetGammaAA4
</UL>

<P><STRONG><a name="[5b0]"></a>LCD_AA_EnableGamma</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, LCD_AA.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_EnableGammaAA4
</UL>

<P><STRONG><a name="[a5f]"></a>LCD__GetPfSetPixel</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, LCD_AA.o(.text), UNUSED)

<P><STRONG><a name="[a60]"></a>LCD__SetPaletteConversionHook</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, LCD_Color.o(.text), UNUSED)

<P><STRONG><a name="[880]"></a>LCD_InitColors</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, LCD_Color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = LCD_InitColors &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[589]"></a>LCD_GetpPalConvTableUncached</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, LCD_Color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetpPalConvTableUncached
</UL>
<BR>[Calls]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableBM
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCharAA4_NoTrans
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
</UL>

<P><STRONG><a name="[884]"></a>LCD_GetpPalConvTable</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, LCD_Color.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
</UL>

<P><STRONG><a name="[0]"></a>LCD_GetpPalConvTableBM</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, LCD_Color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetpPalConvTableBM &rArr; LCD_GetpPalConvTableUncached
</UL>
<BR>[Calls]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_Core.o(.data)
</UL>
<P><STRONG><a name="[881]"></a>LCD_InitLUT</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, LCD_Color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LCD_InitLUT &rArr; LCD_SetLUTEntryEx
</UL>
<BR>[Calls]<UL><LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColorsEx
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumLayers
</UL>
<BR>[Called By]<UL><LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[a61]"></a>LCD_SetMaxNumColors</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, LCD_Color.o(.text), UNUSED)

<P><STRONG><a name="[a62]"></a>LCD_GetMaxNumColors</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, LCD_Color.o(.text), UNUSED)

<P><STRONG><a name="[824]"></a>LCD_GetBkColorIndex</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, LCD_GetColorIndex.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColorIndex
</UL>

<P><STRONG><a name="[5f7]"></a>LCD_GetColorIndex</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, LCD_GetColorIndex.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW_8888
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[826]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColorIndex
</UL>

<P><STRONG><a name="[6cd]"></a>LCD_GetPixelIndex</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, LCD_GetP.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
<LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvertRect
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPixelIndex
</UL>

<P><STRONG><a name="[886]"></a>GUI_GetPixelIndex</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, LCD_GetP.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelIndex
</UL>

<P><STRONG><a name="[5ef]"></a>LCD_GetPixelColor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, LCD_GetPixelColor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelIndex
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelAlphaMask
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelAlpha
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA8_Trans
</UL>

<P><STRONG><a name="[7e0]"></a>LCD_SetClipRectEx</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, LCD_SetClipRectEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[67d]"></a>LCD_UpdateColorIndices</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, LCD_UpdateColorIndices.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>

<P><STRONG><a name="[839]"></a>GUI_MEMDEV__SetAlphaCallback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUIDEV_Banding.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
</UL>

<P><STRONG><a name="[800]"></a>GUI_MEMDEV_Draw</STRONG> (Thumb, 328 bytes, Stack size 56 bytes, GUIDEV_Banding.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeEx
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeEx
<LI><a href="#[890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[891]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
<LI><a href="#[892]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
<LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
</UL>

<P><STRONG><a name="[729]"></a>GUI_MEMDEV_Clear</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, GUIDEV_Clear.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MEMDEV_Clear
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_Callback
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[82c]"></a>GUI_MEMDEV_GetDataPtr</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, GUIDEV_GetDataPtr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MEMDEV_GetDataPtr
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
<LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
</UL>

<P><STRONG><a name="[720]"></a>GUI_MEMDEV_GetXPos</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, GUIDEV_GetPos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MEMDEV_GetXPos
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTiled
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
</UL>

<P><STRONG><a name="[721]"></a>GUI_MEMDEV_GetYPos</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, GUIDEV_GetPos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MEMDEV_GetYPos
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTiled
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
</UL>

<P><STRONG><a name="[82b]"></a>GUI_MEMDEV_GetXSize</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, GUIDEV_GetXSize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MEMDEV_GetXSize
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
</UL>

<P><STRONG><a name="[890]"></a>GUI_MEMDEV_GetYSize</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, GUIDEV_GetYSize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MEMDEV_GetYSize
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
</UL>

<P><STRONG><a name="[728]"></a>GUI_MEMDEV_SetOrg</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, GUIDEV_SetOrg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_MEMDEV_SetOrg
</UL>
<BR>[Calls]<UL><LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_Callback
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[104]"></a>GUI_MEMDEV_Paint1Static</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, GUIDEV_StaticDevices.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = GUI_MEMDEV_Paint1Static &rArr; _CreateStaticDevice &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WM.o(.text)
</UL>
<P><STRONG><a name="[89b]"></a>GUI_MEMDEV__CreateStatic</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, GUIDEV_StaticDevices.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[a63]"></a>GUI_MEMDEV_CreateStatic</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, GUIDEV_StaticDevices.o(.text), UNUSED)

<P><STRONG><a name="[89d]"></a>GUI_MEMDEV_GetWindowDevice</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, GUIDEV_StaticDevices.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
</UL>

<P><STRONG><a name="[89e]"></a>GUI_MEMDEV_GetStaticDevice</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, GUIDEV_StaticDevices.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[89f]"></a>GUI_MEMDEV_CreateWindowDevice</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, GUIDEV_StaticDevices.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>

<P><STRONG><a name="[8a0]"></a>GUI_USAGE_Select</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, GUIDEV_Usage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[678]"></a>GUI_USAGE_DecUseCnt</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, GUIDEV_Usage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = GUI_USAGE_DecUseCnt &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
</UL>

<P><STRONG><a name="[684]"></a>GUI_USAGE_AddRect</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, GUIDEV_Usage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_USAGE_AddRect
</UL>
<BR>[Called By]<UL><LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MarkDirty
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[674]"></a>GUI_USAGE_BM_Create</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, GUIDEV_UsageBM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[681]"></a>GUI_MEMDEV__WriteToActiveOpaque</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, GUIDEV_WriteToActiveOpaque.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>
<BR>[Called By]<UL><LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteOpaqueAt
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[6a5]"></a>BUTTON__SetDrawObj</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, BUTTON__SetBitmapObj.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = BUTTON__SetDrawObj &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Called By]<UL><LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[8a8]"></a>CHECKBOX_SetSkin</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, CHECKBOX_Skin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[a64]"></a>CHECKBOX_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, CHECKBOX_Skin.o(.text), UNUSED)

<P><STRONG><a name="[1d]"></a>CHECKBOX_DrawSkinFlex</STRONG> (Thumb, 230 bytes, Stack size 48 bytes, CHECKBOX_SkinFlex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = CHECKBOX_DrawSkinFlex &rArr; _DrawBitmap &rArr; _GenCheck &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>
<BR>[Address Reference Count : 1]<UL><LI> CHECKBOX.o(.data)
</UL>
<P><STRONG><a name="[a65]"></a>CHECKBOX_SetSkinFlexProps</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, CHECKBOX_SkinFlex.o(.text), UNUSED)

<P><STRONG><a name="[a66]"></a>CHECKBOX_GetSkinFlexProps</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, CHECKBOX_SkinFlex.o(.text), UNUSED)

<P><STRONG><a name="[8ae]"></a>CHECKBOX_GetSkinFlexButtonSize</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, CHECKBOX_SkinFlex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[8af]"></a>CHECKBOX_SetSkinFlexButtonSize</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, CHECKBOX_SkinFlex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[8b0]"></a>FRAMEWIN_SetSkin</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, FRAMEWIN_Skin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[a67]"></a>FRAMEWIN_SetDefaultSkin</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, FRAMEWIN_Skin.o(.text), UNUSED)

<P><STRONG><a name="[a]"></a>FRAMEWIN_DrawSkinFlex</STRONG> (Thumb, 874 bytes, Stack size 96 bytes, FRAMEWIN_SkinFlex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_DrawSkinFlex &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetActive
<LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 2]<UL><LI> FRAMEWIN.o(.data)
<LI> FRAMEWIN_Skin.o(.data)
</UL>
<P><STRONG><a name="[8b4]"></a>FRAMEWIN_SetSkinFlexProps</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, FRAMEWIN_SkinFlex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[8b5]"></a>FRAMEWIN_GetSkinFlexProps</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, FRAMEWIN_SkinFlex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[71f]"></a>FRAMEWIN__UpdateButtons</STRONG> (Thumb, 224 bytes, Stack size 48 bytes, FRAMEWIN__UpdateButtons.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = FRAMEWIN__UpdateButtons &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkin
</UL>

<P><STRONG><a name="[8b8]"></a>GUI_ARRAY__SethItem</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, GUI_ARRAY.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = GUI_ARRAY__SethItem &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Called By]<UL><LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
</UL>

<P><STRONG><a name="[8b9]"></a>GUI_ARRAY__GethItem</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, GUI_ARRAY.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[8ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GetpItemLocked
</UL>

<P><STRONG><a name="[8ba]"></a>GUI_ARRAY__GetpItemLocked</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, GUI_ARRAY.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GethItem
</UL>
<BR>[Called By]<UL><LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
</UL>

<P><STRONG><a name="[733]"></a>GUI_ARRAY_GetNumItems</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, GUI_ARRAY.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextAlign
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemText
<LI><a href="#[8cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DeleteItem
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDividerIndex
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[762]"></a>GUI_ARRAY_AddItem</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, GUI_ARRAY.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI_ARRAY_AddItem &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
</UL>

<P><STRONG><a name="[75c]"></a>GUI_ARRAY_Delete</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, GUI_ARRAY.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = GUI_ARRAY_Delete &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
</UL>

<P><STRONG><a name="[8bc]"></a>GUI_ARRAY_SetItem</STRONG> (Thumb, 146 bytes, Stack size 40 bytes, GUI_ARRAY.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[745]"></a>GUI_ARRAY_GethItem</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, GUI_ARRAY.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_ARRAY_GethItem &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GethItem
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSel
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemSel
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[731]"></a>GUI_ARRAY_GetpItemLocked</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, GUI_ARRAY.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GethItem
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemSize
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetpStringLocked
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__AddSize
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemTextLen
<LI><a href="#[8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemText
<LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextAlign
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDividerIndex
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[75f]"></a>GUI_ARRAY_Create</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_ARRAY.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI_ARRAY_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
</UL>

<P><STRONG><a name="[797]"></a>GUI_ARRAY_DeleteItem</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, GUI_ARRAY_DeleteItem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = GUI_ARRAY_DeleteItem &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[8cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DeleteItem
</UL>

<P><STRONG><a name="[76f]"></a>GUI_ARRAY_ResizeItemLocked</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, GUI_ARRAY_ResizeItem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_ARRAY_ResizeItemLocked &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__SethItem
<LI><a href="#[8ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GetpItemLocked
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetString
<LI><a href="#[8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemText
</UL>

<P><STRONG><a name="[6af]"></a>GUI_DRAW__Draw</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, GUI_DRAW.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_DRAW__Draw
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[8bd]"></a>GUI_DRAW__GetXSize</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, GUI_DRAW.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_DRAW__GetXSize
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[8be]"></a>GUI_DRAW__GetYSize</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, GUI_DRAW.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_DRAW__GetYSize
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[6a4]"></a>GUI_DRAW_BITMAP_Create</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, GUI_DRAW_BITMAP.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_DRAW_BITMAP_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[140]"></a>HEADER_Callback</STRONG> (Thumb, 446 bytes, Stack size 32 bytes, HEADER.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = HEADER_Callback &rArr; _HandlePID &rArr; GUI_CURSOR_SelectEx &rArr; GUI_SPRITE__CreateEx &rArr; _SpriteDraw &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[8c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_GetStateEx
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDividerIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> HEADER.o(.text)
</UL>
<P><STRONG><a name="[8c8]"></a>HEADER_Create</STRONG> (Thumb, 20 bytes, Stack size 32 bytes, HEADER.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[8ca]"></a>HEADER_CreateUser</STRONG> (Thumb, 216 bytes, Stack size 48 bytes, HEADER.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_GetDefaultEffect
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[8cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[8c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[792]"></a>HEADER_CreateEx</STRONG> (Thumb, 18 bytes, Stack size 32 bytes, HEADER.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HEADER_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[8cd]"></a>HEADER_SetFont</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, HEADER.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
</UL>

<P><STRONG><a name="[798]"></a>HEADER_SetHeight</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, HEADER.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = HEADER_SetHeight &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetHeaderHeight
<LI><a href="#[8cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetFont
</UL>

<P><STRONG><a name="[8ce]"></a>HEADER_SetTextAlign</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, HEADER.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>

<P><STRONG><a name="[779]"></a>HEADER_SetScrollPos</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, HEADER.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>

<P><STRONG><a name="[795]"></a>HEADER_AddItem</STRONG> (Thumb, 180 bytes, Stack size 56 bytes, HEADER.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = HEADER_AddItem &rArr; GUI_ARRAY_AddItem &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
</UL>

<P><STRONG><a name="[8cf]"></a>HEADER_DeleteItem</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, HEADER.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>

<P><STRONG><a name="[8d0]"></a>HEADER_SetItemText</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, HEADER.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>

<P><STRONG><a name="[8c1]"></a>HEADER_SetItemWidth</STRONG> (Thumb, 112 bytes, Stack size 48 bytes, HEADER.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = HEADER_SetItemWidth &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[780]"></a>HEADER_GetHeight</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, HEADER.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HEADER_GetHeight &rArr; WM_GetClientRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
</UL>

<P><STRONG><a name="[77b]"></a>HEADER_GetItemWidth</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, HEADER.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HEADER_GetItemWidth &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[78d]"></a>HEADER_GetNumItems</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, HEADER.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HEADER_GetNumItems &rArr; GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
</UL>

<P><STRONG><a name="[8d1]"></a>HEADER_SetDirIndicator</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, HEADER.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[8d2]"></a>HEADER_SetUserData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, HEADER.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
</UL>

<P><STRONG><a name="[8d3]"></a>HEADER_GetUserData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, HEADER.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
</UL>

<P><STRONG><a name="[78f]"></a>HEADER_GetSel</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, HEADER_GetSel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HEADER_GetSel
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[7a2]"></a>LISTVIEW__GetRowSorted</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, LISTVIEW_GetItemText.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemTextSorted
<LI><a href="#[8d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemTextSorted
</UL>

<P><STRONG><a name="[8d4]"></a>LISTVIEW_GetItemText</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, LISTVIEW_GetItemText.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[8d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[8d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemTextSorted
</UL>

<P><STRONG><a name="[8d6]"></a>LISTVIEW_GetItemTextSorted</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, LISTVIEW_GetItemText.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowSorted
<LI><a href="#[8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemText
</UL>

<P><STRONG><a name="[8d7]"></a>LISTVIEW_GetItemTextLen</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, LISTVIEW_GetItemText.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>

<P><STRONG><a name="[775]"></a>LISTVIEW__GetNumColumns</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, LISTVIEW_GetNumColumns.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LISTVIEW__GetNumColumns &rArr; GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSelCol
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSelCol
<LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemTextLen
<LI><a href="#[8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemText
</UL>

<P><STRONG><a name="[8d8]"></a>LISTVIEW_GetNumColumns</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, LISTVIEW_GetNumColumns.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>

<P><STRONG><a name="[783]"></a>LISTVIEW_GetWrapMode</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, LISTVIEW_GetWrapMode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LISTVIEW_GetWrapMode
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[784]"></a>LISTVIEW_GetLBorder</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, LISTVIEW_SetLBorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LISTVIEW_GetLBorder
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[8d9]"></a>LISTVIEW_SetLBorder</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, LISTVIEW_SetLBorder.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
</UL>

<P><STRONG><a name="[785]"></a>LISTVIEW_GetRBorder</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, LISTVIEW_SetRBorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LISTVIEW_GetRBorder
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[8da]"></a>LISTVIEW_SetRBorder</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, LISTVIEW_SetRBorder.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
</UL>

<P><STRONG><a name="[753]"></a>SCROLLBAR_GetDefaultWidth</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, SCROLLBAR_Defaults.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
</UL>

<P><STRONG><a name="[8dc]"></a>SCROLLBAR_SetDefaultWidth</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, SCROLLBAR_Defaults.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[a68]"></a>SCROLLBAR_GetThumbSizeMin</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, SCROLLBAR_Defaults.o(.text), UNUSED)

<P><STRONG><a name="[a69]"></a>SCROLLBAR_SetThumbSizeMin</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, SCROLLBAR_Defaults.o(.text), UNUSED)

<P><STRONG><a name="[a6a]"></a>SCROLLBAR_SetDefaultColor</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, SCROLLBAR_Defaults.o(.text), UNUSED)

<P><STRONG><a name="[755]"></a>SCROLLBAR_SetColor</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, SCROLLBAR_SetColor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = SCROLLBAR_SetColor &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarColor
</UL>

<P><STRONG><a name="[754]"></a>SCROLLBAR_SetWidth</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, SCROLLBAR_SetWidth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
<LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
</UL>
<BR>[Called By]<UL><LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
</UL>

<P><STRONG><a name="[6d5]"></a>WIDGET__FillStringInRect</STRONG> (Thumb, 254 bytes, Stack size 40 bytes, WIDGET_FillStringInRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = WIDGET__FillStringInRect &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[7f6]"></a>WM_BringToBottom</STRONG> (Thumb, 132 bytes, Stack size 48 bytes, WM_BringToBottom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[8e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[70c]"></a>WM_BringToTop</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, WM_BringToTop.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = WM_BringToTop &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[8e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>

<P><STRONG><a name="[739]"></a>WM_CheckScrollBounds</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, WM_CheckScrollPos.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[778]"></a>WM_CheckScrollPos</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, WM_CheckScrollPos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = WM_CheckScrollPos
</UL>
<BR>[Called By]<UL><LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>

<P><STRONG><a name="[74c]"></a>WM_SetScrollValue</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, WM_CheckScrollPos.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[808]"></a>WM__AddCriticalHandle</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, WM_CriticalHandle.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
</UL>

<P><STRONG><a name="[a6b]"></a>WM__RemoveCriticalHandle</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, WM_CriticalHandle.o(.text), UNUSED)

<P><STRONG><a name="[7c5]"></a>WM_GetBkColor</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, WM_GetBkColor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetBkColor
</UL>

<P><STRONG><a name="[806]"></a>WM__GetClientRectEx</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, WM_GetClientRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WM__GetClientRectEx &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[8e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
</UL>

<P><STRONG><a name="[72b]"></a>WM_GetClientRectEx</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, WM_GetClientRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetClientRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateEx
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_GetNumLines
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateUser
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
</UL>

<P><STRONG><a name="[7b7]"></a>WM_GetClientRect</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, WM_GetClientRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = WM_GetClientRect
</UL>
<BR>[Calls]<UL><LI><a href="#[8e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUp
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDown
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
</UL>

<P><STRONG><a name="[6c2]"></a>WM_GetClientWindow</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, WM_GetClientWindow.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
</UL>

<P><STRONG><a name="[6c4]"></a>WM_GetFocussedWindow</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, WM_GetFocussedWindow.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
</UL>

<P><STRONG><a name="[8cb]"></a>WM_GetInsideRectEx</STRONG> (Thumb, 14 bytes, Stack size 24 bytes, WM_GetInsideRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = WM_GetInsideRectEx &rArr; [Anonymous Symbol] &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM__GetClientRectEx &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[939]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
</UL>

<P><STRONG><a name="[758]"></a>WM_GetInsideRect</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, WM_GetInsideRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WM_GetInsideRect
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>

<P><STRONG><a name="[737]"></a>WM_GetInsideRectExScrollbar</STRONG> (Thumb, 168 bytes, Stack size 48 bytes, WM_GetInsideRectExScrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[8e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFlags
<LI><a href="#[8cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[704]"></a>WM_GetNextSibling</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, WM_GetNextSibling.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetNextSibling
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
</UL>

<P><STRONG><a name="[6fe]"></a>WM_GetParent</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, WM_GetParent.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetParent
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetBkColor
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetOwner
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[8cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DeleteItem
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[94e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
<LI><a href="#[939]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
</UL>

<P><STRONG><a name="[75b]"></a>WM_GetScrollbarH</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, WM_GetScrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = WM_GetScrollbarH &rArr; [Anonymous Symbol] &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[759]"></a>WM_GetScrollbarV</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, WM_GetScrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = WM_GetScrollbarV &rArr; [Anonymous Symbol] &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[75a]"></a>WM_GetScrollState</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, WM_GetScrollState.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = WM_GetScrollState &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM__GetClientRectEx &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[706]"></a>WM__GetWindowSizeX</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, WM_GetWindowSize.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTiled
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
</UL>

<P><STRONG><a name="[707]"></a>WM__GetWindowSizeY</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, WM_GetWindowSize.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTiled
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
</UL>

<P><STRONG><a name="[6a8]"></a>WM_GetWindowSizeX</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, WM_GetWindowSize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM_GetWindowSizeX &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetActiveWindow
<LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetWindowSizeX
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[6a9]"></a>WM_GetWindowSizeY</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, WM_GetWindowSize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM_GetWindowSizeY
</UL>
<BR>[Calls]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetActiveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetWindowSizeX
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDividerIndex
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[6b9]"></a>WM_HasCaptured</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, WM_HasCaptured.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
</UL>

<P><STRONG><a name="[70f]"></a>WM_IsWindow</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, WM_IsWindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_IsWindow &rArr; WM__IsWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[8ec]"></a>WM_EnableMemdev</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, WM_MemDev.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>

<P><STRONG><a name="[713]"></a>WM_DisableMemdev</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, WM_MemDev.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
</UL>

<P><STRONG><a name="[709]"></a>WM_MoveChildTo</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, WM_MoveChildTo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
</UL>

<P><STRONG><a name="[68d]"></a>WM_NotifyParent</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, WM_NotifyParent.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WM_NotifyParent &rArr; WM_SendToParent &rArr;  WM__SendMessage (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeCharacter
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSelCol
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_Callback
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateAttached
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[936]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[93e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetState
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[61d]"></a>WM_OnKey</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, WM_OnKey.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = WM_OnKey &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM__GetClientRectEx &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SendKeyMsg
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
</UL>

<P><STRONG><a name="[6c3]"></a>WM_SendMessageNoPara</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, WM_SendMessageNoPara.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM_SendMessageNoPara &rArr; WM__SendMessageNoPara
</UL>
<BR>[Calls]<UL><LI><a href="#[891]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
</UL>
<BR>[Called By]<UL><LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
<LI><a href="#[939]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[807]"></a>WM_SendToParent</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, WM_SendToParent.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = WM_SendToParent &rArr;  WM__SendMessage (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>

<P><STRONG><a name="[6ba]"></a>WM_SetCapture</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, WM_SetCapture.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = WM_SetCapture &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM__GetClientRectEx &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[8c6]"></a>WM_ReleaseCapture</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, WM_SetCapture.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = WM_ReleaseCapture &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM__GetClientRectEx &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[70d]"></a>WM_SetCaptureMove</STRONG> (Thumb, 140 bytes, Stack size 48 bytes, WM_SetCaptureMove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = WM_SetCaptureMove &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasCaptured
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[8ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
</UL>

<P><STRONG><a name="[6c5]"></a>WM_SetFocusOnNextChild</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, WM_SetFocusOnNextChild.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = WM_SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM__GetClientRectEx &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFocussedChild
<LI><a href="#[8f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocussable
<LI><a href="#[8ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextChild
</UL>
<BR>[Called By]<UL><LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
</UL>

<P><STRONG><a name="[700]"></a>WM_SetFocusOnPrevChild</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, WM_SetFocusOnPrevChild.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = WM_SetFocusOnPrevChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM__GetClientRectEx &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[8f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetLastSibling
<LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevChild
<LI><a href="#[8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFocussedChild
<LI><a href="#[8f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocussable
<LI><a href="#[8e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
</UL>

<P><STRONG><a name="[8f6]"></a>WM__SetScrollbarV</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, WM_SetScrollbar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[8f8]"></a>WM__SetScrollbarH</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, WM_SetScrollbar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[73d]"></a>WM_SetScrollbarH</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, WM_SetScrollbar.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollH
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>

<P><STRONG><a name="[73c]"></a>WM_SetScrollbarV</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, WM_SetScrollbar.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>

<P><STRONG><a name="[7cd]"></a>WM_SetScrollState</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, WM_SetScrollState.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = WM_SetScrollState &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM__GetClientRectEx &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
</UL>

<P><STRONG><a name="[70a]"></a>WM_SetSize</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, WM_SetSize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE__SetWindowSize
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[6b8]"></a>WM_SetHasTrans</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, WM_SetTrans.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = WM_SetHasTrans &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetSkin
</UL>

<P><STRONG><a name="[7be]"></a>WM_ClrHasTrans</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, WM_SetTrans.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = WM_ClrHasTrans &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
</UL>

<P><STRONG><a name="[742]"></a>WM_GetHasTrans</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, WM_SetTrans.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetHasTrans
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[6ae]"></a>WM_SetUserClipRect</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, WM_SetUserClipRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = WM_SetUserClipRect &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[6a2]"></a>WM__GetUserDataEx</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, WM_UserData.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetUserData
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetUserData
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetUserData
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_GetUserData
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_GetUserData
<LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_GetUserData
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_GetUserData
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetUserData
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetUserData
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_GetUserData
<LI><a href="#[8d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetUserData
<LI><a href="#[940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetUserData
</UL>

<P><STRONG><a name="[6a0]"></a>WM__SetUserDataEx</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, WM_UserData.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetUserData
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetUserData
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetUserData
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetUserData
<LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_SetUserData
<LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetUserData
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetUserData
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetUserData
<LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetUserData
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetUserData
<LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserData
<LI><a href="#[8d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetUserData
<LI><a href="#[93f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetUserData
</UL>

<P><STRONG><a name="[8fb]"></a>WM_GetUserData</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, WM_UserData.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[8fc]"></a>WM_SetUserData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, WM_UserData.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
</UL>

<P><STRONG><a name="[595]"></a>WM__GetOrgX_AA</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, WM__GetOrg_AA.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawRoundedRect
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillEllipse
</UL>

<P><STRONG><a name="[596]"></a>WM__GetOrgY_AA</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, WM__GetOrg_AA.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawRoundedRect
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillEllipse
</UL>

<P><STRONG><a name="[711]"></a>WM__IsAncestor</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, WM__IsAncestor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__IsAncestor
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
</UL>

<P><STRONG><a name="[710]"></a>WM__IsAncestorOrSelf</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, WM__IsAncestor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__IsAncestorOrSelf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
</UL>

<P><STRONG><a name="[6aa]"></a>WM__IsEnabled</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, WM__IsEnabled.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__IsEnabled
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>

<P><STRONG><a name="[7c2]"></a>WM__Screen2Client</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, WM__Screen2Client.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>
<BR>[Called By]<UL><LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawUpRect
<LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EffectRequiresRedraw
</UL>

<P><STRONG><a name="[70e]"></a>WM__SendMessage</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, WM__SendMessage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WM__SendMessage &rArr; WM_DefaultProc &rArr; WM__GetClientRectEx &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_EnableWindow
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
<LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[8c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[94a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>

<P><STRONG><a name="[7cc]"></a>WM__UpdateChildPositions</STRONG> (Thumb, 204 bytes, Stack size 56 bytes, WM__UpdateChildPositions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = WM__UpdateChildPositions &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[8ff]"></a>LCD_SetLUTEx</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, GUICC_0.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
</UL>

<P><STRONG><a name="[900]"></a>LCD_SetLUT</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, GUICC_0.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
</UL>

<P><STRONG><a name="[8bb]"></a>GUI_ALLOC_AllocInit</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, GUI_ALLOC_AllocInit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GUI_ALLOC_AllocInit &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
</UL>

<P><STRONG><a name="[820]"></a>GUIPROP_EXT__FindChar</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, GUI_CharPExt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
</UL>

<P><STRONG><a name="[901]"></a>GUIPROP_EXT_DispChar</STRONG> (Thumb, 156 bytes, Stack size 48 bytes, GUI_CharPExt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
</UL>

<P><STRONG><a name="[a6c]"></a>GUIPROP_EXT_GetCharDistX</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, GUI_CharPExt.o(.text), UNUSED)

<P><STRONG><a name="[a6d]"></a>GUIPROP_EXT_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_CharPExt.o(.text), UNUSED)

<P><STRONG><a name="[a6e]"></a>GUIPROP_EXT_IsInFont</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, GUI_CharPExt.o(.text), UNUSED)

<P><STRONG><a name="[a6f]"></a>GUIPROP_EXT_GetCharInfo</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, GUI_CharPExt.o(.text), UNUSED)

<P><STRONG><a name="[a70]"></a>GUI_CURSOR__SetSpriteEx</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, GUI_Curs1.o(.text), UNUSED)

<P><STRONG><a name="[a71]"></a>GUI_CURSOR__GetSpriteEx</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, GUI_Curs1.o(.text), UNUSED)

<P><STRONG><a name="[8c5]"></a>GUI_CURSOR_SelectEx</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, GUI_Curs1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = GUI_CURSOR_SelectEx &rArr; GUI_SPRITE__CreateEx &rArr; _SpriteDraw &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Show
<LI><a href="#[906]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerSizeEx
<LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[907]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[911]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_ShowEx
<LI><a href="#[914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Select
</UL>

<P><STRONG><a name="[909]"></a>GUI_CURSOR_SetBitmapEx</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, GUI_Curs1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[90c]"></a>GUI_CURSOR_SetBitmap</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, GUI_Curs1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[90e]"></a>GUI_CURSOR_HideEx</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, GUI_Curs1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
<LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
<LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Hide
</UL>

<P><STRONG><a name="[911]"></a>GUI_CURSOR_ShowEx</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, GUI_Curs1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Show
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[916]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Show
</UL>

<P><STRONG><a name="[8c4]"></a>GUI_CURSOR_GetStateEx</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, GUI_Curs1.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[912]"></a>GUI_CURSOR_SetPositionEx</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, GUI_Curs1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[913]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
<LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[917]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPosition
</UL>

<P><STRONG><a name="[914]"></a>GUI_CURSOR_Select</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI_Curs1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[915]"></a>GUI_CURSOR_Hide</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI_Curs1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[90e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_HideEx
</UL>

<P><STRONG><a name="[916]"></a>GUI_CURSOR_Show</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI_Curs1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[911]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_ShowEx
</UL>

<P><STRONG><a name="[a72]"></a>GUI_CURSOR_GetState</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, GUI_Curs1.o(.text), UNUSED)

<P><STRONG><a name="[917]"></a>GUI_CURSOR_SetPosition</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI_Curs1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
</UL>

<P><STRONG><a name="[8b3]"></a>GUI_DrawPixel</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, GUI_DrawPixel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_DrawPixel &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[971]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
</UL>

<P><STRONG><a name="[918]"></a>GUI__GetOrg</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, GUI_GetOrg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[88e]"></a>GUI_GetOrg</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, GUI_GetOrg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[91a]"></a>GUI_AssignCursorLayer</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, GUI_SelectLayer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>

<P><STRONG><a name="[903]"></a>GUI_GetCursorLayer</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_SelectLayer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Show
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetBitmapEx
<LI><a href="#[90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetBitmap
<LI><a href="#[90e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_HideEx
</UL>

<P><STRONG><a name="[91b]"></a>GUI_GetLayerPosEx</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, GUI_SelectLayer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPosEx
</UL>

<P><STRONG><a name="[a73]"></a>GUI_GetSelLayer</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI_SelectLayer.o(.text), UNUSED)

<P><STRONG><a name="[882]"></a>GUI_SelectLayer</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, GUI_SelectLayer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[91c]"></a>GUI_SetLayerAlphaEx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_SelectLayer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetAlphaEx
</UL>

<P><STRONG><a name="[913]"></a>GUI_SetLayerPosEx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_SelectLayer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPosEx
</UL>
<BR>[Called By]<UL><LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
</UL>

<P><STRONG><a name="[906]"></a>GUI_SetLayerSizeEx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_SelectLayer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_SetLayerSizeEx &rArr; LCD_SetSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
</UL>
<BR>[Called By]<UL><LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[904]"></a>GUI_SetLayerVisEx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_SelectLayer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_SetLayerVisEx &rArr; LCD_SetVisEx
</UL>
<BR>[Calls]<UL><LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVisEx
</UL>
<BR>[Called By]<UL><LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Show
<LI><a href="#[90e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_HideEx
</UL>

<P><STRONG><a name="[83f]"></a>GUI_SetLineStyle</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, GUI_SetLineStyle.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[83e]"></a>GUI_SetTextAlign</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, GUI_SetTextAlign.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[830]"></a>GUI__CompactPixelIndices</STRONG> (Thumb, 290 bytes, Stack size 4 bytes, GUI__CompactPixelIndices.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapLine
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[8a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushBuffer
</UL>

<P><STRONG><a name="[91e]"></a>GUI__ConvertColor2Index</STRONG> (Thumb, 356 bytes, Stack size 24 bytes, GUI__CompactPixelIndices.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI__ConvertColor2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[91d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndicesEx
</UL>

<P><STRONG><a name="[91d]"></a>GUI__CompactPixelIndicesEx</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, GUI__CompactPixelIndices.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__CompactPixelIndicesEx &rArr; GUI__ConvertColor2Index
</UL>
<BR>[Calls]<UL><LI><a href="#[91e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ConvertColor2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
</UL>

<P><STRONG><a name="[82d]"></a>GUI__ExpandPixelIndices</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, GUI__ExpandPixelIndices.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__ExpandPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
<LI><a href="#[926]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRect
</UL>

<P><STRONG><a name="[86a]"></a>GUI__ExpandPixelIndicesEx</STRONG> (Thumb, 322 bytes, Stack size 32 bytes, GUI__ExpandPixelIndices.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI__ExpandPixelIndicesEx
</UL>
<BR>[Called By]<UL><LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
</UL>

<P><STRONG><a name="[827]"></a>GUI__GetFontSizeY</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, GUI__GetFontSizeY.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
</UL>

<P><STRONG><a name="[81b]"></a>GUI__HandleEOLine</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, GUI__HandleEOLine.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[91f]"></a>GUI__strcmp</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, GUI__strcmp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
</UL>

<P><STRONG><a name="[87a]"></a>GUI__strcmp_hp</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, GUI__strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__strcmp_hp
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[91f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>

<P><STRONG><a name="[81e]"></a>GUI__WrapGetNumCharsDisp</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI__Wrap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__WrapGetNumCharsDisp &rArr; _WrapGetNumCharsDisp &rArr; GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
</UL>
<BR>[Called By]<UL><LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>

<P><STRONG><a name="[921]"></a>GUI__WrapGetNumCharsToNextLine</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, GUI__Wrap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GUI__WrapGetNumCharsToNextLine &rArr; _WrapGetNumCharsDisp &rArr; GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[815]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
</UL>
<BR>[Called By]<UL><LI><a href="#[81d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
</UL>

<P><STRONG><a name="[81d]"></a>GUI__WrapGetNumBytesToNextLine</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, GUI__Wrap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GUI__WrapGetNumBytesToNextLine &rArr; GUI__WrapGetNumCharsToNextLine &rArr; _WrapGetNumCharsDisp &rArr; GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[921]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
</UL>
<BR>[Called By]<UL><LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WrapGetNumLines
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>

<P><STRONG><a name="[885]"></a>LCD_GetNumLayers</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, LCD_GetNumDisplays.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetNumLayers
</UL>
<BR>[Calls]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[86d]"></a>LCD_GetNextPixelAPI</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, LCD_NextPixelAPI.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetNextPixelAPI
</UL>
<BR>[Called By]<UL><LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
</UL>

<P><STRONG><a name="[869]"></a>GUI_ReadRectEx</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, LCD_ReadRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GUI_ReadRectEx &rArr; LCD_ReadRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[926]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRect
</UL>

<P><STRONG><a name="[924]"></a>LCD_ReadRect</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, LCD_ReadRect.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRectEx
</UL>

<P><STRONG><a name="[925]"></a>LCD_ReadRectNoClip</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, LCD_ReadRect.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRectEx
</UL>

<P><STRONG><a name="[926]"></a>GUI_ReadRect</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, LCD_ReadRect.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[927]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixel
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ExpandPixelIndices
<LI><a href="#[869]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRectEx
</UL>

<P><STRONG><a name="[829]"></a>LCD_SelectLCD</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, LCD_SelectLCD.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_SelectLCD
</UL>
<BR>[Calls]<UL><LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
</UL>
<BR>[Called By]<UL><LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>

<P><STRONG><a name="[892]"></a>GUI_MEMDEV_ReduceYSize</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, GUIDEV_ReduceYSize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MEMDEV_ReduceYSize
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[12b]"></a>GUI_MEMDEV__WriteToActiveAlpha</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, GUIDEV_WriteToActiveAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = GUI_MEMDEV__WriteToActiveAlpha &rArr; _WriteToActiveAlpha &rArr; GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.text)
</UL>
<P><STRONG><a name="[929]"></a>FRAMEWIN_GetFont</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, FRAMEWIN_Get.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[92a]"></a>FRAMEWIN_GetTitleHeight</STRONG> (Thumb, 46 bytes, Stack size 40 bytes, FRAMEWIN_Get.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[92b]"></a>FRAMEWIN_GetBorderSize</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, FRAMEWIN_Get.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[92c]"></a>FRAMEWIN_GetBorderSizeEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, FRAMEWIN_Get.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[92d]"></a>FRAMEWIN_GetTextAlign</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, FRAMEWIN_Get.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[92e]"></a>FRAMEWIN_GetText</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, FRAMEWIN_Get.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[92f]"></a>FRAMEWIN_GetBarColor</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, FRAMEWIN_Get.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[8b1]"></a>FRAMEWIN_GetActive</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, FRAMEWIN_Get.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FRAMEWIN_GetActive
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
</UL>

<P><STRONG><a name="[930]"></a>HEADER_SetSkin</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, HEADER_Skin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[a74]"></a>HEADER_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, HEADER_Skin.o(.text), UNUSED)

<P><STRONG><a name="[d]"></a>HEADER_DrawSkinFlex</STRONG> (Thumb, 256 bytes, Stack size 32 bytes, HEADER_SkinFlex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = HEADER_DrawSkinFlex &rArr; _DrawText &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>
<BR>[Address Reference Count : 1]<UL><LI> HEADER.o(.data)
</UL>
<P><STRONG><a name="[a75]"></a>HEADER_SetSkinFlexProps</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, HEADER_SkinFlex.o(.text), UNUSED)

<P><STRONG><a name="[a76]"></a>HEADER_GetSkinFlexProps</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, HEADER_SkinFlex.o(.text), UNUSED)

<P><STRONG><a name="[96f]"></a>SCROLLBAR__Rect2VRect</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, SCROLLBAR.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[8df]"></a>SCROLLBAR__InvalidatePartner</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, SCROLLBAR.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = SCROLLBAR__InvalidatePartner &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
</UL>
<BR>[Called By]<UL><LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetWidth
</UL>

<P><STRONG><a name="[143]"></a>SCROLLBAR_Callback</STRONG> (Thumb, 440 bytes, Stack size 32 bytes, SCROLLBAR.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
<LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> SCROLLBAR.o(.text)
</UL>
<P><STRONG><a name="[939]"></a>SCROLLBAR_CreateUser</STRONG> (Thumb, 214 bytes, Stack size 48 bytes, SCROLLBAR.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
</UL>
<BR>[Called By]<UL><LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateEx
</UL>

<P><STRONG><a name="[93a]"></a>SCROLLBAR_CreateEx</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, SCROLLBAR.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[939]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateAttached
<LI><a href="#[941]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Create
</UL>

<P><STRONG><a name="[93b]"></a>SCROLLBAR_Dec</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, SCROLLBAR.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
</UL>

<P><STRONG><a name="[a77]"></a>SCROLLBAR_Inc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, SCROLLBAR.o(.text), UNUSED)

<P><STRONG><a name="[938]"></a>SCROLLBAR_AddValue</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, SCROLLBAR.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[936]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[93b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Dec
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[936]"></a>SCROLLBAR_SetValue</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, SCROLLBAR.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[93c]"></a>SCROLLBAR_SetNumItems</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, SCROLLBAR.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[93d]"></a>SCROLLBAR_SetPageSize</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, SCROLLBAR.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[93e]"></a>SCROLLBAR_SetState</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, SCROLLBAR.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[93f]"></a>SCROLLBAR_SetUserData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, SCROLLBAR.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
</UL>

<P><STRONG><a name="[940]"></a>SCROLLBAR_GetUserData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, SCROLLBAR.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
</UL>

<P><STRONG><a name="[941]"></a>SCROLLBAR_Create</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, SCROLLBAR_Create.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateEx
</UL>

<P><STRONG><a name="[8f5]"></a>SCROLLBAR_CreateAttached</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, SCROLLBAR_Create.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[8de]"></a>WIDGET_SetWidth</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, WIDGET_SetWidth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
</UL>
<BR>[Called By]<UL><LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetWidth
</UL>

<P><STRONG><a name="[8e2]"></a>WM_ForEachDesc</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, WM_ForEachDesc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM_ForEachDesc &rArr; WM__ForEachDesc &rArr;  WM__ForEachDesc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
</UL>

<P><STRONG><a name="[8e6]"></a>WM_GetFlags</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, WM_GetFlags.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetFlags
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>

<P><STRONG><a name="[896]"></a>WM_GetWindowOrgX</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, WM_GetOrg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM_GetWindowOrgX &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[945]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[946]"></a>WM_GetWindowOrgY</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, WM_GetOrg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[947]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[a78]"></a>WM_GetOrgX</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, WM_GetOrg.o(.text), UNUSED)

<P><STRONG><a name="[a79]"></a>WM_GetOrgY</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, WM_GetOrg.o(.text), UNUSED)

<P><STRONG><a name="[948]"></a>WM_GetWindowRect</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, WM_GetWindowRect.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[898]"></a>WM_GetWindowRectEx</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, WM_GetWindowRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WM_GetWindowRectEx &rArr; [Anonymous Symbol] &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[8f1]"></a>WM_IsFocussable</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, WM_IsFocussable.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = WM_IsFocussable &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM__GetClientRectEx &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
</UL>

<P><STRONG><a name="[8ed]"></a>WM__MoveWindow</STRONG> (Thumb, 162 bytes, Stack size 56 bytes, WM_Move.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateParent
<LI><a href="#[94a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[94b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
</UL>

<P><STRONG><a name="[94b]"></a>WM__MoveTo</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, WM_Move.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
</UL>

<P><STRONG><a name="[8b7]"></a>WM_MoveWindow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, WM_Move.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = WM_MoveWindow &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
</UL>

<P><STRONG><a name="[94c]"></a>WM_MoveTo</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, WM_Move.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[94b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
</UL>

<P><STRONG><a name="[8b6]"></a>WM_ResizeWindow</STRONG> (Thumb, 244 bytes, Stack size 48 bytes, WM_ResizeWindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + In Cycle
<LI>Call Chain = WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
</UL>

<P><STRONG><a name="[8fa]"></a>WM_ValidateWindow</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, WM_ValidateWindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_ValidateWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
</UL>

<P><STRONG><a name="[8f0]"></a>WM__GetFocussedChild</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, WM__GetFocussedChild.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__GetFocussedChild &rArr; WM__IsChild
</UL>
<BR>[Calls]<UL><LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsChild
</UL>
<BR>[Called By]<UL><LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
</UL>

<P><STRONG><a name="[8f3]"></a>WM__GetLastSibling</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, WM__GetLastSibling.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__GetLastSibling
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevChild
</UL>

<P><STRONG><a name="[8e1]"></a>WM__GetPrevSibling</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, WM__GetPrevSibling.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__GetPrevSibling &rArr; WM__GetFirstSibling &rArr; WM_GetParent
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[94e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
</UL>
<BR>[Called By]<UL><LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevChild
</UL>

<P><STRONG><a name="[891]"></a>WM__SendMessageNoPara</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, WM__SendMessageNoPara.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__SendMessageNoPara
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[8fe]"></a>GUI_CalcColorDist</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, GUI_CalcColorDist.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[908]"></a>GUI_SPRITE__CreateEx</STRONG> (Thumb, 208 bytes, Stack size 40 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = GUI_SPRITE__CreateEx &rArr; _SpriteDraw &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[967]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[965]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[966]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
</UL>
<BR>[Called By]<UL><LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[96c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[96a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[968]"></a>GUI_SPRITE__SetCallback</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, GUI_SPRITE.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[969]"></a>GUI_SPRITE_CreateEx</STRONG> (Thumb, 8 bytes, Stack size 16 bytes, GUI_SPRITE.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[96a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[96b]"></a>GUI_SPRITE_Create</STRONG> (Thumb, 6 bytes, Stack size 8 bytes, GUI_SPRITE.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[96c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[a7a]"></a>GUI_SPRITE_CreateHiddenEx</STRONG> (Thumb, 6 bytes, Stack size 16 bytes, GUI_SPRITE.o(.text), UNUSED)

<P><STRONG><a name="[a7b]"></a>GUI_SPRITE_CreateHidden</STRONG> (Thumb, 4 bytes, Stack size 8 bytes, GUI_SPRITE.o(.text), UNUSED)

<P><STRONG><a name="[907]"></a>GUI_SPRITE_Delete</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = GUI_SPRITE_Delete &rArr; _Undraw &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
<LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
</UL>
<BR>[Called By]<UL><LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[90f]"></a>GUI_SPRITE_SetPosition</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI_SPRITE.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[963]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
</UL>
<BR>[Called By]<UL><LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
<LI><a href="#[90e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_HideEx
</UL>

<P><STRONG><a name="[90d]"></a>GUI_SPRITE_SetBitmap</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, GUI_SPRITE.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[962]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmap
<LI><a href="#[966]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
</UL>
<BR>[Called By]<UL><LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[96d]"></a>GUI_SPRITE_SetBitmapAndPosition</STRONG> (Thumb, 110 bytes, Stack size 48 bytes, GUI_SPRITE.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
<LI><a href="#[966]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
</UL>

<P><STRONG><a name="[910]"></a>GUI_SPRITE_Hide</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, GUI_SPRITE.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
</UL>
<BR>[Called By]<UL><LI><a href="#[90e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_HideEx
</UL>

<P><STRONG><a name="[905]"></a>GUI_SPRITE_Show</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = GUI_SPRITE_Show &rArr; _SpriteDraw &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[965]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Show
</UL>

<P><STRONG><a name="[96e]"></a>GUI_SPRITE_GetState</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, GUI_SPRITE.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[935]"></a>GUI__DivideRound32</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, GUI__DivideRound32.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[970]"></a>SCROLLBAR_SetSkin</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, SCROLLBAR_Skin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>

<P><STRONG><a name="[a7c]"></a>SCROLLBAR_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, SCROLLBAR_Skin.o(.text), UNUSED)

<P><STRONG><a name="[16]"></a>SCROLLBAR_DrawSkinFlex</STRONG> (Thumb, 438 bytes, Stack size 56 bytes, SCROLLBAR_SkinFlex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = SCROLLBAR_DrawSkinFlex &rArr; WIDGET__DrawTriangle &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
<LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawTriangle
<LI><a href="#[972]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> SCROLLBAR.o(.data)
</UL>
<P><STRONG><a name="[973]"></a>SCROLLBAR_SetSkinFlexProps</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, SCROLLBAR_SkinFlex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[975]"></a>SCROLLBAR_GetSkinFlexProps</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, SCROLLBAR_SkinFlex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[937]"></a>WM_GetScrollPartner</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, WM_GetScrollPartner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
<LI><a href="#[939]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[942]"></a>WM_SetXSize</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, WM_SetXSize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = WM_SetXSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[8de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
</UL>

<P><STRONG><a name="[943]"></a>WM_SetYSize</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, WM_SetYSize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[8de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
</UL>

<P><STRONG><a name="[944]"></a>WM__ForEachDesc</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, WM__ForEachDesc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = WM__ForEachDesc &rArr;  WM__ForEachDesc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[8e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
<LI><a href="#[944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>

<P><STRONG><a name="[94e]"></a>WM__GetFirstSibling</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, WM__GetFirstSibling.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__GetFirstSibling &rArr; WM_GetParent
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[8e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
</UL>

<P><STRONG><a name="[94d]"></a>WM__IsChild</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, WM__IsChild.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__IsChild
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFocussedChild
</UL>

<P><STRONG><a name="[95a]"></a>GUI_GetBitmapPixelIndexEx</STRONG> (Thumb, 150 bytes, Stack size 4 bytes, GUI_GetBitmapPixelIndex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Called By]<UL><LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[952]"></a>GUI_GetBitmapPixelIndex</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, GUI_GetBitmapPixelIndex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[95a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[965]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[963]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
<LI><a href="#[962]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmap
<LI><a href="#[951]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PixelExists
<LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndexAlpha
<LI><a href="#[953]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndex
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[202]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[976]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Init
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;converUSecToVal
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_set_divisors
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit_ExtMemCtl
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUs
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_Encoder2
<LI><a href="#[988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[a7d]"></a>___aeabi_memcpy8$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[2e1]"></a>__aeabi_memcpy</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_unicode_to_utf8_str
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCreate
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinShowHelpInfoCreate
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyBuffer
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetText
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CalcTextRect
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeCharacter
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemText
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteSkipNoLock
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteWithOverwriteNoLock
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_ReadNoLock
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_ReadUpBufferNoLock
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteNoCheck
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteBlocking
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawUpRect
<LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EffectRequiresRedraw
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[819]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[7e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowInfo
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetUserData
<LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[965]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[962]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmap
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[92e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetText
</UL>

<P><STRONG><a name="[3ce]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateUser
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Init
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
<LI><a href="#[887]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP_DDB
<LI><a href="#[8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkinFlexProps
<LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetSkinFlexProps
<LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[5b4]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[a7e]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[a7f]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[634]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecSpace
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_AddHLine
<LI><a href="#[978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[a80]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[a81]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[359]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCreate
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxCreate
<LI><a href="#[8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemText
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Clear
</UL>

<P><STRONG><a name="[319]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectListOwnerDraw
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuDestroy
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuCreate
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkDestroy
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkCreate
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeDestroy
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCreate
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageDestroy
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageCreate
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputDestroy
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCreate
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Destroy
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Create
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpDestroy
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCreate
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuCreate
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuCreate
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumDestroy
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCreate
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumDestroy
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCreate
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumDestroy
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCreate
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageDestroy
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCreate
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenDestroy
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenCreate
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseDestroy
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseCreate
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosDestroy
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCreate
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesDestroy
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesCreate
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenDestroy
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseDestroy
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenDestroy
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenCreate
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseDestroy
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseCreate
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenDestroy
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenCreate
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseDestroy
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseCreate
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectDestroy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCreate
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserDestroy
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserCreate
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuDestroy
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuCreate
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuDestroy
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuCreate
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpDestroy
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpCreate
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinShowHelpInfoDestroy
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinShowHelpInfoCreate
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoDestroy
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoCreate
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewDestroy
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxCreate
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinDestroy
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinCreate
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX__GetButtonSize
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw51
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw5
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw3
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw6
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw50
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw2
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw4
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw00
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinShowRefresh
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_init
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ProgDTD
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Reset
</UL>

<P><STRONG><a name="[a82]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[978]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[35a]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCreate
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxCreate
</UL>

<P><STRONG><a name="[8d5]"></a>strncpy</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, strncpy.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemText
</UL>

<P><STRONG><a name="[577]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetString
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemText
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_TerminalOut
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteString
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemTextLen
<LI><a href="#[8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemText
<LI><a href="#[92e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetText
</UL>

<P><STRONG><a name="[2e4]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InterDataRefresh
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InterDataInit
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectRefresh
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetString
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputKeyEnter
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelctRefresh
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseRefesh
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenRefresh
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseRefresh
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenRefresh
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesRefresh
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseRefresh
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenRefresh
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseRefresh
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__WinEmgSpeedOpenRefresh
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosKeyRefresh
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuRefresh
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemText
</UL>

<P><STRONG><a name="[3c9]"></a>__aeabi_fadd</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[97a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[979]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFloatValue
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFloatMode
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenKeyDown
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseKeyDown
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;choice_speed_line
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_control
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_uart3
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_AO1
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[3cc]"></a>__aeabi_fsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenKeyUp
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseKeyUp
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;choice_speed_line
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_control
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_uart3
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[4d7]"></a>__aeabi_frsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_hand
</UL>

<P><STRONG><a name="[4a4]"></a>__aeabi_fmul</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFloatValue
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFloatMode
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;choice_speed_line
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changetorque
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_control
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_uart3
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_AO1
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[4da]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[97a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetFloatValue
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;choice_speed_line
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[4d8]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[97d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[97b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_control
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_hand
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_AO1
<LI><a href="#[98d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[993]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ceil
<LI><a href="#[97e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[98a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
</UL>

<P><STRONG><a name="[4eb]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_AO1
<LI><a href="#[993]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[97e]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[993]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ceil
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[4a6]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCOM_Usb2Serial_send
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_EME
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_control
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_hand
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_uart3
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx_I
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_Encoder2
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_AO1
<LI><a href="#[993]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[98a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
</UL>

<P><STRONG><a name="[4ba]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[97d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_control
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_hand
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx_I
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_Encoder2
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_AO1
<LI><a href="#[993]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[2e3]"></a>__aeabi_i2f</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[979]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InterDataInit
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetFloatValue
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;choice_speed_line
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_control
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_hand
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx_I
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_AO1
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[3d4]"></a>__aeabi_ui2f</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[979]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetFloatValue
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_EME
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFloatValue
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFloatMode
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesKeyUp
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesKeyDown
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;choice_speed_line
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changetorque
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_uart0
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_control
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_uart3
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[4a5]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_EME
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_control
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_uart3
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_AO1
</UL>

<P><STRONG><a name="[4a7]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_hand
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_uart3
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_Encoder2
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_AO1
</UL>

<P><STRONG><a name="[2e8]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InterDataRefresh
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenCreate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseCreate
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFloatValue
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenKeyUp
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenKeyDown
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseKeyUp
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseKeyDown
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseRefesh
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenRefresh
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuRefresh
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx_I
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_AO1
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[379]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2KeyENTER_BEF
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2KeyEnter
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpKeyENTER_BEF
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpKeyEnter
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpKeyENTER_BEF
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpKeyEnter
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;choice_speed_line
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changetorque
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_uart0
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_eeprom
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_uart3
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_AO1
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[4bc]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[976]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFloatMode
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_control
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_Encoder2
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[541]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[976]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCOM_Usb2Serial_send
</UL>

<P><STRONG><a name="[2e7]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InterDataRefresh
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_41
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFloatMode
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuRefresh
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_control
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_hand
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx_I
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_AO1
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[392]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCOM_Usb2Serial_send
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuRefresh
</UL>

<P><STRONG><a name="[4a9]"></a>__aeabi_cdcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_control
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_uart3
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_AO1
</UL>

<P><STRONG><a name="[4a8]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_41
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_control
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_uart3
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_AO1
<LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ceil
</UL>

<P><STRONG><a name="[4bb]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[97a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_EME
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_control
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_hand
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx_I
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_AO1
</UL>

<P><STRONG><a name="[393]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuRefresh
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[3c7]"></a>__aeabi_cfcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_12
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_11
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_EME
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenKeyUp
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenKeyDown
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseKeyUp
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseKeyDown
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_control
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_uart3
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[3c8]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_13
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_EME
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFloatValue
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenKeyUp
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenKeyDown
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseKeyUp
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseKeyDown
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;choice_speed_line
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_control
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_uart3
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx
</UL>

<P><STRONG><a name="[a83]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[992]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[977]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[97f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[a84]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[976]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[97f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[a85]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[97b]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[a86]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[a87]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[97a]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[979]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[97d]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[97c]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[97d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[976]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>

<P><STRONG><a name="[97f]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[976]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[1ff]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[a88]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[98c]"></a>__ARM_scalbn</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[98b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[993]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[a89]"></a>scalbn</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dscalb.o(.text), UNUSED)

<P><STRONG><a name="[a8a]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dclz77c.o(.text), UNUSED)

<P><STRONG><a name="[a8b]"></a>__decompress2</STRONG> (Thumb, 94 bytes, Stack size unknown bytes, __dclz77c.o(.text), UNUSED)

<P><STRONG><a name="[551]"></a>USB_ReqGetDescriptor</STRONG> (Thumb, 246 bytes, Stack size 8 bytes, usbcore.o(i.USB_ReqGetDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_ReqGetDescriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[54f]"></a>USB_ReqGetStatus</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, usbcore.o(i.USB_ReqGetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[550]"></a>USB_ReqSetClrFeature</STRONG> (Thumb, 228 bytes, Stack size 16 bytes, usbcore.o(i.USB_ReqSetClrFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_ReqSetClrFeature
</UL>
<BR>[Calls]<UL><LI><a href="#[981]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WakeUpCfg
<LI><a href="#[982]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetTestMode
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetStallEP
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ClrStallEP
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[553]"></a>USB_ReqSetConfiguration</STRONG> (Thumb, 416 bytes, Stack size 24 bytes, usbcore.o(i.USB_ReqSetConfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USB_ReqSetConfiguration &rArr; USB_ConfigEP
</UL>
<BR>[Calls]<UL><LI><a href="#[986]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetEP
<LI><a href="#[985]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EnableEP
<LI><a href="#[983]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DisableEP
<LI><a href="#[984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Configure
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ConfigEP
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[555]"></a>USB_ReqSetInterface</STRONG> (Thumb, 302 bytes, Stack size 40 bytes, usbcore.o(i.USB_ReqSetInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = USB_ReqSetInterface &rArr; USB_ConfigEP
</UL>
<BR>[Calls]<UL><LI><a href="#[986]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetEP
<LI><a href="#[985]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EnableEP
<LI><a href="#[983]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DisableEP
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ConfigEP
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[987]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[a8c]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[45e]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a8d]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[a8e]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[989]"></a>__0sprintf</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[a8f]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[2e6]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InterDataRefresh
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Create
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Callback_Refesh
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectRefresh
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCreate
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxCreate
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputKeyEnter
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelctRefresh
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseRefesh
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenRefresh
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseRefresh
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenRefresh
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesRefresh
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseRefresh
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenRefresh
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseRefresh
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__WinEmgSpeedOpenRefresh
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosKeyRefresh
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuRefresh
</UL>

<P><STRONG><a name="[a90]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[a91]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[994]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[993]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[98a]"></a>__kernel_poly</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[993]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[98b]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __mathlib_dbl_infnan &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[98c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[993]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[98d]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_infnan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __mathlib_dbl_infnan2 &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[98e]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __mathlib_dbl_underflow &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[98c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[993]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[a92]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[a93]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[a94]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[993]"></a>atan</STRONG> (Thumb, 474 bytes, Stack size 40 bytes, atan.o(i.atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = atan &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[98b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[98c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[97e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[98a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[4b9]"></a>atan2</STRONG> (Thumb, 346 bytes, Stack size 32 bytes, atan2.o(i.atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[98d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[993]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[97e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx_I
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx
</UL>

<P><STRONG><a name="[5c8]"></a>ceil</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, ceil.o(i.ceil), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[97e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[5c9]"></a>floor</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, floor.o(i.floor))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = floor &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[97e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFloatMode
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[201]"></a>WaitUs</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, system_lpc43xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = WaitUs &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit_ExtMemCtl
</UL>

<P><STRONG><a name="[20b]"></a>uart_set_divisors</STRONG> (Thumb, 496 bytes, Stack size 80 bytes, lpc43xx_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = uart_set_divisors &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_GetPCLKFrequency
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[218]"></a>getPClock</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lpc43xx_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = getPClock &rArr; CGU_GetPCLKFrequency &rArr; CGU_UpdateClock
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_GetPCLKFrequency
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;converUSecToVal
</UL>

<P><STRONG><a name="[219]"></a>converUSecToVal</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, lpc43xx_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = converUSecToVal &rArr; getPClock &rArr; CGU_GetPCLKFrequency &rArr; CGU_UpdateClock
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getPClock
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Init
</UL>

<P><STRONG><a name="[21b]"></a>converPtrToTimeNum</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, lpc43xx_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Init
</UL>

<P><STRONG><a name="[256]"></a>OS_SchedNew</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStart
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
</UL>

<P><STRONG><a name="[260]"></a>OS_InitTaskStat</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = OS_InitTaskStat &rArr; OSTaskCreateExt &rArr; OS_TCBInit &rArr; OSTCBInitHook
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskNameSet
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[264]"></a>OS_InitTaskIdle</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = OS_InitTaskIdle &rArr; OSTaskCreateExt &rArr; OS_TCBInit &rArr; OSTCBInitHook
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskNameSet
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[265]"></a>OS_InitEventList</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OS_InitEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemClr
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[267]"></a>OS_InitTCBList</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OS_InitTCBList
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemClr
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[26b]"></a>OS_InitRdyList</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[26a]"></a>OS_InitMisc</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[27d]"></a>OS_FlagTaskRdy</STRONG> (Thumb, 82 bytes, Stack size 20 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagUnlink
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPost
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagDel
</UL>

<P><STRONG><a name="[283]"></a>OS_FlagBlock</STRONG> (Thumb, 152 bytes, Stack size 20 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPend
</UL>

<P><STRONG><a name="[2bc]"></a>OSTmr_Alloc</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, os_tmr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrCreate
</UL>

<P><STRONG><a name="[2bf]"></a>OSTmr_Free</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, os_tmr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrDel
</UL>

<P><STRONG><a name="[2be]"></a>OSTmr_Unlink</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, os_tmr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = OSTmr_Unlink
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrStop
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrStart
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrDel
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Task
</UL>

<P><STRONG><a name="[2c4]"></a>OSTmr_Link</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, os_tmr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OSTmr_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrStart
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Task
</UL>

<P><STRONG><a name="[68]"></a>OSTmr_Task</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, os_tmr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = OSTmr_Task &rArr; OSSemPend &rArr; OS_EventTaskWait
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Link
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Unlink
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_tmr.o(.text)
</UL>
<P><STRONG><a name="[2c6]"></a>OSTmr_InitTask</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, os_tmr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = OSTmr_InitTask &rArr; OSTaskCreateExt &rArr; OS_TCBInit &rArr; OSTCBInitHook
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskNameSet
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Init
</UL>

<P><STRONG><a name="[2cf]"></a>CheckInit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_x.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_WaitKey
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetKey
</UL>

<P><STRONG><a name="[2df]"></a>_SetDisplayOrigin</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcdconf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[70]"></a>SKIN_Btn_Btn</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = SKIN_Btn_Btn &rArr; BUTTON_DrawSkinFlex &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[71]"></a>SKIN_DriverLeft_Button_Return</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = SKIN_DriverLeft_Button_Return &rArr; BUTTON_DrawSkinFlex &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[72]"></a>SKIN_DriverRight_Button_Return</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = SKIN_DriverRight_Button_Return &rArr; BUTTON_DrawSkinFlex &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[2fd]"></a>SKIN_DriverRight_Button_Return3</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, winwindow.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>

<P><STRONG><a name="[76]"></a>SKIN_Left_Button_Return</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = SKIN_Left_Button_Return &rArr; BUTTON_DrawSkinFlex &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[2ff]"></a>SKIN_TEST</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, winwindow.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>

<P><STRONG><a name="[69]"></a>SKIN_TEST1</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = SKIN_TEST1 &rArr; BUTTON_DrawSkinFlex &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[86]"></a>SKIN_NUMBER_Button</STRONG> (Thumb, 188 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = SKIN_NUMBER_Button &rArr; BUTTON_DrawSkinFlex &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[7f]"></a>SKIN_Two_NUMBER_Button</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = SKIN_Two_NUMBER_Button &rArr; BUTTON_DrawSkinFlex &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[300]"></a>SKIN_textheader_Button</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, winwindow.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>

<P><STRONG><a name="[7b]"></a>SKIN_Three_NUMBER_Button</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = SKIN_Three_NUMBER_Button &rArr; BUTTON_DrawSkinFlex &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[82]"></a>SKIN_Five_NUMBER_Button</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = SKIN_Five_NUMBER_Button &rArr; BUTTON_DrawSkinFlex &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[6a]"></a>_ProgOwnerSkin2</STRONG> (Thumb, 564 bytes, Stack size 40 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _ProgOwnerSkin2 &rArr; PROGBAR_DrawSkinFlex &rArr; _DrawBackground &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedRect
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[77]"></a>SKIN_Right_Button_Home</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = SKIN_Right_Button_Home &rArr; BUTTON_DrawSkinFlex &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[305]"></a>_GetItemSizeX</STRONG> (Thumb, 34 bytes, Stack size 120 bytes, winwindow.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemText
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OwnerDraw
</UL>

<P><STRONG><a name="[308]"></a>_GetItemSizeY</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, winwindow.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OwnerDraw
</UL>

<P><STRONG><a name="[30b]"></a>_OwnerDraw</STRONG> (Thumb, 316 bytes, Stack size 192 bytes, winwindow.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeX
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasFocus
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemText
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemSel
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCEOL
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRectEx
</UL>

<P><STRONG><a name="[6b]"></a>_MainWinCallback</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 632 + Unknown Stack Size
<LI>Call Chain = _MainWinCallback &rArr; _MainWinKeyEnter &rArr; WIN_Enter &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Enter
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinShowDataRefresh
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinKeyEnter
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinKeyUp
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MainWinKeyDown
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[32c]"></a>_cbWin</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, winwindow.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
</UL>

<P><STRONG><a name="[32d]"></a>_GetItemSizeY_CommonList</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetItemSizeY_CommonList
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectListOwnerDraw
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw51
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw5
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw3
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw6
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw50
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw2
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw4
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw00
</UL>

<P><STRONG><a name="[32e]"></a>_GetItemSizeY_CommonList3</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetItemSizeY_CommonList3
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
</UL>
<BR>[Called By]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw00
</UL>

<P><STRONG><a name="[32f]"></a>_GetItemSizeX_CommonList</STRONG> (Thumb, 34 bytes, Stack size 120 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _GetItemSizeX_CommonList &rArr; LISTBOX_GetItemText &rArr; LISTBOX__GetpStringLocked &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemText
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectListOwnerDraw
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw51
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw5
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw3
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw6
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw50
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw2
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw4
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw00
</UL>

<P><STRONG><a name="[1bc]"></a>_MainWinCreate</STRONG> (Thumb, 2446 bytes, Stack size 32 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616 + Unknown Stack Size
<LI>Call Chain = _MainWinCreate &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InterDataRefresh
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec1
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetBitmapEx
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateAsChild
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetSkin
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetBarColor
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateEx
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwnerDraw
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetNumUsedBytes
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetNumFreeBytes
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGradientH_PointWhite
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetDefaultSkinClassic
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1bd]"></a>_MainWinDestroy</STRONG> (Thumb, 420 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _MainWinDestroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[6c]"></a>_ListCallback</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = _ListCallback &rArr; WIN_Enter &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Enter
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[1be]"></a>_ListBoxCreate</STRONG> (Thumb, 288 bytes, Stack size 56 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = _ListBoxCreate &rArr; FRAMEWIN_SetTitleVis &rArr; FRAMEWIN__UpdatePositions &rArr; WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_unicode_to_utf8_str
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GetLeftDepth
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GetLChildElem
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GetRightChild
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateAsChild
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateAsChild
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1bf]"></a>_ListBoxDestroy</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _ListBoxDestroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[35c]"></a>_ListKeyDown</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _ListKeyDown &rArr; LISTVIEW_SetSel &rArr; LISTVIEW__SetSel &rArr; _UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSel
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListViewCallback
</UL>

<P><STRONG><a name="[6d]"></a>_ListViewCallback</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = _ListViewCallback &rArr; WIN_Enter &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListKeyDown
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Enter
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[1c0]"></a>_ListViewCreate</STRONG> (Thumb, 672 bytes, Stack size 56 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = _ListViewCreate &rArr; FRAMEWIN_SetTitleVis &rArr; FRAMEWIN__UpdatePositions &rArr; WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GetLeftDepth
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GetLChildElem
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GetRightChild
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetHeaderHeight
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetFont
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetBitmapEx
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetBkColor
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateEx
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetClientColor
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateAsChild
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateAsChild
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1c1]"></a>_ListViewDestroy</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _ListViewDestroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[6e]"></a>_ListBoxShowMainInfoCallback</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = _ListBoxShowMainInfoCallback &rArr; _ListBoxShowMainInfoKeyEnter &rArr; WIN_Enter &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoKeyUp
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoKeyDown
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ListBoxShowMainInfoKeyEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[1c2]"></a>_ListBoxShowMainInfoCreate</STRONG> (Thumb, 964 bytes, Stack size 56 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = _ListBoxShowMainInfoCreate &rArr; FRAMEWIN_SetTitleVis &rArr; FRAMEWIN__UpdatePositions &rArr; WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_unicode_to_utf8_str
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GetLeftDepth
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GetRightChild
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetBitmapEx
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateAsChild
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1c3]"></a>_ListBoxShowMainInfoDestroy</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _ListBoxShowMainInfoDestroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[6f]"></a>_WinShowHelpInfoCallback</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _WinShowHelpInfoCallback &rArr; WIN_Exit
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Exit
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[1c4]"></a>_WinShowHelpInfoCreate</STRONG> (Thumb, 646 bytes, Stack size 64 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = _WinShowHelpInfoCreate &rArr; FRAMEWIN_SetTitleVis &rArr; FRAMEWIN__UpdatePositions &rArr; WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHandleInfoPtr
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetExpInfoPtr
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_unicode_to_utf8_str
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GetLeftDepth
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_GetRightChild
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetBitmapEx
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetWrapMode
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateAsChild
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1c5]"></a>_WinShowHelpInfoDestroy</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinShowHelpInfoDestroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[73]"></a>_WinLocalOpCallback</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 632 + Unknown Stack Size
<LI>Call Chain = _WinLocalOpCallback &rArr; _WinLocalOpKeyENTER_BEF &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpRefresh
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpKeyENTER_BEF
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpKeyTAB
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpKeyEnter
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpKeyUp
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinLocalOpKeyDown
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[1c6]"></a>_WinLocalOpCreate</STRONG> (Thumb, 1718 bytes, Stack size 48 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = _WinLocalOpCreate &rArr; FRAMEWIN_SetTitleVis &rArr; FRAMEWIN__UpdatePositions &rArr; WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_unicode_to_utf8_str
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetDefaultEffect
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateAsChild
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetSkin
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateEx
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGradientH_PointWhite
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateAsChild
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrShowClear
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_txt
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1c7]"></a>_WinLocalOpDestroy</STRONG> (Thumb, 336 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinLocalOpDestroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[75]"></a>_WinMainMenuCallback</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 632 + Unknown Stack Size
<LI>Call Chain = _WinMainMenuCallback &rArr; _WinMainMenuKeyEnter &rArr; WIN_Enter &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuKeyUp
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuKeyEnter
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMainMenuKeyDown
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[386]"></a>_GetItemSizeX2</STRONG> (Thumb, 34 bytes, Stack size 120 bytes, winwindow.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemText
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
</UL>

<P><STRONG><a name="[387]"></a>_GetItemSizeY2</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, winwindow.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
</UL>

<P><STRONG><a name="[74]"></a>SKIN_Main_Menu_Button_Home</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = SKIN_Main_Menu_Button_Home &rArr; BUTTON_DrawSkinFlex &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[388]"></a>DrawGradientV_PointWhite</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = DrawGradientV_PointWhite &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
</UL>
<BR>[Called By]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw51
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw5
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw6
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw50
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw4
</UL>

<P><STRONG><a name="[389]"></a>_GetItemSizeY_CommonList4</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetItemSizeY_CommonList4
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
</UL>
<BR>[Called By]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw51
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw5
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw3
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw6
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw50
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuListOwnerDraw4
</UL>

<P><STRONG><a name="[1c8]"></a>_WinMainMenuCreate</STRONG> (Thumb, 688 bytes, Stack size 56 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = _WinMainMenuCreate &rArr; LISTBOX_SetOwnerDraw &rArr; LISTBOX_InvalidateItem &rArr; LISTBOX_UpdateScrollers &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_unicode_to_utf8_str
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetBitmapEx
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetDefaultEffect
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwnerDraw
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_txt
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1c9]"></a>_WinMainMenuDestroy</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinMainMenuDestroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[78]"></a>_WinCommonMenuCallback</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = _WinCommonMenuCallback &rArr; _WinCommonMenuKeyEnter &rArr; WIN_Enter &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuRefresh
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuKeyEnter
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuKeyUp
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonMenuKeyDown
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[1ca]"></a>_WinCommonMenuCreate</STRONG> (Thumb, 980 bytes, Stack size 64 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = _WinCommonMenuCreate &rArr; FRAMEWIN_SetTitleVis &rArr; FRAMEWIN__UpdatePositions &rArr; WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InterDataRefresh
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_unicode_to_utf8_str
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwnerDraw
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseRefesh
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenRefresh
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseRefresh
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenRefresh
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesRefresh
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseRefresh
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenRefresh
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseRefresh
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__WinEmgSpeedOpenRefresh
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosKeyRefresh
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_txt
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1cb]"></a>_WinCommonMenuDestroy</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinCommonMenuDestroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[79]"></a>_WinCurUserCallback</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = _WinCurUserCallback &rArr; _WinCurUserKeyUp &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserKeyUp
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserKeyDown
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCurUserKeyEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[1cc]"></a>_WinCurUserCreate</STRONG> (Thumb, 740 bytes, Stack size 64 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = _WinCurUserCreate &rArr; FRAMEWIN_SetTitleVis &rArr; FRAMEWIN__UpdatePositions &rArr; WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_unicode_to_utf8_str
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetClientColor
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateAsChild
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateEx
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_txt
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1cd]"></a>_WinCurUserDestroy</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinCurUserDestroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[3a6]"></a>_WinCommonSelectRefresh</STRONG> (Thumb, 1836 bytes, Stack size 56 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _WinCommonSelectRefresh &rArr; GUI_SetOrientation &rArr; GUI_SetOrientationEx &rArr; GUI_SetOrientationExCached &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrientation
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectCallback
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectKeyEnter
</UL>

<P><STRONG><a name="[7a]"></a>_WinCommonSelectCallback</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = _WinCommonSelectCallback &rArr; _WinCommonSelectKeyEnter &rArr; _WinCommonSelectRefresh &rArr; GUI_SetOrientation &rArr; GUI_SetOrientationEx &rArr; GUI_SetOrientationExCached &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectRefresh
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectKeyUp
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectKeyDown
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectKeyEnter
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelctRefresh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[1ce]"></a>_WinCommonSelectCreate</STRONG> (Thumb, 766 bytes, Stack size 80 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = _WinCommonSelectCreate &rArr; _WinCommonSelectFresh &rArr; CHECKBOX_CreateEx &rArr; CHECKBOX_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonSelectFresh
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_txt
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1cf]"></a>_WinCommonSelectDestroy</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinCommonSelectDestroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[7d]"></a>_WinSpeedCloseCallback</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _WinSpeedCloseCallback &rArr; _WinSpeedCloseKeyUp &rArr; PROGBAR_SetValue &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseKeyUp
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseKeyDown
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseKeyEnter
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseRefresh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[7c]"></a>_ProgOwnerSkin3</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _ProgOwnerSkin3 &rArr; PROGBAR_DrawSkinFlex &rArr; _DrawBackground &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedRect
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[1d0]"></a>_WinSpeedCloseCreate</STRONG> (Thumb, 778 bytes, Stack size 56 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = _WinSpeedCloseCreate &rArr; FRAMEWIN_SetTitleVis &rArr; FRAMEWIN__UpdatePositions &rArr; WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_unicode_to_utf8_str
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetDefaultEffect
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetSkin
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateAsChild
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFont
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrShowClear
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_txt
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_drive
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1d1]"></a>_WinSpeedCloseDestroy</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinSpeedCloseDestroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[7e]"></a>_WinSpeedOpenCallback</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _WinSpeedOpenCallback &rArr; _WinSpeedOpenKeyUp &rArr; PROGBAR_SetValue &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenKeyUp
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenKeyDown
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenKeyEnter
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenRefresh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[1d2]"></a>_WinSpeedOpenCreate</STRONG> (Thumb, 814 bytes, Stack size 48 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = _WinSpeedOpenCreate &rArr; FRAMEWIN_SetTitleVis &rArr; FRAMEWIN__UpdatePositions &rArr; WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_unicode_to_utf8_str
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetDefaultEffect
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetSkin
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateAsChild
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFont
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrShowClear
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_txt
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_drive
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1d3]"></a>_WinSpeedOpenDestroy</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinSpeedOpenDestroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[80]"></a>_WinEndPosCloseCallback</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _WinEndPosCloseCallback &rArr; _WinEndPosCloseKeyUp &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseKeyUp
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseKeyDown
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseKeyEnter
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosCloseRefresh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[1d4]"></a>_WinEndPosCloseCreate</STRONG> (Thumb, 632 bytes, Stack size 48 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = _WinEndPosCloseCreate &rArr; FRAMEWIN_SetTitleVis &rArr; FRAMEWIN__UpdatePositions &rArr; WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_unicode_to_utf8_str
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetDefaultEffect
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFont
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrShowClear
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_txt
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_drive
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1d5]"></a>_WinEndPosCloseDestroy</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinEndPosCloseDestroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[81]"></a>_WinEndPosOpenCallback</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _WinEndPosOpenCallback &rArr; _WinEndPosOpenKeyUp &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenKeyUp
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenKeyDown
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenKeyEnter
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpenRefresh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[1d6]"></a>_WinEndPosOpenCreate</STRONG> (Thumb, 640 bytes, Stack size 48 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = _WinEndPosOpenCreate &rArr; FRAMEWIN_SetTitleVis &rArr; FRAMEWIN__UpdatePositions &rArr; WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_unicode_to_utf8_str
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetDefaultEffect
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFont
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrShowClear
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_txt
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_drive
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1d7]"></a>_WinEndPosOpenDestroy</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinEndPosOpenDestroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[83]"></a>_WinMomentCloseCallback</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _WinMomentCloseCallback &rArr; _WinMomentCloseKeyUp &rArr; PROGBAR_SetValue &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseKeyUp
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseKeyDown
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseKeyEnter
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseRefesh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[1d8]"></a>_WinMomentCloseCreate</STRONG> (Thumb, 938 bytes, Stack size 48 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = _WinMomentCloseCreate &rArr; FRAMEWIN_SetTitleVis &rArr; FRAMEWIN__UpdatePositions &rArr; WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_unicode_to_utf8_str
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetDefaultEffect
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetSkin
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateAsChild
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFont
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFloatMode
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrShowClear
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_txt
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_drive
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1d9]"></a>_WinMomentCloseDestroy</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinMomentCloseDestroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[84]"></a>_WinMomentOpenCallback</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _WinMomentOpenCallback &rArr; _WinMomentOpenKeyUp &rArr; PROGBAR_SetValue &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenKeyUp
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenKeyDown
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenKeyEnter
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenRefresh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[1da]"></a>_WinMomentOpenCreate</STRONG> (Thumb, 942 bytes, Stack size 48 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = _WinMomentOpenCreate &rArr; FRAMEWIN_SetTitleVis &rArr; FRAMEWIN__UpdatePositions &rArr; WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_unicode_to_utf8_str
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetDefaultEffect
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetSkin
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateAsChild
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFont
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFloatMode
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrShowClear
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_txt
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_drive
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1db]"></a>_WinMomentOpenDestroy</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinMomentOpenDestroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[85]"></a>_WinOverMomentTimesCallback</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _WinOverMomentTimesCallback &rArr; _WinOverMomentTimesKeyUp &rArr; PROGBAR_SetValue &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesKeyUp
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesKeyDown
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesKeyEnter
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinOverMomentTimesRefresh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[1dc]"></a>_WinOverMomentTimesCreate</STRONG> (Thumb, 918 bytes, Stack size 48 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = _WinOverMomentTimesCreate &rArr; FRAMEWIN_SetTitleVis &rArr; FRAMEWIN__UpdatePositions &rArr; WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_unicode_to_utf8_str
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetDefaultEffect
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetSkin
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateAsChild
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFont
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_EnableBlink
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrShowClear
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_txt
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1dd]"></a>_WinOverMomentTimesDestroy</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinOverMomentTimesDestroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[3da]"></a>WinEmergencyPosNumberShowStyle</STRONG> (Thumb, 208 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = WinEmergencyPosNumberShowStyle &rArr; EDIT_SetTextMode &rArr; EDIT_SetText &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextMode
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosCallback
</UL>

<P><STRONG><a name="[87]"></a>_WinEmergencyPosCallback</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = _WinEmergencyPosCallback &rArr; _WinEmergencyPosKeyDown &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WinEmergencyPosNumberShowStyle
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosKeyUp
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosKeyDown
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmergencyPosKeyEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[1de]"></a>_WinEmergencyPosCreate</STRONG> (Thumb, 1336 bytes, Stack size 56 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = _WinEmergencyPosCreate &rArr; FRAMEWIN_SetTitleVis &rArr; FRAMEWIN__UpdatePositions &rArr; WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_unicode_to_utf8_str
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetSkin
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateAsChild
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwnerDraw
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFont
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrShowClear
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_txt
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1df]"></a>_WinEmergencyPosDestroy</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinEmergencyPosDestroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[88]"></a>_WinEmgSpeedCloseCallback</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _WinEmgSpeedCloseCallback &rArr; _WinEmgSpeedCloseKeyUp &rArr; PROGBAR_SetValue &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseKeyUp
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseKeyDown
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseKeyEnter
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedCloseRefresh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[1e0]"></a>_WinEmgSpeedCloseCreate</STRONG> (Thumb, 916 bytes, Stack size 56 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = _WinEmgSpeedCloseCreate &rArr; FRAMEWIN_SetTitleVis &rArr; FRAMEWIN__UpdatePositions &rArr; WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_unicode_to_utf8_str
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetDefaultEffect
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateAsChild
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFont
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrShowClear
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_txt
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_drive
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1e1]"></a>_WinEmgSpeedCloseDestroy</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinEmgSpeedCloseDestroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[89]"></a>_WinEmgSpeedOpenCallback</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _WinEmgSpeedOpenCallback &rArr; _WinEmgSpeedOpenKeyUp &rArr; PROGBAR_SetValue &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenKeyUp
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenKeyDown
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEmgSpeedOpenKeyEnter
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__WinEmgSpeedOpenRefresh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[1e2]"></a>_WinEmgSpeedOpenCreate</STRONG> (Thumb, 916 bytes, Stack size 48 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = _WinEmgSpeedOpenCreate &rArr; FRAMEWIN_SetTitleVis &rArr; FRAMEWIN__UpdatePositions &rArr; WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_unicode_to_utf8_str
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetDefaultEffect
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateAsChild
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFont
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrShowClear
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_txt
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_drive
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1e3]"></a>_WinEmgSpeedOpenDestroy</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinEmgSpeedOpenDestroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[3e5]"></a>WinPercentageNumberShowStyle</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = WinPercentageNumberShowStyle &rArr; EDIT_SetTextMode &rArr; EDIT_SetText &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextMode
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageCallback
</UL>

<P><STRONG><a name="[8b]"></a>_WinPercentageCallback</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = _WinPercentageCallback &rArr; _WinPercentageKeyEnter &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WinPercentageNumberShowStyle
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageKeyUp
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageKeyDown
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPercentageKeyEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[1e4]"></a>_WinPercentageCreate</STRONG> (Thumb, 1144 bytes, Stack size 64 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = _WinPercentageCreate &rArr; FRAMEWIN_SetTitleVis &rArr; FRAMEWIN__UpdatePositions &rArr; WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_unicode_to_utf8_str
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetSkin
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateAsChild
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwnerDraw
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFont
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrShowClear
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_txt
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1e5]"></a>_WinPercentageDestroy</STRONG> (Thumb, 242 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinPercentageDestroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[3e9]"></a>WinThreeNumberShowStyle</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = WinThreeNumberShowStyle &rArr; EDIT_SetTextMode &rArr; EDIT_SetText &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextMode
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumCallback
</UL>

<P><STRONG><a name="[8c]"></a>_WinComThreeNumCallback</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = _WinComThreeNumCallback &rArr; _WinComThreeNumKeyEnter &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WinThreeNumberShowStyle
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumKeyUp
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumKeyDown
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComThreeNumKeyEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[1e6]"></a>_WinComThreeNumCreate</STRONG> (Thumb, 1320 bytes, Stack size 64 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = _WinComThreeNumCreate &rArr; FRAMEWIN_SetTitleVis &rArr; FRAMEWIN__UpdatePositions &rArr; WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_unicode_to_utf8_str
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetSkin
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateAsChild
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwnerDraw
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFont
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrShowClear
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_txt
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1e7]"></a>_WinComThreeNumDestroy</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinComThreeNumDestroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[3ed]"></a>WinFiveNumberShowStyle</STRONG> (Thumb, 324 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = WinFiveNumberShowStyle &rArr; EDIT_SetTextMode &rArr; EDIT_SetText &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextMode
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumCallback
</UL>

<P><STRONG><a name="[8d]"></a>_WinComFiveNumCallback</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = _WinComFiveNumCallback &rArr; _WinComFiveNumKeyEnter &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WinFiveNumberShowStyle
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumKeyUp
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumKeyDown
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFiveNumKeyEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[1e8]"></a>_WinComFiveNumCreate</STRONG> (Thumb, 1882 bytes, Stack size 64 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = _WinComFiveNumCreate &rArr; FRAMEWIN_SetTitleVis &rArr; FRAMEWIN__UpdatePositions &rArr; WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_unicode_to_utf8_str
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetSkin
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateAsChild
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwnerDraw
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFont
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrShowClear
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_txt
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1e9]"></a>_WinComFiveNumDestroy</STRONG> (Thumb, 270 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinComFiveNumDestroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[3f1]"></a>WinFourNumberShowStyle</STRONG> (Thumb, 262 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = WinFourNumberShowStyle &rArr; EDIT_SetTextMode &rArr; EDIT_SetText &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextMode
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumCallback
</UL>

<P><STRONG><a name="[8e]"></a>_WinComFourNumCallback</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = _WinComFourNumCallback &rArr; _WinComFourNumKeyEnter &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WinFourNumberShowStyle
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumKeyUp
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumKeyDown
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinComFourNumKeyEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[1ea]"></a>_WinComFourNumCreate</STRONG> (Thumb, 1616 bytes, Stack size 64 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = _WinComFourNumCreate &rArr; FRAMEWIN_SetTitleVis &rArr; FRAMEWIN__UpdatePositions &rArr; WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_unicode_to_utf8_str
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateAsChild
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwnerDraw
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFont
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrShowClear
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_txt
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1eb]"></a>_WinComFourNumDestroy</STRONG> (Thumb, 298 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinComFourNumDestroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[8f]"></a>_WinFirstSetEndMenuCallback</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = _WinFirstSetEndMenuCallback &rArr; _WinFirstSetEndMenuKeyEnter &rArr; WIN_Enter &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuKeyUp
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuKeyDown
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinFirstSetEndMenuKeyEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[1ec]"></a>_WinFirstSetEndMenuCreate</STRONG> (Thumb, 904 bytes, Stack size 56 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = _WinFirstSetEndMenuCreate &rArr; FRAMEWIN_SetTitleVis &rArr; FRAMEWIN__UpdatePositions &rArr; WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_unicode_to_utf8_str
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGradientH_PointWhite
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateAsChild
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGradientH_color
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrShowClear
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_txt
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1ed]"></a>_WinFirstSetEndMenuDestroy</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinFirstSetEndMenuDestroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[90]"></a>_WinSelEndMenuCallback</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = _WinSelEndMenuCallback &rArr; _WinSelEndMenuKeyEnter &rArr; WIN_Enter &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuKeyUp
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuKeyDown
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSelEndMenuKeyEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[1ee]"></a>_WinSelEndMenuCreate</STRONG> (Thumb, 744 bytes, Stack size 56 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = _WinSelEndMenuCreate &rArr; FRAMEWIN_SetTitleVis &rArr; FRAMEWIN__UpdatePositions &rArr; WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_unicode_to_utf8_str
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetBitmapEx
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSel
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetClientColor
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateAsChild
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateAsChild
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrShowClear
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1ef]"></a>_WinSelEndMenuDestroy</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinSelEndMenuDestroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[3fd]"></a>_WinEndPosOpCallback_Refesh</STRONG> (Thumb, 228 bytes, Stack size 0 bytes, winwindow.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCallback
</UL>

<P><STRONG><a name="[91]"></a>_WinEndPosOpCallback</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 632 + Unknown Stack Size
<LI>Call Chain = _WinEndPosOpCallback &rArr; _WinEndPosOpKeyENTER_BEF &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpCallback_Refesh
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_Enter
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpKeyENTER_BEF
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpKeyTAB
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpKeyEnter
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpKeyUp
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpKeyDown
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[1f0]"></a>_WinEndPosOpCreate</STRONG> (Thumb, 1442 bytes, Stack size 48 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = _WinEndPosOpCreate &rArr; FRAMEWIN_SetTitleVis &rArr; FRAMEWIN__UpdatePositions &rArr; WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_unicode_to_utf8_str
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGradientH_PointWhite
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateAsChild
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrShowClear
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_txt
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1f1]"></a>_WinEndPosOpDestroy</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinEndPosOpDestroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[405]"></a>_WinEndPosOpT2Refresh</STRONG> (Thumb, 232 bytes, Stack size 0 bytes, winwindow.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Callback
</UL>

<P><STRONG><a name="[403]"></a>_WinEndPosOpT2Callback_Refesh</STRONG> (Thumb, 358 bytes, Stack size 24 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _WinEndPosOpT2Callback_Refesh &rArr; TEXT_SetText &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Callback
</UL>

<P><STRONG><a name="[92]"></a>_WinEndPosOpT2Callback</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 632 + Unknown Stack Size
<LI>Call Chain = _WinEndPosOpT2Callback &rArr; _WinEndPosOpT2KeyENTER_BEF &rArr; GUI_Delay &rArr; GUI_Exec &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Callback_Refesh
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Refresh
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2Callback_Refesh2
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2KeyENTER_BEF
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2KeyTAB
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2KeyEnter
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2KeyUp
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosOpT2KeyDown
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[1f2]"></a>_WinEndPosOpT2Create</STRONG> (Thumb, 1714 bytes, Stack size 56 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = _WinEndPosOpT2Create &rArr; FRAMEWIN_SetTitleVis &rArr; FRAMEWIN__UpdatePositions &rArr; WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_unicode_to_utf8_str
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGradientH_PointWhite
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateAsChild
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrShowClear
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_txt
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1f3]"></a>_WinEndPosOpT2Destroy</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinEndPosOpT2Destroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[40b]"></a>WinPasswordNumberShowStyle</STRONG> (Thumb, 262 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = WinPasswordNumberShowStyle &rArr; EDIT_SetTextMode &rArr; EDIT_SetText &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextMode
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputCallback
</UL>

<P><STRONG><a name="[93]"></a>_WinPasswordInputCallback</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = _WinPasswordInputCallback &rArr; _WinPasswordInputKeyEnter &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WinPasswordNumberShowStyle
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputKeyUp
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputKeyDown
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordInputKeyEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[1f4]"></a>_WinPasswordInputCreate</STRONG> (Thumb, 1298 bytes, Stack size 64 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = _WinPasswordInputCreate &rArr; FRAMEWIN_SetTitleVis &rArr; FRAMEWIN__UpdatePositions &rArr; WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_unicode_to_utf8_str
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetWrapMode
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwnerDraw
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFont
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrShowClear
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_txt
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1f5]"></a>_WinPasswordInputDestroy</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinPasswordInputDestroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[94]"></a>_WinCommonUserManageCallback</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = _WinCommonUserManageCallback &rArr; _WinCommonUserManageKeyEnter &rArr; WIN_Enter &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageKeyUp
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageKeyDown
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinCommonUserManageKeyEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[1f6]"></a>_WinCommonUserManageCreate</STRONG> (Thumb, 636 bytes, Stack size 80 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = _WinCommonUserManageCreate &rArr; FRAMEWIN_SetTitleVis &rArr; FRAMEWIN__UpdatePositions &rArr; WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_unicode_to_utf8_str
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwnerDraw
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_txt
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1f7]"></a>_WinCommonUserManageDestroy</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinCommonUserManageDestroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[414]"></a>WinPasswordNumberChangeShowStyle</STRONG> (Thumb, 266 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = WinPasswordNumberChangeShowStyle &rArr; EDIT_SetTextMode &rArr; EDIT_SetText &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextMode
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeCallback
</UL>

<P><STRONG><a name="[95]"></a>_WinPasswordChangeCallback</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = _WinPasswordChangeCallback &rArr; _WinPasswordChangeKeyEnter &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WinPasswordNumberChangeShowStyle
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeKeyUp
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeKeyDown
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinPasswordChangeKeyEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[1f8]"></a>_WinPasswordChangeCreate</STRONG> (Thumb, 1366 bytes, Stack size 64 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = _WinPasswordChangeCreate &rArr; FRAMEWIN_SetTitleVis &rArr; FRAMEWIN__UpdatePositions &rArr; WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_unicode_to_utf8_str
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetWrapMode
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwnerDraw
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleVis
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFont
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrShowClear
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_txt
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1f9]"></a>_WinPasswordChangeDestroy</STRONG> (Thumb, 202 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinPasswordChangeDestroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[96]"></a>_WinEndPosSetOkCallback</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _WinEndPosSetOkCallback &rArr; _WinEndPosSetOkKeyEnter &rArr; WIN_Exit_Lv
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkKeyUp
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkKeyDown
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosSetOkKeyEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[1fa]"></a>_WinEndPosSetOkCreate</STRONG> (Thumb, 802 bytes, Stack size 64 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = _WinEndPosSetOkCreate &rArr; LISTBOX_SetOwnerDraw &rArr; LISTBOX_InvalidateItem &rArr; LISTBOX_UpdateScrollers &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_unicode_to_utf8_str
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwnerDraw
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawRoundedRectEx
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrShowClear
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_txt
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1fb]"></a>_WinEndPosSetOkDestroy</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinEndPosSetOkDestroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[97]"></a>_WinEndPosParaMenuCallback</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = _WinEndPosParaMenuCallback &rArr; _WinEndPosParaMenuKeyEnter &rArr; WIN_Enter &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuKeyEnter
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuKeyUp
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinEndPosParaMenuKeyDown
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.text)
</UL>
<P><STRONG><a name="[1fc]"></a>_WinEndPosParaMenuCreate</STRONG> (Thumb, 790 bytes, Stack size 64 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = _WinEndPosParaMenuCreate &rArr; LISTBOX_SetOwnerDraw &rArr; LISTBOX_InvalidateItem &rArr; LISTBOX_UpdateScrollers &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc_unicode_to_utf8_str
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwnerDraw
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_SetBitmap
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EnableAlpha
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSkin
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateAsChild
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentCloseRefesh
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinMomentOpenRefresh
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedCloseRefresh
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WinSpeedOpenRefresh
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrShowClear
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_txt
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[1fd]"></a>_WinEndPosParaMenuDestroy</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, winwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WinEndPosParaMenuDestroy &rArr; WM_SetCallback &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> winwindow.o(.constdata)
</UL>
<P><STRONG><a name="[41d]"></a>_WinCommonSelectListOwnerDraw</STRONG> (Thumb, 294 bytes, Stack size 152 bytes, winwindow.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeX_CommonList
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY_CommonList
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemText
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemSel
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemDisabled
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRectEx
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[41e]"></a>_GetItemSizeX_CommonList</STRONG> (Thumb, 34 bytes, Stack size 120 bytes, winskin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemText
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
</UL>

<P><STRONG><a name="[41f]"></a>_GetItemSizeY_CommonList3</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, winskin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
</UL>

<P><STRONG><a name="[420]"></a>_GetItemSizeY_CommonList</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, winskin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
</UL>

<P><STRONG><a name="[421]"></a>DrawGradientV_PointWhite</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, winskin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
</UL>

<P><STRONG><a name="[9c]"></a>App_TaskUART2</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = App_TaskUART2 &rArr; Init_DMA &rArr; ADC_Init &rArr; CGU_GetPCLKFrequency &rArr; CGU_UpdateClock
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_States
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_DMA
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_temperature
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[9b]"></a>App_TaskUART0</STRONG> (Thumb, 592 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = App_TaskUART0 &rArr; UART0_Init &rArr; UART_Init &rArr; uart_set_divisors &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_eeprom
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_enty_allclose_pc_local
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_enty_allclose_close_open
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_PC
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_OPEN
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_LOCAL
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_CLOSE
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCOM_Usb2Serial
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_init
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restart_Encoder_Init
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restart_Encoder
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RUN_OPEN
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RUN_CLOSE
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_States
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI0
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EESPI0
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_set_IO
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_set
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out_test
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_out
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extern_in
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternOUT_Init
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternIN_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[9a]"></a>App_TaskUART</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = App_TaskUART &rArr; UART3_Init &rArr; UART_Init &rArr; uart_set_divisors &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_hand
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_uart3
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RUN_ele_time
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RUN_Coils_time
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Timer2
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Timer1
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_States
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[99]"></a>App_TaskGUI</STRONG> (Thumb, 276 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = App_TaskGUI &rArr; GUI_Exec &rArr; WM_Exec &rArr; _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InterDataRefresh
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InterDataInit
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_drive_Init
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_ContextInit
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SendKeyMsg
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_WindowsTreeInit
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrientation
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx_I
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_mlx
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCOWM_SetPWM
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_MLX90363
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[98]"></a>App_TaskStates</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 300 + Unknown Stack Size
<LI>Call Chain = App_TaskStates &rArr; c_entry_Encoder2 &rArr; graytobinary
</UL>
<BR>[Calls]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_control
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hand_Init
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_init
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_Encoder2
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_AO1
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry_AI1
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Init
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_error_data
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_States
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI0
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Encoder
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EESPI0_ADDA
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_out
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[9d]"></a>App_TaskStart</STRONG> (Thumb, 244 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = App_TaskStart &rArr; OSTaskCreateExt &rArr; OS_TCBInit &rArr; OSTCBInitHook
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskNameSet
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatInit
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SysTickInit
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[466]"></a>App_TaskTouch</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
</UL>

<P><STRONG><a name="[46e]"></a>SysTick_Config</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SysTick_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LED
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_States
</UL>

<P><STRONG><a name="[47b]"></a>ssp_xfer_byte</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_block_erase
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_whole_erase
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sector
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data_old
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_id
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_status
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_enable
</UL>

<P><STRONG><a name="[47c]"></a>flash_write_enable</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_status
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssp_xfer_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_block_erase
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_whole_erase
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sector
</UL>

<P><STRONG><a name="[49f]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usart_conf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
</UL>

<P><STRONG><a name="[4a0]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, usart_conf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
</UL>

<P><STRONG><a name="[4be]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, encoder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Init
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>

<P><STRONG><a name="[4bd]"></a>SysTick_Config</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, encoder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restart_Encoder_Init
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Encoder
</UL>

<P><STRONG><a name="[4c1]"></a>SysTick_Config</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, extern.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SysTick_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternOUT_Init
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternIN_Init
</UL>

<P><STRONG><a name="[4d4]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Timer3
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Init
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Timer2
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Timer1
</UL>

<P><STRONG><a name="[4d5]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Timer3
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Init
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Timer2
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Timer1
</UL>

<P><STRONG><a name="[4db]"></a>SysTick_Config</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, hand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SysTick_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;poweron_Init
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hand_Init
</UL>

<P><STRONG><a name="[568]"></a>_DoInit</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, segger_rtt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _DoInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_ConfigUpBuffer
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_TerminalOut
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_SetTerminal
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Init
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_SetFlagsDownBuffer
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_SetFlagsUpBuffer
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_SetNameDownBuffer
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_SetNameUpBuffer
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_ConfigDownBuffer
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_AllocUpBuffer
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_AllocDownBuffer
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_HasKey
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_PutChar
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_PutCharSkip
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteDownBuffer
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_ReadNoLock
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_ReadUpBufferNoLock
</UL>

<P><STRONG><a name="[569]"></a>_WriteBlocking</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, segger_rtt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_TerminalOut
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_SetTerminal
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteDownBufferNoLock
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PostTerminalSwitch
</UL>

<P><STRONG><a name="[56a]"></a>_WriteNoCheck</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, segger_rtt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_SetTerminal
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteDownBufferNoLock
</UL>

<P><STRONG><a name="[56b]"></a>_PostTerminalSwitch</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, segger_rtt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteBlocking
</UL>
<BR>[Called By]<UL><LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_TerminalOut
</UL>

<P><STRONG><a name="[573]"></a>_GetAvailWriteSpace</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, segger_rtt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetAvailWriteSpace
</UL>
<BR>[Called By]<UL><LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_GetAvailWriteSpace
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_TerminalOut
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_SetTerminal
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteDownBufferNoLock
</UL>

<P><STRONG><a name="[587]"></a>_DrawCharAA4_NoTrans</STRONG> (Thumb, 138 bytes, Stack size 48 bytes, GUIAA_Char4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _DrawCharAA4_NoTrans &rArr; GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA4
</UL>

<P><STRONG><a name="[17]"></a>_DrawCharAA4_Trans</STRONG> (Thumb, 106 bytes, Stack size 48 bytes, GUIAA_Char4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _DrawCharAA4_Trans &rArr; LCD_SetPixelAA4_Trans &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCharAA4_TransCust
</UL>
<BR>[Address Reference Count : 2]<UL><LI> GUIAA_Char4.o(.text)
<LI> GUIAA_Char4.o(.data)
</UL>
<P><STRONG><a name="[a2]"></a>_DrawCharAA4_TransCust</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, GUIAA_Char4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _DrawCharAA4_TransCust &rArr; _DrawCharAA4_Trans &rArr; LCD_SetPixelAA4_Trans &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCharAA4_Trans
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIAA_Char4.o(.text)
</UL>
<P><STRONG><a name="[592]"></a>_FillCircle</STRONG> (Thumb, 190 bytes, Stack size 40 bytes, GUIAA_Circle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _FillCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircleAA_HiRes
</UL>

<P><STRONG><a name="[58e]"></a>_FillEllipse</STRONG> (Thumb, 216 bytes, Stack size 56 bytes, GUIAA_Circle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillEllipse
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillEllipseAA_HiRes
</UL>

<P><STRONG><a name="[59d]"></a>_DrawRoundedRect</STRONG> (Thumb, 540 bytes, Stack size 96 bytes, GUIAA_DrawRoundedRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _DrawRoundedRect
</UL>
<BR>[Called By]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawRoundedRect
</UL>

<P><STRONG><a name="[59f]"></a>_FillRoundedRect</STRONG> (Thumb, 244 bytes, Stack size 48 bytes, GUIAA_FillRoundedRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _FillRoundedRect
</UL>
<BR>[Called By]<UL><LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
</UL>

<P><STRONG><a name="[5a2]"></a>_CalcClipRectHL</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, GUIAA_Lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _CalcClipRectHL &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
</UL>

<P><STRONG><a name="[a5]"></a>_DrawHLine</STRONG> (Thumb, 258 bytes, Stack size 32 bytes, GUIAA_Lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _DrawHLine &rArr; _FlushLine &rArr; LCD_SetPixelAA4_Trans &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIAA_Lib.o(.text)
</UL>
<P><STRONG><a name="[5a0]"></a>_FlushLine</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, GUIAA_Lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _FlushLine &rArr; LCD_SetPixelAA4_Trans &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
</UL>

<P><STRONG><a name="[a4]"></a>_OnExit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, GUIAA_Lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIAA_Lib.o(.text)
</UL>
<P><STRONG><a name="[5a3]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, GUIAA_Lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcClipRectHL
</UL>

<P><STRONG><a name="[5aa]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIAA_Lib.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DisableHiRes
</UL>

<P><STRONG><a name="[16e]"></a>_Color2IndexBulk</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, GUICC_888.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2IndexBulk
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUICC_888.o(.rodata)
</UL>
<P><STRONG><a name="[16c]"></a>_Color2Index_888</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUICC_888.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUICC_888.o(.rodata)
</UL>
<P><STRONG><a name="[16d]"></a>_GetIndexMask_888</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUICC_888.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUICC_888.o(.rodata)
</UL>
<P><STRONG><a name="[16f]"></a>_Index2ColorBulk</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, GUICC_888.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBulk
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUICC_888.o(.rodata)
</UL>
<P><STRONG><a name="[5b1]"></a>_AddFreeMemory</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, GUI_Alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtrArray
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[5b7]"></a>_Alloc</STRONG> (Thumb, 400 bytes, Stack size 56 bytes, GUI_Alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + In Cycle
<LI>Call Chain = _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PushFreeBlock
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
</UL>

<P><STRONG><a name="[5b6]"></a>_EnlargeBlocks</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, GUI_Alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[5b9]"></a>_InitOnce</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, GUI_Alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[5ba]"></a>_PushFreeBlock</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, GUI_Alloc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtrArray
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[5b2]"></a>_RemoveFreeBlock</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, GUI_Alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _RemoveFreeBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[5b3]"></a>_RemoveHoles</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, GUI_Alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _RemoveHoles &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[5b5]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, GUI_Alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
</UL>

<P><STRONG><a name="[5bb]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, GUI_Alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[5be]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_Alloc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>

<P><STRONG><a name="[5c5]"></a>_DrawArc</STRONG> (Thumb, 722 bytes, Stack size 80 bytes, GUI_Arc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SinHQ
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CosHQ
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ceil
</UL>
<BR>[Called By]<UL><LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawArc
</UL>

<P><STRONG><a name="[5d0]"></a>Draw8Point</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, GUI_Circ.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawCircle
</UL>

<P><STRONG><a name="[5d2]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, GUI_Circ.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillEllipse
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircle
</UL>

<P><STRONG><a name="[a7]"></a>_OnExit</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, GUI_Core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _OnExit &rArr; GUI__memset
</UL>
<BR>[Calls]<UL><LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_Core.o(.text)
</UL>
<P><STRONG><a name="[170]"></a>_DrawBitmap</STRONG> (Thumb, 12 bytes, Stack size 32 bytes, GUI_DrawBitmap_555.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = _DrawBitmap &rArr; [Anonymous Symbol] &rArr; GUI__DrawBitmap16bpp &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_DrawBitmap_555.o(.rodata)
</UL>
<P><STRONG><a name="[171]"></a>_DrawBitmapSwapRB</STRONG> (Thumb, 16 bytes, Stack size 32 bytes, GUI_DrawBitmap_555.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = _DrawBitmapSwapRB &rArr; [Anonymous Symbol] &rArr; GUI__DrawBitmap16bpp &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_DrawBitmap_555.o(.rodata)
</UL>
<P><STRONG><a name="[5ed]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, GUI_DrawBitmap_555.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = [Anonymous Symbol] &rArr; GUI__DrawBitmap16bpp &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapSwapRB
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[5f2]"></a>_DrawBitmap</STRONG> (Thumb, 1132 bytes, Stack size 88 bytes, GUI_DrawBitmap_8888.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _DrawBitmap &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[173]"></a>_DrawBitmapHW_8888</STRONG> (Thumb, 212 bytes, Stack size 48 bytes, GUI_DrawBitmap_8888.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _DrawBitmapHW_8888
</UL>
<BR>[Calls]<UL><LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_DrawBitmap_8888.o(.rodata)
</UL>
<P><STRONG><a name="[172]"></a>_DrawBitmap_8888</STRONG> (Thumb, 14 bytes, Stack size 32 bytes, GUI_DrawBitmap_8888.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _DrawBitmap_8888 &rArr; [Anonymous Symbol] &rArr; _DrawBitmap &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_DrawBitmap_8888.o(.rodata)
</UL>
<P><STRONG><a name="[174]"></a>_DrawBitmap_M8888I</STRONG> (Thumb, 12 bytes, Stack size 32 bytes, GUI_DrawBitmap_8888.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DrawBitmap_M8888I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_DrawBitmap_8888.o(.rodata)
</UL>
<P><STRONG><a name="[1]"></a>_SetPixelAlpha</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, GUI_DrawBitmap_8888.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _SetPixelAlpha &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 2]<UL><LI> GUI_DrawBitmap_8888.o(.text)
<LI> GUI_DrawBitmap_8888.o(.data)
</UL>
<P><STRONG><a name="[ae]"></a>_SetPixelAlphaMask</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, GUI_DrawBitmap_8888.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _SetPixelAlphaMask &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_DrawBitmap_8888.o(.text)
</UL>
<P><STRONG><a name="[5f0]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, GUI_DrawBitmap_8888.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelAlpha
</UL>

<P><STRONG><a name="[5f5]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 88 bytes, GUI_DrawBitmap_8888.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[5f6]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, GUI_DrawBitmap_8888.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = [Anonymous Symbol] &rArr; _DrawBitmap &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_8888
</UL>

<P><STRONG><a name="[5f9]"></a>_DrawGradient</STRONG> (Thumb, 386 bytes, Stack size 80 bytes, GUI_DrawGradient.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _DrawGradient &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
</UL>

<P><STRONG><a name="[5fa]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, GUI_DrawGradient.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
</UL>

<P><STRONG><a name="[5fb]"></a>_DrawGradientRounded</STRONG> (Thumb, 298 bytes, Stack size 88 bytes, GUI_DrawGradientRounded.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _DrawGradientRounded &rArr; GUI_GetColor
</UL>
<BR>[Calls]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientRoundedH
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientRoundedV
</UL>

<P><STRONG><a name="[5fc]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, GUI_DrawGradientRounded.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientRoundedV
</UL>

<P><STRONG><a name="[602]"></a>_SetLineColor</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, GUI_DrawLine.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
</UL>

<P><STRONG><a name="[607]"></a>_atan2</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, GUI_DrawLine.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[603]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, GUI_DrawLine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
</UL>

<P><STRONG><a name="[606]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, GUI_DrawLine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[610]"></a>_DrawRoundedRect</STRONG> (Thumb, 272 bytes, Stack size 72 bytes, GUI_DrawRoundedRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _DrawRoundedRect &rArr; LCD_DrawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedRect
</UL>

<P><STRONG><a name="[b1]"></a>_Color2Index</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, GUI_EnableAlpha.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_EnableAlpha.o(.text)
</UL>
<P><STRONG><a name="[b4]"></a>_Color2IndexBulk</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, GUI_EnableAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_EnableAlpha.o(.text)
</UL>
<P><STRONG><a name="[b6]"></a>_DrawBitmap</STRONG> (Thumb, 276 bytes, Stack size 72 bytes, GUI_EnableAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = _DrawBitmap &rArr; _ManageAlpha &rArr; GUI_SetAlpha &rArr; _InitAlpha &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAlpha
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_EnableAlpha.o(.text)
</UL>
<P><STRONG><a name="[b7]"></a>_DrawHLine</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, GUI_EnableAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_EnableAlpha.o(.text)
</UL>
<P><STRONG><a name="[b8]"></a>_DrawVLine</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, GUI_EnableAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _DrawVLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_EnableAlpha.o(.text)
</UL>
<P><STRONG><a name="[b9]"></a>_FillRect</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, GUI_EnableAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_EnableAlpha.o(.text)
</UL>
<P><STRONG><a name="[c0]"></a>_GetDevData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_EnableAlpha.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_EnableAlpha.o(.text)
</UL>
<P><STRONG><a name="[be]"></a>_GetDevFunc</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, GUI_EnableAlpha.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_EnableAlpha.o(.text)
</UL>
<P><STRONG><a name="[bf]"></a>_GetDevProp</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_EnableAlpha.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_EnableAlpha.o(.text)
</UL>
<P><STRONG><a name="[b3]"></a>_GetIndexMask</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, GUI_EnableAlpha.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_EnableAlpha.o(.text)
</UL>
<P><STRONG><a name="[ba]"></a>_GetPixelIndex</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_EnableAlpha.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_EnableAlpha.o(.text)
</UL>
<P><STRONG><a name="[c1]"></a>_GetRect</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_EnableAlpha.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_EnableAlpha.o(.text)
</UL>
<P><STRONG><a name="[b2]"></a>_Index2Color</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, GUI_EnableAlpha.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_EnableAlpha.o(.text)
</UL>
<P><STRONG><a name="[b5]"></a>_Index2ColorBulk</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, GUI_EnableAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_EnableAlpha.o(.text)
</UL>
<P><STRONG><a name="[611]"></a>_ManageAlpha</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, GUI_EnableAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = _ManageAlpha &rArr; GUI_SetAlpha &rArr; _InitAlpha &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetDrawMode
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetColor
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkColor
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[b0]"></a>_OnExit</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, GUI_EnableAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_EnableAlpha.o(.text)
</UL>
<P><STRONG><a name="[c3]"></a>_SetBkColor</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, GUI_EnableAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _SetBkColor &rArr; _ManageAlpha &rArr; GUI_SetAlpha &rArr; _InitAlpha &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAlpha
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_EnableAlpha.o(.text)
</UL>
<P><STRONG><a name="[c2]"></a>_SetColor</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, GUI_EnableAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _SetColor &rArr; _ManageAlpha &rArr; GUI_SetAlpha &rArr; _InitAlpha &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAlpha
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_EnableAlpha.o(.text)
</UL>
<P><STRONG><a name="[c4]"></a>_SetDrawMode</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, GUI_EnableAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _SetDrawMode &rArr; _ManageAlpha &rArr; GUI_SetAlpha &rArr; _InitAlpha &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAlpha
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_EnableAlpha.o(.text)
</UL>
<P><STRONG><a name="[bd]"></a>_SetOrg</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_EnableAlpha.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_EnableAlpha.o(.text)
</UL>
<P><STRONG><a name="[bb]"></a>_SetPixelIndex</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, GUI_EnableAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetPixelIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_EnableAlpha.o(.text)
</UL>
<P><STRONG><a name="[bc]"></a>_XorPixel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_EnableAlpha.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_EnableAlpha.o(.text)
</UL>
<P><STRONG><a name="[613]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 72 bytes, GUI_EnableAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[61a]"></a>_IncPointer</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, GUI_OnKey.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearKeyBuffer
</UL>

<P><STRONG><a name="[cc]"></a>_DrawBitmap</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, GUI_SetOrientation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientation.o(.text)
</UL>
<P><STRONG><a name="[cd]"></a>_DrawHLine</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, GUI_SetOrientation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientation.o(.text)
</UL>
<P><STRONG><a name="[ce]"></a>_DrawVLine</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, GUI_SetOrientation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _DrawVLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientation.o(.text)
</UL>
<P><STRONG><a name="[cf]"></a>_FillRect</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, GUI_SetOrientation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientation.o(.text)
</UL>
<P><STRONG><a name="[d6]"></a>_GetDevData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI_SetOrientation.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientation.o(.text)
</UL>
<P><STRONG><a name="[d4]"></a>_GetDevFunc</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, GUI_SetOrientation.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientation.o(.text)
</UL>
<P><STRONG><a name="[d5]"></a>_GetDevProp</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, GUI_SetOrientation.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientation.o(.text)
</UL>
<P><STRONG><a name="[d0]"></a>_GetPixelIndex</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI_SetOrientation.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientation.o(.text)
</UL>
<P><STRONG><a name="[d7]"></a>_GetRect</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, GUI_SetOrientation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientation.o(.text)
</UL>
<P><STRONG><a name="[c8]"></a>_Log2Phys_S</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_SetOrientation.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientation.o(.text)
</UL>
<P><STRONG><a name="[c9]"></a>_Log2Phys_SX</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI_SetOrientation.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientation.o(.text)
</UL>
<P><STRONG><a name="[cb]"></a>_Log2Phys_SXY</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, GUI_SetOrientation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Log2Phys_SXY
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientation.o(.text)
</UL>
<P><STRONG><a name="[ca]"></a>_Log2Phys_SY</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, GUI_SetOrientation.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientation.o(.text)
</UL>
<P><STRONG><a name="[c5]"></a>_Log2Phys_X</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, GUI_SetOrientation.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientation.o(.text)
</UL>
<P><STRONG><a name="[c7]"></a>_Log2Phys_XY</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, GUI_SetOrientation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Log2Phys_XY &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientation.o(.text)
</UL>
<P><STRONG><a name="[c6]"></a>_Log2Phys_Y</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, GUI_SetOrientation.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientation.o(.text)
</UL>
<P><STRONG><a name="[d3]"></a>_SetOrg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI_SetOrientation.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientation.o(.text)
</UL>
<P><STRONG><a name="[d1]"></a>_SetPixelIndex</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, GUI_SetOrientation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetPixelIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientation.o(.text)
</UL>
<P><STRONG><a name="[d2]"></a>_XorPixel</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI_SetOrientation.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientation.o(.text)
</UL>
<P><STRONG><a name="[61e]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, GUI_SetOrientation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Log2Phys_XY
</UL>

<P><STRONG><a name="[61f]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_SetOrientation.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Log2Phys_S
</UL>

<P><STRONG><a name="[da]"></a>_CalcSizeOfChar</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, GUI_UC_EncodeUTF8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_UC_EncodeUTF8.o(.text)
</UL>
<P><STRONG><a name="[db]"></a>_Encode</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, GUI_UC_EncodeUTF8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_UC_EncodeUTF8.o(.text)
</UL>
<P><STRONG><a name="[d8]"></a>_GetCharCode</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, GUI_UC_EncodeUTF8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_UC_EncodeUTF8.o(.text)
</UL>
<P><STRONG><a name="[d9]"></a>_GetCharSize</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, GUI_UC_EncodeUTF8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_UC_EncodeUTF8.o(.text)
</UL>
<P><STRONG><a name="[62b]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, GUI_Val.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecShift
</UL>

<P><STRONG><a name="[631]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, GUI_Val.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>
<BR>[Called By]<UL><LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecMin
</UL>

<P><STRONG><a name="[636]"></a>_GetDevProp</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[637]"></a>_GetMaxValue</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetMaxValue
</UL>
<BR>[Calls]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeMax
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelMax
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeMax
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeMax
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
</UL>

<P><STRONG><a name="[638]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = [Anonymous Symbol] &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
</UL>

<P><STRONG><a name="[639]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = [Anonymous Symbol] &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
</UL>

<P><STRONG><a name="[63a]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = [Anonymous Symbol] &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeEx
</UL>

<P><STRONG><a name="[63b]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = [Anonymous Symbol] &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeEx
</UL>

<P><STRONG><a name="[63c]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = [Anonymous Symbol] &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
</UL>

<P><STRONG><a name="[63e]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = [Anonymous Symbol] &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColorsEx
</UL>

<P><STRONG><a name="[640]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXMagEx
</UL>

<P><STRONG><a name="[642]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD_GetEx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYMagEx
</UL>

<P><STRONG><a name="[644]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = [Anonymous Symbol] &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorXEx
</UL>

<P><STRONG><a name="[646]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = [Anonymous Symbol] &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorYEx
</UL>

<P><STRONG><a name="[648]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = [Anonymous Symbol] &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
</UL>

<P><STRONG><a name="[64a]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, LCD_GetEx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPaletteEx
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
</UL>

<P><STRONG><a name="[e9]"></a>_CopyBuffer</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _CopyBuffer &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text)
</UL>
<P><STRONG><a name="[66e]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 248 bytes, Stack size 32 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[66f]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _DrawBitLine2BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[670]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _DrawBitLine4BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[671]"></a>_DrawBitLine8BPP</STRONG> (Thumb, 256 bytes, Stack size 8 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _DrawBitLine8BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[175]"></a>_DrawBitmap</STRONG> (Thumb, 344 bytes, Stack size 56 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.rodata)
</UL>
<P><STRONG><a name="[176]"></a>_DrawHLine</STRONG> (Thumb, 6 bytes, Stack size 8 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DrawHLine &rArr; [Anonymous Symbol] &rArr; _FillRect &rArr; _FillRectOpt32
</UL>
<BR>[Calls]<UL><LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.rodata)
</UL>
<P><STRONG><a name="[177]"></a>_DrawVLine</STRONG> (Thumb, 6 bytes, Stack size 8 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _DrawVLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.rodata)
</UL>
<P><STRONG><a name="[178]"></a>_FillRect</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _FillRect &rArr; _FillRectOpt32
</UL>
<BR>[Calls]<UL><LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRectOpt32
</UL>
<BR>[Called By]<UL><LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.rodata)
</UL>
<P><STRONG><a name="[66b]"></a>_FillRectOpt32</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _FillRectOpt32
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>

<P><STRONG><a name="[17f]"></a>_GetDevData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUIDRV_Lin_32.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.rodata)
</UL>
<P><STRONG><a name="[17d]"></a>_GetDevFunc</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, GUIDRV_Lin_32.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.rodata)
</UL>
<P><STRONG><a name="[17e]"></a>_GetDevProp</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, GUIDRV_Lin_32.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.rodata)
</UL>
<P><STRONG><a name="[179]"></a>_GetPixelIndex</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, GUIDRV_Lin_32.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.rodata)
</UL>
<P><STRONG><a name="[e0]"></a>_GetPos</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _GetPos &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text)
</UL>
<P><STRONG><a name="[180]"></a>_GetRect</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, GUIDRV_Lin_32.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.rodata)
</UL>
<P><STRONG><a name="[e3]"></a>_Init</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _Init &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text)
</UL>
<P><STRONG><a name="[668]"></a>_InitOnce</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowBuffer
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVis
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVSize
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVRAMAddr
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAlpha
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Init
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyBuffer
</UL>

<P><STRONG><a name="[e5]"></a>_Off</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _Off &rArr; LCD_X_DisplayDriver &rArr; Lcd_drive_Init &rArr; MCOWM_SetPWM &rArr; MCPWM_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text)
</UL>
<P><STRONG><a name="[e4]"></a>_On</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _On &rArr; LCD_X_DisplayDriver &rArr; Lcd_drive_Init &rArr; MCOWM_SetPWM &rArr; MCPWM_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text)
</UL>
<P><STRONG><a name="[ec]"></a>_ReadRect</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ReadRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text)
</UL>
<P><STRONG><a name="[e1]"></a>_SetAlpha</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _SetAlpha &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text)
</UL>
<P><STRONG><a name="[e6]"></a>_SetAlphaMode</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _SetAlphaMode &rArr; [Anonymous Symbol] &rArr; LCD_X_DisplayDriver &rArr; Lcd_drive_Init &rArr; MCOWM_SetPWM &rArr; MCPWM_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text)
</UL>
<P><STRONG><a name="[e8]"></a>_SetChroma</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _SetChroma &rArr; LCD_X_DisplayDriver &rArr; Lcd_drive_Init &rArr; MCOWM_SetPWM &rArr; MCPWM_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text)
</UL>
<P><STRONG><a name="[e7]"></a>_SetChromaMode</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetChromaMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text)
</UL>
<P><STRONG><a name="[eb]"></a>_SetDevFunc</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _SetDevFunc &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text)
</UL>
<P><STRONG><a name="[17c]"></a>_SetOrg</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _SetOrg &rArr; LCD_X_DisplayDriver &rArr; Lcd_drive_Init &rArr; MCOWM_SetPWM &rArr; MCPWM_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorYEx
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorXEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.rodata)
</UL>
<P><STRONG><a name="[17a]"></a>_SetPixelIndex</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, GUIDRV_Lin_32.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.rodata)
</UL>
<P><STRONG><a name="[df]"></a>_SetPos</STRONG> (Thumb, 286 bytes, Stack size 64 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _SetPos &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeDisplay
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text)
</UL>
<P><STRONG><a name="[de]"></a>_SetSize</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _SetSize &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text)
</UL>
<P><STRONG><a name="[dc]"></a>_SetVRAMAddr</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _SetVRAMAddr &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text)
</UL>
<P><STRONG><a name="[dd]"></a>_SetVSize</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _SetVSize &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text)
</UL>
<P><STRONG><a name="[e2]"></a>_SetVis</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _SetVis &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text)
</UL>
<P><STRONG><a name="[ea]"></a>_ShowBuffer</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _ShowBuffer &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.text)
</UL>
<P><STRONG><a name="[17b]"></a>_XorPixel</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _XorPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDRV_Lin_32.o(.rodata)
</UL>
<P><STRONG><a name="[669]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
</UL>

<P><STRONG><a name="[66a]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = [Anonymous Symbol] &rArr; LCD_X_DisplayDriver &rArr; Lcd_drive_Init &rArr; MCOWM_SetPWM &rArr; MCPWM_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAlphaMode
</UL>

<P><STRONG><a name="[66c]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = [Anonymous Symbol] &rArr; _FillRect &rArr; _FillRectOpt32
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>

<P><STRONG><a name="[66d]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, GUIDRV_Lin_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[68b]"></a>_OnButtonPressed</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, BUTTON.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _OnButtonPressed &rArr; WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[68e]"></a>_OnButtonReleased</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, BUTTON.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _OnButtonReleased &rArr; WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchReactOnLevel
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
</UL>

<P><STRONG><a name="[ee]"></a>_OnPidStateChange</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, BUTTON.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _OnPidStateChange &rArr; [Anonymous Symbol] &rArr; _OnButtonPressed &rArr; WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> BUTTON.o(.text)
</UL>
<P><STRONG><a name="[19]"></a>_OnTouchDefault</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, BUTTON.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _OnTouchDefault &rArr; [Anonymous Symbol] &rArr; _OnButtonPressed &rArr; WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 2]<UL><LI> BUTTON.o(.text)
<LI> BUTTON.o(.data)
</UL>
<P><STRONG><a name="[ed]"></a>_OnTouchReactOnLevel</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, BUTTON.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _OnTouchReactOnLevel &rArr; _OnButtonReleased &rArr; WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> BUTTON.o(.text)
</UL>
<P><STRONG><a name="[690]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, BUTTON.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = [Anonymous Symbol] &rArr; _OnButtonPressed &rArr; WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
</UL>

<P><STRONG><a name="[693]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, BUTTON.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = [Anonymous Symbol] &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
</UL>

<P><STRONG><a name="[6a3]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, BUTTON_Bitmap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = [Anonymous Symbol] &rArr; BUTTON__SetDrawObj &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW_BITMAP_Create
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetBitmapEx
</UL>

<P><STRONG><a name="[6a7]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, BUTTON_Create.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Create
</UL>

<P><STRONG><a name="[1b]"></a>_Create</STRONG> (Thumb, 48 bytes, Stack size 56 bytes, BUTTON_Skin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> BUTTON_Skin.o(.data)
</UL>
<P><STRONG><a name="[1a]"></a>_Paint</STRONG> (Thumb, 122 bytes, Stack size 64 bytes, BUTTON_Skin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _Paint &rArr; WM_GetWindowSizeX &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> BUTTON_Skin.o(.data)
</UL>
<P><STRONG><a name="[f1]"></a>_Create</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, BUTTON_SkinClassic.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> BUTTON_SkinClassic.o(.text)
</UL>
<P><STRONG><a name="[f0]"></a>_Paint</STRONG> (Thumb, 334 bytes, Stack size 56 bytes, BUTTON_SkinClassic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> BUTTON_SkinClassic.o(.text)
</UL>
<P><STRONG><a name="[6c9]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, DIALOG.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
</UL>
<BR>[Called By]<UL><LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecCreatedDialog
</UL>

<P><STRONG><a name="[6e2]"></a>_ChangeCharacter</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, EDIT.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _ChangeCharacter &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr;  WM__SendMessage (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__CalcSizeOfChar
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_Encode
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
</UL>

<P><STRONG><a name="[6d9]"></a>_DeleteChar</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, EDIT.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _DeleteChar &rArr; [Anonymous Symbol] &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr;  WM__SendMessage (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharSize
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
</UL>

<P><STRONG><a name="[6d7]"></a>_IncrementBuffer</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, EDIT.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Called By]<UL><LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
</UL>

<P><STRONG><a name="[6dd]"></a>_InsertChar</STRONG> (Thumb, 230 bytes, Stack size 40 bytes, EDIT.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _InsertChar &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__CalcSizeOfChar
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_Encode
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
</UL>

<P><STRONG><a name="[6cc]"></a>_InvertRect</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, EDIT.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _InvertRect &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelIndex
<LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelIndex
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
</UL>
<BR>[Called By]<UL><LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[6cf]"></a>_Paint</STRONG> (Thumb, 574 bytes, Stack size 72 bytes, EDIT.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; WIDGET__FillStringInRect &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetCursorPosX
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetCursorCharacter
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CalcTextRect
<LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvertRect
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
</UL>

<P><STRONG><a name="[6e1]"></a>_SetValue</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, EDIT.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _SetValue &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetValueUnsigned
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>

<P><STRONG><a name="[6dc]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, EDIT.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = [Anonymous Symbol] &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr;  WM__SendMessage (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
</UL>

<P><STRONG><a name="[6e0]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, EDIT.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
</UL>

<P><STRONG><a name="[6eb]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, EDIT.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
</UL>

<P><STRONG><a name="[f4]"></a>_AddKeyDec</STRONG> (Thumb, 264 bytes, Stack size 16 bytes, EDITDec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _AddKeyDec &rArr; _EditDec &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateBuffer
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementCursor
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EditDec
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddPosition
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__GetCurrentChar
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> EDITDec.o(.text)
</UL>
<P><STRONG><a name="[6fa]"></a>_AddPosition</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, EDITDec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _AddPosition &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
</UL>

<P><STRONG><a name="[6f8]"></a>_EditDec</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, EDITDec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _EditDec &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
</UL>

<P><STRONG><a name="[6fb]"></a>_GetDecs</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, EDITDec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetDecs
</UL>
<BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
</UL>

<P><STRONG><a name="[6f9]"></a>_IncrementCursor</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, EDITDec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _IncrementCursor &rArr; EDIT__SetCursorPos &rArr; GUI__GetNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__GetCurrentChar
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
</UL>

<P><STRONG><a name="[f5]"></a>_UpdateBuffer</STRONG> (Thumb, 256 bytes, Stack size 24 bytes, EDITDec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _UpdateBuffer &rArr; GUI_AddDecShift
</UL>
<BR>[Calls]<UL><LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddSign
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> EDITDec.o(.text)
</UL>
<P><STRONG><a name="[f7]"></a>FRAMEWIN__cbClient</STRONG> (Thumb, 208 bytes, Stack size 48 bytes, FRAMEWIN.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = FRAMEWIN__cbClient &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; WM__InvalidateParent &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> FRAMEWIN.o(.text)
</UL>
<P><STRONG><a name="[6fd]"></a>_SetActive</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, FRAMEWIN.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _SetActive &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetActive
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
</UL>

<P><STRONG><a name="[6ff]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, FRAMEWIN.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
</UL>

<P><STRONG><a name="[70b]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 80 bytes, FRAMEWIN.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
</UL>

<P><STRONG><a name="[71b]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, FRAMEWIN_Create.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Create
</UL>

<P><STRONG><a name="[fa]"></a>_Paint</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, IMAGE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Paint
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> IMAGE.o(.text)
</UL>
<P><STRONG><a name="[f9]"></a>_PaintTiled</STRONG> (Thumb, 198 bytes, Stack size 56 bytes, IMAGE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _PaintTiled &rArr; GUI_MEMDEV_WriteAt &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeY
<LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeX
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> IMAGE.o(.text)
</UL>
<P><STRONG><a name="[722]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, IMAGE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTiled
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_Callback
</UL>

<P><STRONG><a name="[72c]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, IMAGE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateEx
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMAGE_CreateUser
</UL>

<P><STRONG><a name="[fb]"></a>_DrawImageAt</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, IMAGE_Bitmap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _DrawImageAt &rArr; GUI_DrawBitmap &rArr; GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> IMAGE_Bitmap.o(.text)
</UL>
<P><STRONG><a name="[fc]"></a>_GetImageSize</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, IMAGE_Bitmap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetImageSize
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> IMAGE_Bitmap.o(.text)
</UL>
<P><STRONG><a name="[74b]"></a>_AddKey</STRONG> (Thumb, 366 bytes, Stack size 56 bytes, LISTBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = _AddKey &rArr; _MoveSel &rArr; LISTBOX_UpdateScrollers &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollValue
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddKey
</UL>

<P><STRONG><a name="[732]"></a>_GetContentsSizeX</STRONG> (Thumb, 162 bytes, Stack size 88 bytes, LISTBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _GetContentsSizeX &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>

<P><STRONG><a name="[747]"></a>_GetItemFromPos</STRONG> (Thumb, 114 bytes, Stack size 48 bytes, LISTBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _GetItemFromPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[734]"></a>_GetItemPosY</STRONG> (Thumb, 192 bytes, Stack size 40 bytes, LISTBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _GetItemPosY &rArr; _GetItemSizeY &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>

<P><STRONG><a name="[730]"></a>_GetItemSizeY</STRONG> (Thumb, 126 bytes, Stack size 72 bytes, LISTBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _GetItemSizeY &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
</UL>

<P><STRONG><a name="[736]"></a>_GetNumVisItems</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, LISTBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _GetNumVisItems &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[748]"></a>_MoveSel</STRONG> (Thumb, 214 bytes, Stack size 56 bytes, LISTBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _MoveSel &rArr; LISTBOX_UpdateScrollers &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_IncSel
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DecSel
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[740]"></a>_OnPaint</STRONG> (Thumb, 280 bytes, Stack size 96 bytes, LISTBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = _OnPaint &rArr; GUI_ClearRectEx &rArr; GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[744]"></a>_ToggleMultiSel</STRONG> (Thumb, 146 bytes, Stack size 48 bytes, LISTBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _ToggleMultiSel &rArr; LISTBOX__InvalidateItem &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[738]"></a>_UpdateScrollPos</STRONG> (Thumb, 204 bytes, Stack size 64 bytes, LISTBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _UpdateScrollPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>

<P><STRONG><a name="[735]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, LISTBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
</UL>

<P><STRONG><a name="[749]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, LISTBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[74d]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, LISTBOX.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[75e]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, LISTBOX.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetText
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
</UL>

<P><STRONG><a name="[77e]"></a>_AddKey</STRONG> (Thumb, 318 bytes, Stack size 48 bytes, LISTVIEW.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = _AddKey &rArr; _OnPage &rArr; _MoveSel &rArr; LISTVIEW__SetSel &rArr; _UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollValue
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[77a]"></a>_ColumnScroll</STRONG> (Thumb, 428 bytes, Stack size 64 bytes, LISTVIEW.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _ColumnScroll &rArr; _UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSelCol
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollValue
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[788]"></a>_FreeAttached</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, LISTVIEW.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = _FreeAttached &rArr; GUI_ARRAY_Delete &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[77f]"></a>_GetNumVisibleRows</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, LISTVIEW.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _GetNumVisibleRows &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[770]"></a>_MoveSel</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, LISTVIEW.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _MoveSel &rArr; LISTVIEW__SetSel &rArr; _UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_RowIsDisabled
</UL>
<BR>[Called By]<UL><LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_IncSel
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DecSel
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[774]"></a>_MoveSelCol</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, LISTVIEW.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _MoveSelCol &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
</UL>
<BR>[Called By]<UL><LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
</UL>

<P><STRONG><a name="[776]"></a>_OnPage</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, LISTVIEW.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _OnPage &rArr; _MoveSel &rArr; LISTVIEW__SetSel &rArr; _UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>
<BR>[Called By]<UL><LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[782]"></a>_OnPaint</STRONG> (Thumb, 1204 bytes, Stack size 224 bytes, LISTVIEW.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = _OnPaint &rArr; _GetNumVisibleRows &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasFocus
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSel
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetWrapMode
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetRBorder
<LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetLBorder
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[787]"></a>_SetSelFromPos</STRONG> (Thumb, 302 bytes, Stack size 64 bytes, LISTVIEW.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _SetSelFromPos &rArr; LISTVIEW__SetSel &rArr; _UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[777]"></a>_UpdateScrollPos</STRONG> (Thumb, 104 bytes, Stack size 48 bytes, LISTVIEW.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollPos
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
</UL>
<BR>[Called By]<UL><LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSelCol
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[77c]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, LISTVIEW.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
</UL>

<P><STRONG><a name="[78c]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, LISTVIEW.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
</UL>

<P><STRONG><a name="[791]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, LISTVIEW.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = [Anonymous Symbol] &rArr; LISTVIEW__UpdateScrollParas &rArr; _UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateEx
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
</UL>

<P><STRONG><a name="[79c]"></a>_SetRowDisabled</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, LISTVIEW_DisableRow.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
</UL>
<BR>[Called By]<UL><LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_EnableRow
</UL>

<P><STRONG><a name="[79f]"></a>_GetSel</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, LISTVIEW_GetSel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSelCol
</UL>

<P><STRONG><a name="[7a4]"></a>_SetValue</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, PROGBAR.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _SetValue &rArr; GUI_AddDecMin &rArr; GUI_AddDecShift
</UL>
<BR>[Calls]<UL><LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
</UL>

<P><STRONG><a name="[7a9]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, PROGBAR.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
</UL>

<P><STRONG><a name="[7b2]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, PROGBAR_Create.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Create
</UL>

<P><STRONG><a name="[4]"></a>_Create</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, PROGBAR_Skin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PROGBAR_Skin.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>_Paint</STRONG> (Thumb, 318 bytes, Stack size 96 bytes, PROGBAR_Skin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = _Paint &rArr; WM_SetUserClipRect &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__Value2Pos
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextLocked
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PROGBAR_Skin.o(.data)
</UL>
<P><STRONG><a name="[7b3]"></a>_DrawBackground</STRONG> (Thumb, 232 bytes, Stack size 32 bytes, PROGBAR_SkinFlex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _DrawBackground &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
</UL>

<P><STRONG><a name="[7b5]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, PROGBAR_SkinFlex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetSkinFlexProps
<LI><a href="#[7b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_GetSkinFlexProps
</UL>

<P><STRONG><a name="[7b9]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, TEXT.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = [Anonymous Symbol] &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
</UL>

<P><STRONG><a name="[7bd]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, TEXT_Create.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Create
</UL>

<P><STRONG><a name="[7c1]"></a>_EffectRequiresRedraw</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, WIDGET.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _EffectRequiresRedraw &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Screen2Client
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
</UL>

<P><STRONG><a name="[7c9]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WIDGET.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetXSize
</UL>

<P><STRONG><a name="[18b]"></a>_DrawDown</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, WIDGET_Effect_None.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> WIDGET_Effect_None.o(.rodata)
</UL>
<P><STRONG><a name="[18c]"></a>_DrawDownRect</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, WIDGET_Effect_None.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> WIDGET_Effect_None.o(.rodata)
</UL>
<P><STRONG><a name="[18d]"></a>_DrawFlat</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, WIDGET_Effect_None.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> WIDGET_Effect_None.o(.rodata)
</UL>
<P><STRONG><a name="[189]"></a>_DrawUp</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, WIDGET_Effect_None.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> WIDGET_Effect_None.o(.rodata)
</UL>
<P><STRONG><a name="[18a]"></a>_DrawUpRect</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, WIDGET_Effect_None.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> WIDGET_Effect_None.o(.rodata)
</UL>
<P><STRONG><a name="[190]"></a>_DrawDown</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, WIDGET_Effect_Simple.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = _DrawDown &rArr; WM_GetClientRect
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WIDGET_Effect_Simple.o(.rodata)
</UL>
<P><STRONG><a name="[191]"></a>_DrawDownRect</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, WIDGET_Effect_Simple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDown
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WIDGET_Effect_Simple.o(.rodata)
</UL>
<P><STRONG><a name="[18e]"></a>_DrawUp</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, WIDGET_Effect_Simple.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _DrawUp &rArr; _DrawUpRect &rArr; [Anonymous Symbol] &rArr; GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WIDGET_Effect_Simple.o(.rodata)
</UL>
<P><STRONG><a name="[18f]"></a>_DrawUpRect</STRONG> (Thumb, 4 bytes, Stack size 8 bytes, WIDGET_Effect_Simple.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _DrawUpRect &rArr; [Anonymous Symbol] &rArr; GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WIDGET_Effect_Simple.o(.rodata)
</UL>
<P><STRONG><a name="[7d7]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 120 bytes, WIDGET_Effect_Simple.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = [Anonymous Symbol] &rArr; GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[7d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
</UL>

<P><STRONG><a name="[7dc]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, WINDOW.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_CreateUser
</UL>

<P><STRONG><a name="[7fe]"></a>WM__PaintWinAndOverlays</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = WM__PaintWinAndOverlays &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
<LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
</UL>

<P><STRONG><a name="[802]"></a>_Exec1Draw</STRONG> (Thumb, 112 bytes, Stack size 136 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = _Exec1Draw &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[7d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
<LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
</UL>

<P><STRONG><a name="[801]"></a>_Exec1Input</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, WM.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
</UL>

<P><STRONG><a name="[7f9]"></a>_FindNext_IVR</STRONG> (Thumb, 520 bytes, Stack size 48 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
</UL>

<P><STRONG><a name="[7f2]"></a>_Findx0</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + In Cycle
<LI>Call Chain = _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[7f3]"></a>_Findx1</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + In Cycle
<LI>Call Chain = _Findx1 &rArr;  _Findx1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[7f0]"></a>_Findy1</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + In Cycle
<LI>Call Chain = _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[7e3]"></a>_Invalidate1Abs</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Invalidate1Abs &rArr; GUI_MergeRect &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[108]"></a>_OnExit</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _OnExit &rArr; GUI__memset
</UL>
<BR>[Calls]<UL><LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WM.o(.text)
</UL>
<P><STRONG><a name="[7fc]"></a>_Paint1Trans</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _Paint1Trans &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
</UL>
<BR>[Called By]<UL><LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[7fd]"></a>_PaintTransChildren</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68 + In Cycle
<LI>Call Chain = _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[7df]"></a>_SetClipRectUserIntersect</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>

<P><STRONG><a name="[107]"></a>_cbBackWin</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _cbBackWin &rArr; GUI_Clear &rArr; GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WM.o(.text)
</UL>
<P><STRONG><a name="[106]"></a>_cbPaintMemDev</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = _cbPaintMemDev &rArr; WM__PaintWinAndOverlays &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WM.o(.text)
</UL>
<P><STRONG><a name="[7f5]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[803]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 136 bytes, WM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
</UL>

<P><STRONG><a name="[80b]"></a>_GetDialogItem</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, WM_GetDialogItem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + In Cycle
<LI>Call Chain = _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>

<P><STRONG><a name="[109]"></a>_cbTimer</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, WM_Timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _cbTimer &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM__GetClientRectEx &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WM_Timer.o(.text)
</UL>
<P><STRONG><a name="[194]"></a>_Color2IndexBulk</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, GUICC_8888.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2IndexBulk
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUICC_8888.o(.rodata)
</UL>
<P><STRONG><a name="[192]"></a>_Color2Index_8888</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, GUICC_8888.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUICC_8888.o(.rodata)
</UL>
<P><STRONG><a name="[193]"></a>_GetIndexMask_8888</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUICC_8888.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUICC_8888.o(.rodata)
</UL>
<P><STRONG><a name="[195]"></a>_Index2ColorBulk</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, GUICC_8888.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBulk
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUICC_8888.o(.rodata)
</UL>
<P><STRONG><a name="[814]"></a>_DispLine</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, GUI_CharLine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _DispLine &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[815]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
</UL>
<BR>[Called By]<UL><LI><a href="#[819]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
</UL>

<P><STRONG><a name="[5]"></a>_Log2VisBuffered</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, GUI_CharLine.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_CharLine.o(.data)
</UL>
<P><STRONG><a name="[825]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, GUI_GetColor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
</UL>
<BR>[Called By]<UL><LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
</UL>

<P><STRONG><a name="[828]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_SaveContext.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = [Anonymous Symbol] &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
</UL>

<P><STRONG><a name="[10d]"></a>_Color2Index</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[110]"></a>_Color2IndexBulk</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[831]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 350 bytes, Stack size 64 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = _DrawBitLine1BPP &rArr; [Anonymous Symbol] &rArr; _DrawBitmapLine &rArr; LCD_GetBitsPerPixelEx &rArr; [Anonymous Symbol] &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[834]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 278 bytes, Stack size 40 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _DrawBitLine2BPP &rArr; _SetPixelIndex &rArr; _MixColors &rArr; GUI__MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[835]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 278 bytes, Stack size 40 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _DrawBitLine4BPP &rArr; _SetPixelIndex &rArr; _MixColors &rArr; GUI__MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[836]"></a>_DrawBitLine8BPP</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DrawBitLine8BPP &rArr; _SetPixelIndex &rArr; _MixColors &rArr; GUI__MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[112]"></a>_DrawBitmap</STRONG> (Thumb, 570 bytes, Stack size 72 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine1BPP &rArr; [Anonymous Symbol] &rArr; _DrawBitmapLine &rArr; LCD_GetBitsPerPixelEx &rArr; [Anonymous Symbol] &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[835]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[82f]"></a>_DrawBitmapLine</STRONG> (Thumb, 88 bytes, Stack size 56 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DrawBitmapLine &rArr; LCD_GetBitsPerPixelEx &rArr; [Anonymous Symbol] &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[113]"></a>_DrawHLine</STRONG> (Thumb, 104 bytes, Stack size 48 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _DrawHLine &rArr; _GetLine &rArr; LCD_GetBitsPerPixelEx &rArr; [Anonymous Symbol] &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[114]"></a>_DrawVLine</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _DrawVLine &rArr; _SetPixelIndex &rArr; _MixColors &rArr; GUI__MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[115]"></a>_FillRect</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _FillRect &rArr; _DrawHLine &rArr; _GetLine &rArr; LCD_GetBitsPerPixelEx &rArr; [Anonymous Symbol] &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[11c]"></a>_GetDevData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[11a]"></a>_GetDevFunc</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetDevFunc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[11b]"></a>_GetDevProp</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[10f]"></a>_GetIndexMask</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[82e]"></a>_GetLine</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetLine &rArr; LCD_GetBitsPerPixelEx &rArr; [Anonymous Symbol] &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ExpandPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>

<P><STRONG><a name="[116]"></a>_GetPixelIndex</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[11d]"></a>_GetRect</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[10e]"></a>_Index2Color</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[111]"></a>_Index2ColorBulk</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[837]"></a>_InitAlpha</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _InitAlpha &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
</UL>

<P><STRONG><a name="[82a]"></a>_MixColors</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _MixColors &rArr; GUI__MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>

<P><STRONG><a name="[10b]"></a>_OnExit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[10a]"></a>_ReadRectFromMemdev</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ReadRectFromMemdev &rArr; GUI_MEMDEV_GetBitsPerPixel &rArr; LCD__GetBPPDevice
</UL>
<BR>[Calls]<UL><LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ExpandPixelIndices
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[119]"></a>_SetOrg</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_SetAlpha.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[117]"></a>_SetPixelIndex</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _SetPixelIndex &rArr; _MixColors &rArr; GUI__MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[835]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[118]"></a>_XorPixel</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _XorPixel &rArr; _SetPixelIndex &rArr; _MixColors &rArr; GUI__MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetAlpha.o(.text)
</UL>
<P><STRONG><a name="[832]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 36 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = [Anonymous Symbol] &rArr; _DrawBitmapLine &rArr; LCD_GetBitsPerPixelEx &rArr; [Anonymous Symbol] &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapLine
</UL>
<BR>[Called By]<UL><LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>

<P><STRONG><a name="[833]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, GUI_SetAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>

<P><STRONG><a name="[83d]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, GUI_SetDefault.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
</UL>
<BR>[Called By]<UL><LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[840]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 216 bytes, Stack size 48 bytes, GUI_SetOrientationC0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _DrawBitLine1BPP &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_C0
</UL>

<P><STRONG><a name="[843]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 274 bytes, Stack size 40 bytes, GUI_SetOrientationC0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawBitLine2BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_C0
</UL>

<P><STRONG><a name="[844]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 274 bytes, Stack size 40 bytes, GUI_SetOrientationC0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawBitLine4BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_C0
</UL>

<P><STRONG><a name="[845]"></a>_DrawBitLine8BPP</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, GUI_SetOrientationC0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DrawBitLine8BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_C0
</UL>

<P><STRONG><a name="[196]"></a>_DrawBitmap_C0</STRONG> (Thumb, 330 bytes, Stack size 56 bytes, GUI_SetOrientationC0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _DrawBitmap_C0 &rArr; _DrawBitLine1BPP &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[845]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientationC0.o(.rodata)
</UL>
<P><STRONG><a name="[197]"></a>_DrawHLine_C0</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, GUI_SetOrientationC0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _DrawHLine_C0 &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientationC0.o(.rodata)
</UL>
<P><STRONG><a name="[198]"></a>_DrawVLine_C0</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, GUI_SetOrientationC0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _DrawVLine_C0 &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientationC0.o(.rodata)
</UL>
<P><STRONG><a name="[199]"></a>_FillRect_C0</STRONG> (Thumb, 92 bytes, Stack size 40 bytes, GUI_SetOrientationC0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _FillRect_C0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientationC0.o(.rodata)
</UL>
<P><STRONG><a name="[19a]"></a>_GetPixelIndex_C0</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, GUI_SetOrientationC0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetPixelIndex_C0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientationC0.o(.rodata)
</UL>
<P><STRONG><a name="[19b]"></a>_SetPixelIndex_C0</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, GUI_SetOrientationC0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _SetPixelIndex_C0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientationC0.o(.rodata)
</UL>
<P><STRONG><a name="[19c]"></a>_XorPixel_C0</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, GUI_SetOrientationC0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _XorPixel_C0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientationC0.o(.rodata)
</UL>
<P><STRONG><a name="[841]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, GUI_SetOrientationC0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>

<P><STRONG><a name="[842]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, GUI_SetOrientationC0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_C0
</UL>

<P><STRONG><a name="[847]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, GUI_SetOrientationC0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine_C0
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine_C0
</UL>

<P><STRONG><a name="[846]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, GUI_SetOrientationC0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine_C0
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine_C0
</UL>

<P><STRONG><a name="[848]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 246 bytes, Stack size 56 bytes, GUI_SetOrientationC16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _DrawBitLine1BPP &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_CX
</UL>

<P><STRONG><a name="[84a]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 298 bytes, Stack size 40 bytes, GUI_SetOrientationC16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _DrawBitLine2BPP &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[84b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_CX
</UL>

<P><STRONG><a name="[84c]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 300 bytes, Stack size 40 bytes, GUI_SetOrientationC16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _DrawBitLine4BPP &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[84b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_CX
</UL>

<P><STRONG><a name="[84d]"></a>_DrawBitLine8BPP</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, GUI_SetOrientationC16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DrawBitLine8BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_CX
</UL>

<P><STRONG><a name="[19d]"></a>_DrawBitmap_CX</STRONG> (Thumb, 568 bytes, Stack size 88 bytes, GUI_SetOrientationC16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _DrawBitmap_CX &rArr; _DrawBitLine1BPP &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[84d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientationC16.o(.rodata)
</UL>
<P><STRONG><a name="[19e]"></a>_DrawHLine_CX</STRONG> (Thumb, 8 bytes, Stack size 16 bytes, GUI_SetOrientationC16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DrawHLine_CX &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientationC16.o(.rodata)
</UL>
<P><STRONG><a name="[19f]"></a>_DrawVLine_CX</STRONG> (Thumb, 8 bytes, Stack size 16 bytes, GUI_SetOrientationC16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _DrawVLine_CX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientationC16.o(.rodata)
</UL>
<P><STRONG><a name="[1a0]"></a>_FillRect_CX</STRONG> (Thumb, 246 bytes, Stack size 64 bytes, GUI_SetOrientationC16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _FillRect_CX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientationC16.o(.rodata)
</UL>
<P><STRONG><a name="[1a1]"></a>_GetPixelIndex_CX</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, GUI_SetOrientationC16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetPixelIndex_CX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientationC16.o(.rodata)
</UL>
<P><STRONG><a name="[1a2]"></a>_SetPixelIndex_CX</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, GUI_SetOrientationC16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _SetPixelIndex_CX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientationC16.o(.rodata)
</UL>
<P><STRONG><a name="[1a3]"></a>_XorPixel_CX</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, GUI_SetOrientationC16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _XorPixel_CX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientationC16.o(.rodata)
</UL>
<P><STRONG><a name="[849]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, GUI_SetOrientationC16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>

<P><STRONG><a name="[84b]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, GUI_SetOrientationC16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
</UL>

<P><STRONG><a name="[84e]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, GUI_SetOrientationC16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine_CX
</UL>

<P><STRONG><a name="[84f]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 246 bytes, Stack size 56 bytes, GUI_SetOrientationC32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _DrawBitLine1BPP &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_CX
</UL>

<P><STRONG><a name="[851]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 298 bytes, Stack size 40 bytes, GUI_SetOrientationC32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _DrawBitLine2BPP &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_CX
</UL>

<P><STRONG><a name="[853]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 300 bytes, Stack size 40 bytes, GUI_SetOrientationC32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _DrawBitLine4BPP &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_CX
</UL>

<P><STRONG><a name="[854]"></a>_DrawBitLine8BPP</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, GUI_SetOrientationC32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DrawBitLine8BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_CX
</UL>

<P><STRONG><a name="[1a4]"></a>_DrawBitmap_CX</STRONG> (Thumb, 568 bytes, Stack size 88 bytes, GUI_SetOrientationC32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _DrawBitmap_CX &rArr; _DrawBitLine1BPP &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientationC32.o(.rodata)
</UL>
<P><STRONG><a name="[1a5]"></a>_DrawHLine_CX</STRONG> (Thumb, 8 bytes, Stack size 16 bytes, GUI_SetOrientationC32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DrawHLine_CX &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientationC32.o(.rodata)
</UL>
<P><STRONG><a name="[1a6]"></a>_DrawVLine_CX</STRONG> (Thumb, 8 bytes, Stack size 16 bytes, GUI_SetOrientationC32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _DrawVLine_CX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientationC32.o(.rodata)
</UL>
<P><STRONG><a name="[1a7]"></a>_FillRect_CX</STRONG> (Thumb, 244 bytes, Stack size 64 bytes, GUI_SetOrientationC32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _FillRect_CX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientationC32.o(.rodata)
</UL>
<P><STRONG><a name="[1a8]"></a>_GetPixelIndex_CX</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, GUI_SetOrientationC32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetPixelIndex_CX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientationC32.o(.rodata)
</UL>
<P><STRONG><a name="[1a9]"></a>_SetPixelIndex_CX</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, GUI_SetOrientationC32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _SetPixelIndex_CX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientationC32.o(.rodata)
</UL>
<P><STRONG><a name="[1aa]"></a>_XorPixel_CX</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, GUI_SetOrientationC32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _XorPixel_CX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientationC32.o(.rodata)
</UL>
<P><STRONG><a name="[850]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, GUI_SetOrientationC32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>

<P><STRONG><a name="[852]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, GUI_SetOrientationC32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
</UL>

<P><STRONG><a name="[855]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, GUI_SetOrientationC32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine_CX
</UL>

<P><STRONG><a name="[856]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 240 bytes, Stack size 56 bytes, GUI_SetOrientationC8.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _DrawBitLine1BPP &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[857]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_CX
</UL>

<P><STRONG><a name="[858]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 290 bytes, Stack size 40 bytes, GUI_SetOrientationC8.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _DrawBitLine2BPP &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_CX
</UL>

<P><STRONG><a name="[85a]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 292 bytes, Stack size 40 bytes, GUI_SetOrientationC8.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _DrawBitLine4BPP &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_CX
</UL>

<P><STRONG><a name="[85b]"></a>_DrawBitLine8BPP</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, GUI_SetOrientationC8.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DrawBitLine8BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_CX
</UL>

<P><STRONG><a name="[1ab]"></a>_DrawBitmap_CX</STRONG> (Thumb, 564 bytes, Stack size 88 bytes, GUI_SetOrientationC8.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _DrawBitmap_CX &rArr; _DrawBitLine1BPP &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientationC8.o(.rodata)
</UL>
<P><STRONG><a name="[1ac]"></a>_DrawHLine_CX</STRONG> (Thumb, 8 bytes, Stack size 16 bytes, GUI_SetOrientationC8.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DrawHLine_CX &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientationC8.o(.rodata)
</UL>
<P><STRONG><a name="[1ad]"></a>_DrawVLine_CX</STRONG> (Thumb, 8 bytes, Stack size 16 bytes, GUI_SetOrientationC8.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _DrawVLine_CX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientationC8.o(.rodata)
</UL>
<P><STRONG><a name="[1ae]"></a>_FillRect_CX</STRONG> (Thumb, 250 bytes, Stack size 72 bytes, GUI_SetOrientationC8.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = _FillRect_CX &rArr; GUI__memset
</UL>
<BR>[Calls]<UL><LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientationC8.o(.rodata)
</UL>
<P><STRONG><a name="[1af]"></a>_GetPixelIndex_CX</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, GUI_SetOrientationC8.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetPixelIndex_CX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientationC8.o(.rodata)
</UL>
<P><STRONG><a name="[1b0]"></a>_SetPixelIndex_CX</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, GUI_SetOrientationC8.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _SetPixelIndex_CX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientationC8.o(.rodata)
</UL>
<P><STRONG><a name="[1b1]"></a>_XorPixel_CX</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, GUI_SetOrientationC8.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _XorPixel_CX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SetOrientationC8.o(.rodata)
</UL>
<P><STRONG><a name="[857]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, GUI_SetOrientationC8.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>

<P><STRONG><a name="[859]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, GUI_SetOrientationC8.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
</UL>

<P><STRONG><a name="[85c]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, GUI_SetOrientationC8.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine_CX
</UL>

<P><STRONG><a name="[85e]"></a>_Link</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, GUI_Timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Link
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[812]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[863]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetDelay
</UL>

<P><STRONG><a name="[11f]"></a>_OnExit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_Timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_Timer.o(.text)
</UL>
<P><STRONG><a name="[85d]"></a>_Unlink</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, GUI_Timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Unlink
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[812]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[863]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetDelay
</UL>

<P><STRONG><a name="[122]"></a>_CalcSizeOfChar</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_UC_EncodeNone.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_UC_EncodeNone.o(.text)
</UL>
<P><STRONG><a name="[123]"></a>_Encode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, GUI_UC_EncodeNone.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_UC_EncodeNone.o(.text)
</UL>
<P><STRONG><a name="[120]"></a>_GetCharCode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_UC_EncodeNone.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_UC_EncodeNone.o(.text)
</UL>
<P><STRONG><a name="[121]"></a>_GetCharSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_UC_EncodeNone.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_UC_EncodeNone.o(.text)
</UL>
<P><STRONG><a name="[125]"></a>_OnExit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, GUI__Alpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI__Alpha.o(.text)
</UL>
<P><STRONG><a name="[867]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 88 bytes, GUI__Alpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
</UL>

<P><STRONG><a name="[86c]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 72 bytes, GUI__DrawBitmap16bpp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
</UL>

<P><STRONG><a name="[871]"></a>_DrawTwinArc2</STRONG> (Thumb, 396 bytes, Stack size 56 bytes, GUI__DrawTwinArc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _DrawTwinArc2 &rArr; LCD_DrawHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
</UL>

<P><STRONG><a name="[86f]"></a>_DrawTwinArc4</STRONG> (Thumb, 498 bytes, Stack size 64 bytes, GUI__DrawTwinArc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _DrawTwinArc4 &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
<LI><a href="#[870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
</UL>

<P><STRONG><a name="[872]"></a>_FillTrippleArc</STRONG> (Thumb, 644 bytes, Stack size 88 bytes, GUI__DrawTwinArc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTrippleArcPara
</UL>
<BR>[Called By]<UL><LI><a href="#[875]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__FillTrippleArc
</UL>

<P><STRONG><a name="[86e]"></a>_GetTrippleArcPara</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, GUI__DrawTwinArc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillTrippleArc
</UL>

<P><STRONG><a name="[870]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, GUI__DrawTwinArc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[86f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc4
</UL>

<P><STRONG><a name="[874]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, GUI__DrawTwinArc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
</UL>

<P><STRONG><a name="[22]"></a>_GetCursorCharacter</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, GUI__GetCursorPos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetCursorCharacter
</UL>
<BR>[Calls]<UL><LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI__GetCursorPos.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>_GetCursorPosChar</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, GUI__GetCursorPos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetCursorPosChar &rArr; GUI_UC__NumBytes2NumChars
</UL>
<BR>[Calls]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharSize
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumBytes2NumChars
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI__GetCursorPos.o(.data)
</UL>
<P><STRONG><a name="[21]"></a>_GetCursorPosX</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, GUI__GetCursorPos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _GetCursorPosX &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[815]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI__GetCursorPos.o(.data)
</UL>
<P><STRONG><a name="[126]"></a>_OnExit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUI__ManageCache.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI__ManageCache.o(.text)
</UL>
<P><STRONG><a name="[1b3]"></a>_SetBkColor</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, LCD.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetBkColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LCD.o(.rodata)
</UL>
<P><STRONG><a name="[1b2]"></a>_SetColor</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, LCD.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LCD.o(.rodata)
</UL>
<P><STRONG><a name="[1b4]"></a>_SetDrawMode</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, LCD.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _SetDrawMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LCD.o(.rodata)
</UL>
<P><STRONG><a name="[87e]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, LCD.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
</UL>

<P><STRONG><a name="[87f]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, LCD.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
</UL>

<P><STRONG><a name="[127]"></a>_MixColorsGamma16</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, LCD_AA.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _MixColorsGamma16
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LCD_AA.o(.text)
</UL>
<P><STRONG><a name="[883]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, LCD_AA.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AA_MixColors16
</UL>

<P><STRONG><a name="[12a]"></a>_OnExit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, LCD_Color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LCD_Color.o(.text)
</UL>
<P><STRONG><a name="[889]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 268 bytes, Stack size 48 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _DrawBitLine1BPP &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[88b]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 232 bytes, Stack size 40 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawBitLine2BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[887]"></a>_DrawBitLine32BPP_DDB</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DrawBitLine32BPP_DDB &rArr; GUI__MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[88c]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 352 bytes, Stack size 40 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawBitLine4BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[12c]"></a>_DrawBitmap</STRONG> (Thumb, 660 bytes, Stack size 88 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine1BPP &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[887]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP_DDB
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.text)
</UL>
<P><STRONG><a name="[12d]"></a>_DrawHLine</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.text)
</UL>
<P><STRONG><a name="[12e]"></a>_DrawVLine</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawVLine &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.text)
</UL>
<P><STRONG><a name="[12f]"></a>_FillRect</STRONG> (Thumb, 172 bytes, Stack size 56 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.text)
</UL>
<P><STRONG><a name="[136]"></a>_GetDevData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUIDEV_32.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.text)
</UL>
<P><STRONG><a name="[134]"></a>_GetDevFunc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUIDEV_32.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.text)
</UL>
<P><STRONG><a name="[135]"></a>_GetDevProp</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, GUIDEV_32.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.text)
</UL>
<P><STRONG><a name="[130]"></a>_GetPixelIndex</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.text)
</UL>
<P><STRONG><a name="[137]"></a>_GetRect</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetRect
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.text)
</UL>
<P><STRONG><a name="[133]"></a>_SetOrg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, GUIDEV_32.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.text)
</UL>
<P><STRONG><a name="[131]"></a>_SetPixelIndex</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _SetPixelIndex &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[88d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.text)
</UL>
<P><STRONG><a name="[888]"></a>_XY2PTR</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[132]"></a>_XorPixel</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _XorPixel &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_32.o(.text)
</UL>
<P><STRONG><a name="[88a]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>

<P><STRONG><a name="[88d]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, GUIDEV_32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>

<P><STRONG><a name="[88f]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, GUIDEV_Banding.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[897]"></a>_AddContent</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, GUIDEV_StaticDevices.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
</UL>

<P><STRONG><a name="[893]"></a>_CopyContent</STRONG> (Thumb, 404 bytes, Stack size 56 bytes, GUIDEV_StaticDevices.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
</UL>

<P><STRONG><a name="[89a]"></a>_CreateStatic</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, GUIDEV_StaticDevices.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDefault
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateWindowDevice
<LI><a href="#[89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[894]"></a>_CreateStaticDevice</STRONG> (Thumb, 300 bytes, Stack size 48 bytes, GUIDEV_StaticDevices.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _CreateStaticDevice &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AlphaPreserveTrans
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[895]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>

<P><STRONG><a name="[899]"></a>_GetWindowDevice</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, GUIDEV_StaticDevices.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
<LI><a href="#[89d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetWindowDevice
</UL>

<P><STRONG><a name="[895]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, GUIDEV_StaticDevices.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[89c]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUIDEV_StaticDevices.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateStatic
</UL>

<P><STRONG><a name="[139]"></a>GUI_USAGE_BM_AddHLine</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, GUIDEV_UsageBM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_USAGE_BM_AddHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_UsageBM.o(.text)
</UL>
<P><STRONG><a name="[138]"></a>GUI_USAGE_BM_AddPixel</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, GUIDEV_UsageBM.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_UsageBM.o(.text)
</UL>
<P><STRONG><a name="[13a]"></a>GUI_USAGE_BM_Clear</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, GUIDEV_UsageBM.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_UsageBM.o(.text)
</UL>
<P><STRONG><a name="[13c]"></a>GUI_USAGE_BM_GetNextDirty</STRONG> (Thumb, 154 bytes, Stack size 12 bytes, GUIDEV_UsageBM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUI_USAGE_BM_GetNextDirty
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_UsageBM.o(.text)
</UL>
<P><STRONG><a name="[13b]"></a>_GUI_USAGE_BM_Delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUIDEV_UsageBM.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _GUI_USAGE_BM_Delete &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUIDEV_UsageBM.o(.text)
</UL>
<P><STRONG><a name="[8a1]"></a>_Convert16</STRONG> (Thumb, 46 bytes, Stack size 40 bytes, GUIDEV_WriteToActiveOpaque.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = _Convert16 &rArr; [Anonymous Symbol] &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[8a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[8a3]"></a>_Convert8</STRONG> (Thumb, 46 bytes, Stack size 40 bytes, GUIDEV_WriteToActiveOpaque.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = _Convert8 &rArr; [Anonymous Symbol] &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[8a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[8a4]"></a>_WriteToActiveOpaque_8</STRONG> (Thumb, 950 bytes, Stack size 128 bytes, GUIDEV_WriteToActiveOpaque.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _WriteToActiveOpaque_8 &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert8
<LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert16
</UL>
<BR>[Called By]<UL><LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[8a6]"></a>_WriteToActiveOpaque_HT</STRONG> (Thumb, 756 bytes, Stack size 96 bytes, GUIDEV_WriteToActiveOpaque.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _WriteToActiveOpaque_HT &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[8a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[8a2]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, GUIDEV_WriteToActiveOpaque.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = [Anonymous Symbol] &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert8
<LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert16
</UL>

<P><STRONG><a name="[8a5]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 128 bytes, GUIDEV_WriteToActiveOpaque.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[8a7]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 96 bytes, GUIDEV_WriteToActiveOpaque.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[8a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
</UL>

<P><STRONG><a name="[25]"></a>_Create</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, CHECKBOX_Skin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> CHECKBOX_Skin.o(.data)
</UL>
<P><STRONG><a name="[24]"></a>_Paint</STRONG> (Thumb, 140 bytes, Stack size 72 bytes, CHECKBOX_Skin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _Paint &rArr; WM_GetWindowSizeX &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> CHECKBOX_Skin.o(.data)
</UL>
<P><STRONG><a name="[8a9]"></a>_DrawBackground</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, CHECKBOX_SkinFlex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _DrawBackground &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[8ab]"></a>_DrawBitmap</STRONG> (Thumb, 180 bytes, Stack size 48 bytes, CHECKBOX_SkinFlex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _DrawBitmap &rArr; _GenCheck &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GenCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[8ad]"></a>_DrawFocus</STRONG> (Thumb, 220 bytes, Stack size 48 bytes, CHECKBOX_SkinFlex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = _DrawFocus &rArr; GUI_DrawFocusRect &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYSizeOfFont
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[8aa]"></a>_GenCheck</STRONG> (Thumb, 302 bytes, Stack size 48 bytes, CHECKBOX_SkinFlex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = _GenCheck &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[8ac]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, CHECKBOX_SkinFlex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[c]"></a>_Create</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, FRAMEWIN_Skin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> FRAMEWIN_Skin.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>_GetBorderSize</STRONG> (Thumb, 60 bytes, Stack size 56 bytes, FRAMEWIN_Skin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetBorderSize
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> FRAMEWIN_Skin.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>_Paint</STRONG> (Thumb, 256 bytes, Stack size 96 bytes, FRAMEWIN_Skin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = _Paint &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> FRAMEWIN_Skin.o(.data)
</UL>
<P><STRONG><a name="[8b2]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 96 bytes, FRAMEWIN_SkinFlex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
</UL>

<P><STRONG><a name="[13d]"></a>_DrawBitmap</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, GUI_DRAW_BITMAP.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _DrawBitmap &rArr; GUI_DrawBitmap &rArr; GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_DRAW_BITMAP.o(.text)
</UL>
<P><STRONG><a name="[13e]"></a>_GetXSize</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, GUI_DRAW_BITMAP.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetXSize
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_DRAW_BITMAP.o(.text)
</UL>
<P><STRONG><a name="[13f]"></a>_GetYSize</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, GUI_DRAW_BITMAP.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetYSize
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_DRAW_BITMAP.o(.text)
</UL>
<P><STRONG><a name="[8bf]"></a>_GetDividerIndex</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, HEADER.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _GetDividerIndex &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[8c7]"></a>_GetItemIndex</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, HEADER.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _GetItemIndex &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
</UL>

<P><STRONG><a name="[8c3]"></a>_HandlePID</STRONG> (Thumb, 236 bytes, Stack size 40 bytes, HEADER.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = _HandlePID &rArr; GUI_CURSOR_SelectEx &rArr; GUI_SPRITE__CreateEx &rArr; _SpriteDraw &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[8c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_GetStateEx
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDividerIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
</UL>

<P><STRONG><a name="[8c0]"></a>_LimitDragWitdh</STRONG> (Thumb, 226 bytes, Stack size 48 bytes, HEADER.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _LimitDragWitdh &rArr; HEADER_SetItemWidth &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[8c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[8c2]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, HEADER.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
</UL>

<P><STRONG><a name="[8c9]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, HEADER.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Create
</UL>

<P><STRONG><a name="[8db]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, SCROLLBAR_Defaults.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetDefaultWidth
</UL>

<P><STRONG><a name="[8dd]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, SCROLLBAR_Defaults.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetDefaultWidth
</UL>

<P><STRONG><a name="[8e0]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, WIDGET_FillStringInRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
</UL>

<P><STRONG><a name="[141]"></a>_cbInvalidateOne</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, WM_BringToTop.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _cbInvalidateOne &rArr; WM_InvalidateWindow &rArr; [Anonymous Symbol] &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> WM_BringToTop.o(.text)
</UL>
<P><STRONG><a name="[8e3]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, WM_GetClientRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[806]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
</UL>

<P><STRONG><a name="[8e4]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, WM_GetClientRect.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
</UL>
<BR>[Called By]<UL><LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>

<P><STRONG><a name="[8e5]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, WM_GetInsideRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = [Anonymous Symbol] &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM__GetClientRectEx &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[8cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
</UL>

<P><STRONG><a name="[8e7]"></a>_GetDialogItem</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, WM_GetScrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + In Cycle
<LI>Call Chain = _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>

<P><STRONG><a name="[8e8]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM_GetScrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = [Anonymous Symbol] &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
</UL>

<P><STRONG><a name="[8e9]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM_GetWindowSize.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeX
</UL>

<P><STRONG><a name="[8eb]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, WM_GetWindowSize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
</UL>

<P><STRONG><a name="[8ee]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, WM_SetCaptureMove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
</UL>

<P><STRONG><a name="[8ef]"></a>_GetNextChild</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, WM_SetFocusOnNextChild.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetNextChild
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
</UL>

<P><STRONG><a name="[8f2]"></a>_GetPrevChild</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, WM_SetFocusOnPrevChild.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _GetPrevChild &rArr; WM__GetPrevSibling &rArr; WM__GetFirstSibling &rArr; WM_GetParent
</UL>
<BR>[Calls]<UL><LI><a href="#[8f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetLastSibling
<LI><a href="#[8e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
</UL>
<BR>[Called By]<UL><LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
</UL>

<P><STRONG><a name="[8f4]"></a>_SetScrollbar</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, WM_SetScrollbar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteSecure
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateAttached
</UL>
<BR>[Called By]<UL><LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[8f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[8f7]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM_SetScrollbar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetScrollbarV
</UL>

<P><STRONG><a name="[8f9]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, WM_SetScrollbar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetScrollbarH
</UL>

<P><STRONG><a name="[1b5]"></a>_Color2Index_0</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, GUICC_0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Color2Index_0 &rArr; LCD_GetPalette &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[8fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalcColorDist
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUICC_0.o(.rodata)
</UL>
<P><STRONG><a name="[1b7]"></a>_GetIndexMask_0</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, GUICC_0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetIndexMask_0
</UL>
<BR>[Calls]<UL><LI><a href="#[8fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUICC_0.o(.rodata)
</UL>
<P><STRONG><a name="[1b6]"></a>_Index2Color_0</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, GUICC_0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Index2Color_0 &rArr; LCD_GetPalette &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[8fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUICC_0.o(.rodata)
</UL>
<P><STRONG><a name="[142]"></a>_OnExit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_Curs1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _OnExit &rArr; GUI__memset
</UL>
<BR>[Calls]<UL><LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_Curs1.o(.text)
</UL>
<P><STRONG><a name="[902]"></a>_Show</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, GUI_Curs1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _Show &rArr; GUI_SPRITE_Show &rArr; _SpriteDraw &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
<LI><a href="#[905]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[911]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_ShowEx
</UL>

<P><STRONG><a name="[90a]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, GUI_Curs1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetBitmapEx
<LI><a href="#[90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetBitmap
</UL>

<P><STRONG><a name="[90b]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, GUI_Curs1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[90d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetBitmapEx
<LI><a href="#[90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetBitmap
</UL>

<P><STRONG><a name="[919]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, GUI_GetOrg.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOrg
</UL>

<P><STRONG><a name="[f]"></a>_GetCharWrap</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, GUI__Wrap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _GetCharWrap &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[815]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI__Wrap.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>_GetWordWrap</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, GUI__Wrap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _GetWordWrap &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[815]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI__Wrap.o(.data)
</UL>
<P><STRONG><a name="[920]"></a>_WrapGetNumCharsDisp</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, GUI__Wrap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _WrapGetNumCharsDisp &rArr; GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[81e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsDisp
<LI><a href="#[921]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
</UL>

<P><STRONG><a name="[13]"></a>_NextPixel_End</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, LCD_NextPixelAPI.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _NextPixel_End &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[922]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_FlushBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LCD_NextPixelAPI.o(.data)
</UL>
<P><STRONG><a name="[922]"></a>_NextPixel_FlushBuffer</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, LCD_NextPixelAPI.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _NextPixel_FlushBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_SetPixel
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_NextLine
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_End
</UL>

<P><STRONG><a name="[12]"></a>_NextPixel_NextLine</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, LCD_NextPixelAPI.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _NextPixel_NextLine &rArr; _NextPixel_FlushBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[922]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_FlushBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LCD_NextPixelAPI.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>_NextPixel_SetPixel</STRONG> (Thumb, 236 bytes, Stack size 8 bytes, LCD_NextPixelAPI.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _NextPixel_SetPixel &rArr; _NextPixel_FlushBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[922]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_FlushBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LCD_NextPixelAPI.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>_NextPixel_Start</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, LCD_NextPixelAPI.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _NextPixel_Start &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LCD_NextPixelAPI.o(.data)
</UL>
<P><STRONG><a name="[923]"></a>LCD_ReadRectEx</STRONG> (Thumb, 388 bytes, Stack size 48 bytes, LCD_ReadRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LCD_ReadRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
</UL>
<BR>[Called By]<UL><LI><a href="#[869]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRectEx
<LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRectNoClip
<LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRect
</UL>

<P><STRONG><a name="[928]"></a>_WriteToActiveAlpha</STRONG> (Thumb, 346 bytes, Stack size 104 bytes, GUIDEV_WriteToActiveAlpha.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = _WriteToActiveAlpha &rArr; GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[86b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AllocAlphaBuffer
<LI><a href="#[91d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndicesEx
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
</UL>

<P><STRONG><a name="[15]"></a>_Create</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, HEADER_Skin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> HEADER_Skin.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>_Paint</STRONG> (Thumb, 274 bytes, Stack size 112 bytes, HEADER_Skin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; WM_SetUserClipRect &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Address Reference Count : 1]<UL><LI> HEADER_Skin.o(.data)
</UL>
<P><STRONG><a name="[931]"></a>_DrawBackground</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, HEADER_SkinFlex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _DrawBackground &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
</UL>

<P><STRONG><a name="[932]"></a>_DrawBitmap</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, HEADER_SkinFlex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _DrawBitmap &rArr; GUI_DRAW__Draw
</UL>
<BR>[Calls]<UL><LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[8be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetYSize
<LI><a href="#[8bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetXSize
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
</UL>

<P><STRONG><a name="[933]"></a>_DrawText</STRONG> (Thumb, 174 bytes, Stack size 48 bytes, HEADER_SkinFlex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = _DrawText &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
</UL>

<P><STRONG><a name="[934]"></a>_OnTouch</STRONG> (Thumb, 628 bytes, Stack size 80 bytes, SCROLLBAR.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = _OnTouch &rArr; WM_CreateTimer &rArr; GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[936]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[935]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DivideRound32
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[945]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, WM_GetOrg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
</UL>

<P><STRONG><a name="[947]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, WM_GetOrg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
</UL>

<P><STRONG><a name="[949]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, WM_GetWindowRect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = [Anonymous Symbol] &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRect
</UL>

<P><STRONG><a name="[94a]"></a>_MoveDescendents</STRONG> (Thumb, 110 bytes, Stack size 56 bytes, WM_Move.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + In Cycle
<LI>Call Chain = _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[94a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>
<BR>[Called By]<UL><LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[94a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>

<P><STRONG><a name="[95d]"></a>_CreateBuffer</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, GUI_SPRITE.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[963]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
</UL>

<P><STRONG><a name="[966]"></a>_DoColorConversion</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _DoColorConversion &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[96d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
<LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[90d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmap
</UL>

<P><STRONG><a name="[144]"></a>_DrawBitmap</STRONG> (Thumb, 944 bytes, Stack size 128 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _DrawBitmap &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[95a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndexEx
<LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
<LI><a href="#[959]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipParam
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SPRITE.o(.text)
</UL>
<P><STRONG><a name="[145]"></a>_DrawHLine</STRONG> (Thumb, 436 bytes, Stack size 72 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _DrawHLine &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SPRITE.o(.text)
</UL>
<P><STRONG><a name="[146]"></a>_DrawVLine</STRONG> (Thumb, 418 bytes, Stack size 72 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _DrawVLine &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SPRITE.o(.text)
</UL>
<P><STRONG><a name="[147]"></a>_FillRect</STRONG> (Thumb, 476 bytes, Stack size 80 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _FillRect &rArr; _GetClipRect &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SPRITE.o(.text)
</UL>
<P><STRONG><a name="[95c]"></a>_FlushBuffer</STRONG> (Thumb, 110 bytes, Stack size 48 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _FlushBuffer &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[965]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[963]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
<LI><a href="#[962]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmap
<LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
</UL>

<P><STRONG><a name="[953]"></a>_GetBkIndex</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _GetBkIndex &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[956]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[955]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[965]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[963]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
<LI><a href="#[962]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmap
</UL>

<P><STRONG><a name="[957]"></a>_GetBkIndexAlpha</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _GetBkIndexAlpha &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[956]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[955]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[965]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[963]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
<LI><a href="#[962]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmap
</UL>

<P><STRONG><a name="[959]"></a>_GetClipParam</STRONG> (Thumb, 280 bytes, Stack size 12 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _GetClipParam
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[94f]"></a>_GetClipRect</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetClipRect &rArr; [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[14e]"></a>_GetDevData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, GUI_SPRITE.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SPRITE.o(.text)
</UL>
<P><STRONG><a name="[14c]"></a>_GetDevFunc</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetDevFunc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SPRITE.o(.text)
</UL>
<P><STRONG><a name="[14d]"></a>_GetDevProp</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_SPRITE.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SPRITE.o(.text)
</UL>
<P><STRONG><a name="[95f]"></a>_GetDeviceRect</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetDeviceRect &rArr; LCD_GetYSizeEx &rArr; [Anonymous Symbol] &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
</UL>
<BR>[Called By]<UL><LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[965]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[963]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
<LI><a href="#[962]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmap
</UL>

<P><STRONG><a name="[148]"></a>_GetPixelIndex</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _GetPixelIndex &rArr; _PixelExists &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[951]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PixelExists
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SPRITE.o(.text)
</UL>
<P><STRONG><a name="[14f]"></a>_GetRect</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_SPRITE.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SPRITE.o(.text)
</UL>
<P><STRONG><a name="[951]"></a>_PixelExists</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _PixelExists &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
</UL>

<P><STRONG><a name="[95e]"></a>_ReleaseBuffer</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = _ReleaseBuffer &rArr; _FlushBuffer &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
</UL>

<P><STRONG><a name="[962]"></a>_SetBitmap</STRONG> (Thumb, 876 bytes, Stack size 88 bytes, GUI_SPRITE.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[95f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDeviceRect
<LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndexAlpha
<LI><a href="#[953]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndex
<LI><a href="#[95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushBuffer
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[90d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmap
</UL>

<P><STRONG><a name="[964]"></a>_SetBitmapAndPosition</STRONG> (Thumb, 1308 bytes, Stack size 128 bytes, GUI_SPRITE.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[95f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDeviceRect
<LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndexAlpha
<LI><a href="#[953]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndex
<LI><a href="#[95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushBuffer
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[96d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
</UL>

<P><STRONG><a name="[14b]"></a>_SetOrg</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, GUI_SPRITE.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> GUI_SPRITE.o(.text)
</UL>
<P><STRONG><a name="[149]"></a>_SetPixelIndex</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = _SetPixelIndex &rArr; _PixelExists &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[951]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PixelExists
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SPRITE.o(.text)
</UL>
<P><STRONG><a name="[963]"></a>_SetPosition</STRONG> (Thumb, 1524 bytes, Stack size 184 bytes, GUI_SPRITE.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[95f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDeviceRect
<LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndexAlpha
<LI><a href="#[953]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndex
<LI><a href="#[95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushBuffer
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
</UL>

<P><STRONG><a name="[965]"></a>_SpriteDraw</STRONG> (Thumb, 740 bytes, Stack size 96 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _SpriteDraw &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[95f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDeviceRect
<LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndexAlpha
<LI><a href="#[953]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndex
<LI><a href="#[95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushBuffer
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[905]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
</UL>

<P><STRONG><a name="[960]"></a>_Undraw</STRONG> (Thumb, 426 bytes, Stack size 72 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = _Undraw &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[961]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
<LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[95f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDeviceRect
<LI><a href="#[95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushBuffer
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
<LI><a href="#[907]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
</UL>

<P><STRONG><a name="[14a]"></a>_XorPixel</STRONG> (Thumb, 218 bytes, Stack size 40 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = _XorPixel &rArr; _PixelExists &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[951]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PixelExists
</UL>
<BR>[Address Reference Count : 1]<UL><LI> GUI_SPRITE.o(.text)
</UL>
<P><STRONG><a name="[950]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
</UL>

<P><STRONG><a name="[954]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndexAlpha
<LI><a href="#[953]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndex
</UL>

<P><STRONG><a name="[955]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndexAlpha
<LI><a href="#[953]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndex
</UL>

<P><STRONG><a name="[956]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndexAlpha
<LI><a href="#[953]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndex
</UL>

<P><STRONG><a name="[958]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 128 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[95b]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 72 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>

<P><STRONG><a name="[961]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 72 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
</UL>

<P><STRONG><a name="[967]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, GUI_SPRITE.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
</UL>

<P><STRONG><a name="[96a]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, GUI_SPRITE.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_CreateEx
</UL>

<P><STRONG><a name="[96c]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, GUI_SPRITE.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[96b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Create
</UL>

<P><STRONG><a name="[150]"></a>_CalcPositions</STRONG> (Thumb, 346 bytes, Stack size 96 bytes, SCROLLBAR_Skin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _CalcPositions &rArr; WM_GetScrollbarV &rArr; [Anonymous Symbol] &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[96f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__Rect2VRect
<LI><a href="#[935]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DivideRound32
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> SCROLLBAR_Skin.o(.text)
</UL>
<P><STRONG><a name="[27]"></a>_Create</STRONG> (Thumb, 56 bytes, Stack size 64 bytes, SCROLLBAR_Skin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> SCROLLBAR_Skin.o(.data)
</UL>
<P><STRONG><a name="[26]"></a>_Paint</STRONG> (Thumb, 188 bytes, Stack size 112 bytes, SCROLLBAR_Skin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; _CalcPositions &rArr; WM_GetScrollbarV &rArr; [Anonymous Symbol] &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>
<BR>[Address Reference Count : 1]<UL><LI> SCROLLBAR_Skin.o(.data)
</UL>
<P><STRONG><a name="[154]"></a>_DrawBackgroundH</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, SCROLLBAR_SkinFlex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _DrawBackgroundH &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[971]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> SCROLLBAR_SkinFlex.o(.text)
</UL>
<P><STRONG><a name="[151]"></a>_DrawBackgroundV</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, SCROLLBAR_SkinFlex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _DrawBackgroundV &rArr; GUI_DrawGradientH &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[971]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> SCROLLBAR_SkinFlex.o(.text)
</UL>
<P><STRONG><a name="[971]"></a>_DrawFrame</STRONG> (Thumb, 244 bytes, Stack size 16 bytes, SCROLLBAR_SkinFlex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _DrawFrame &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackgroundV
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackgroundH
</UL>

<P><STRONG><a name="[156]"></a>_DrawGraspH</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, SCROLLBAR_SkinFlex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _DrawGraspH &rArr; GUI_DrawVLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> SCROLLBAR_SkinFlex.o(.text)
</UL>
<P><STRONG><a name="[153]"></a>_DrawGraspV</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, SCROLLBAR_SkinFlex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _DrawGraspV &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> SCROLLBAR_SkinFlex.o(.text)
</UL>
<P><STRONG><a name="[972]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, SCROLLBAR_SkinFlex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = [Anonymous Symbol]
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
</UL>

<P><STRONG><a name="[974]"></a>[Anonymous Symbol]</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, SCROLLBAR_SkinFlex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[973]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetSkinFlexProps
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetSkinFlexProps
</UL>

<P><STRONG><a name="[98f]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[97f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[988]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[991]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[992]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[989]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
<LI><a href="#[987]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[991]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[990]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[158]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[989]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
